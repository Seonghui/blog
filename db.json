{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/images/2020-02-03-post/5.png","path":"images/2020-02-03-post/5.png","modified":1,"renderable":0},{"_id":"source/images/bj-11054/image-1.png","path":"images/bj-11054/image-1.png","modified":1,"renderable":0},{"_id":"source/images/bj-11054/image-2.png","path":"images/bj-11054/image-2.png","modified":1,"renderable":0},{"_id":"source/images/bj-2193/example.png","path":"images/bj-2193/example.png","modified":1,"renderable":0},{"_id":"source/images/bj-9095/example.png","path":"images/bj-9095/example.png","modified":1,"renderable":0},{"_id":"source/images/js-prototype/prototype-link3.png","path":"images/js-prototype/prototype-link3.png","modified":1,"renderable":0},{"_id":"source/images/js-prototype/prototype-link4.png","path":"images/js-prototype/prototype-link4.png","modified":1,"renderable":0},{"_id":"source/images/js-prototype/prototype-object2.png","path":"images/js-prototype/prototype-object2.png","modified":1,"renderable":0},{"_id":"source/images/react-flux/flux-1.png","path":"images/react-flux/flux-1.png","modified":1,"renderable":0},{"_id":"source/images/react-flux/flux-2.png","path":"images/react-flux/flux-2.png","modified":1,"renderable":0},{"_id":"source/images/react-flux/flux-3.png","path":"images/react-flux/flux-3.png","modified":1,"renderable":0},{"_id":"source/images/react-flux/flux-mvc-1.png","path":"images/react-flux/flux-mvc-1.png","modified":1,"renderable":0},{"_id":"source/images/react-redux-counter/result.png","path":"images/react-redux-counter/result.png","modified":1,"renderable":0},{"_id":"source/images/react-index/index-1.png","path":"images/react-index/index-1.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"source/images/2020-07-26-next-styled-components/2020-07-11__12.06.58.png","path":"images/2020-07-26-next-styled-components/2020-07-11__12.06.58.png","modified":1,"renderable":0},{"_id":"source/images/bj-1003/fibo.png","path":"images/bj-1003/fibo.png","modified":1,"renderable":0},{"_id":"source/images/js-prototype/prototype-link2.png","path":"images/js-prototype/prototype-link2.png","modified":1,"renderable":0},{"_id":"source/images/js-prototype/prototype-link.png","path":"images/js-prototype/prototype-link.png","modified":1,"renderable":0},{"_id":"source/images/js-prototype/prototype-object.png","path":"images/js-prototype/prototype-object.png","modified":1,"renderable":0},{"_id":"source/images/js-prototype/prototype-object3.png","path":"images/js-prototype/prototype-object3.png","modified":1,"renderable":0},{"_id":"source/images/react-flux/flux-mvc-2.png","path":"images/react-flux/flux-mvc-2.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_1.59.00.png","path":"images/2020-07-26-debug-closure/2020-07-26_1.59.00.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.00.20.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.00.20.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.01.52.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.01.52.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.25.15.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.25.15.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.26.10.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.26.10.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.36.58.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.36.58.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.35.36.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.35.36.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.41.25.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.41.25.png","modified":1,"renderable":0},{"_id":"source/images/js-prototype/prototype-object4.png","path":"images/js-prototype/prototype-object4.png","modified":1,"renderable":0},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"source/images/2020-02-03-post/10.png","path":"images/2020-02-03-post/10.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_1.58.25.png","path":"images/2020-07-26-debug-closure/2020-07-26_1.58.25.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.18.18.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.18.18.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.19.55.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.19.55.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.38.10.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.38.10.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.40.36.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.40.36.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.39.16.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.39.16.png","modified":1,"renderable":0},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.42.14.png","path":"images/2020-07-26-debug-closure/2020-07-26_2.42.14.png","modified":1,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"source/images/2020-07-26-next-styled-components/2020-07-11__1.23.42.png","path":"images/2020-07-26-next-styled-components/2020-07-11__1.23.42.png","modified":1,"renderable":0},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"495dc0d217dbc3e7cb0c015a4aa9af3e7011d37f","modified":1595748620146},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1588665603880},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1588665603880},{"_id":"themes/next/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1588665603884},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1588665603880},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1588665603884},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1588665603884},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1588665603884},{"_id":"themes/next/README.md","hash":"dc026053a4d9fb97a58dbc3e9060e480f6852b23","modified":1588665603884},{"_id":"themes/next/_config.yml","hash":"d1f8ec27de334d41719d034f22e587da3deb6744","modified":1588665603885},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1588665603885},{"_id":"themes/next/gulpfile.js","hash":"72e6d5a6e32d5f95d82e4c4d0c963d39555bb760","modified":1588665603891},{"_id":"themes/next/package.json","hash":"213bd6ff96a027f5db6d1ce966a2cc75499a3e10","modified":1588665603911},{"_id":"source/_posts/2018-09-12-bj-2292.md","hash":"d43d3658c0f25a3753f4da0fbc03a8548e0d9bde","modified":1588665603851},{"_id":"source/_posts/2018-09-12-bj-9012.md","hash":"d2ebac05ef12a0d0eb4093bab4fb9a81d9270739","modified":1588665603851},{"_id":"source/_posts/2018-09-13-bj-2750.md","hash":"99d3f314567d8f667f7f6365db3723c89a3c649e","modified":1588665603852},{"_id":"source/_posts/2018-09-14-bj-2751.md","hash":"6a8c1fa8253400a4ccaf819f2edd9f889e01e0ab","modified":1588665603852},{"_id":"source/_posts/2018-09-13-bj-10799.md","hash":"ba08f1ebab45da0f5e09c821973170020a6aad1e","modified":1588665603852},{"_id":"source/_posts/2018-09-16-bj-4344.md","hash":"6f7c153e0b95c1e00c7f49365fdf58610b617135","modified":1588665603852},{"_id":"source/_posts/2018-09-17-bj-1924.md","hash":"741be6d5e9578d98edd08f6d69e5b30ae8278d83","modified":1588665603852},{"_id":"source/_posts/2018-09-17-java-plang-1.md","hash":"da9066d96adcc11ed76bd1b675ae6d623b1bda20","modified":1588665603852},{"_id":"source/_posts/2018-09-18-java-plang-2.md","hash":"b12ab84833d98493289f75a6401ce379f0ce4bc7","modified":1588665603853},{"_id":"source/_posts/2018-09-18-bj-2839.md","hash":"486b5a2bebb7a862e0e0bab2a5eaede5528ab217","modified":1588665603852},{"_id":"source/_posts/2018-09-19-bj-15552.md","hash":"340baf1f4c8ad804683a30d9adae87bfc9f86178","modified":1588665603853},{"_id":"source/_posts/2018-09-19-java-plang-3.md","hash":"50f7bc677b2f1cd24701df4bcb12b1914c0e5ae9","modified":1588665603853},{"_id":"source/_posts/2018-09-20-bj-1406.md","hash":"c1b2134fba07fb0333e896ebe8aa41dc17654331","modified":1588665603853},{"_id":"source/_posts/2018-09-21-bj-10845.md","hash":"644421163ef690aeb8b54052227d691fdb7b9ba0","modified":1588665603853},{"_id":"source/_posts/2018-09-21-bj-1158.md","hash":"1ca1d74aad34165d4c6c62960dfea8d90773c9fe","modified":1588665603853},{"_id":"source/_posts/2018-09-21-java-plang-4.md","hash":"73c5071f2f951f26069873684d18b4d5267bb5c9","modified":1588665603853},{"_id":"source/_posts/2018-09-22-bj-1978.md","hash":"e335bf7eb3d3df929965ccd1189613d912c0388b","modified":1588665603854},{"_id":"source/_posts/2018-09-24-bj-10808.md","hash":"3d5b102c81f4e3961ccf455391e77d09e4c1e077","modified":1588665603854},{"_id":"source/_posts/2018-09-24-bj-10809.md","hash":"5e747f4c8e8d461f3f0be44d79548a600099fc6d","modified":1588665603854},{"_id":"source/_posts/2018-09-23-bj-10866.md","hash":"31dbaf56b8b63bba943ea3386c64cc9d9913abd3","modified":1588665603854},{"_id":"source/_posts/2018-09-24-bj-10820.md","hash":"8ab94715adcf3d6685c21f7dbc047f03435179e1","modified":1588665603854},{"_id":"source/_posts/2018-09-27-bj-10824.md","hash":"5498ce348212a14e118c7f5423084322e12e0b3f","modified":1588665603854},{"_id":"source/_posts/2018-09-27-bj-11655.md","hash":"91a5d5ba13fa82a08d9d8a0086db0d0fafb8b82c","modified":1588665603855},{"_id":"source/_posts/2018-09-28-bj-2747.md","hash":"047fd5a0048e187077640b32bcefd53fb0cbed87","modified":1588665603855},{"_id":"source/_posts/2018-09-27-bj-11656.md","hash":"4759310feaed70794f30acc0ca902dfdfc5aaef9","modified":1588665603855},{"_id":"source/_posts/2018-10-01-bj-9095.md","hash":"2098a11dba669a417fd92a037a58babffdfa651f","modified":1588665603855},{"_id":"source/_posts/2018-10-04-bj-1463.md","hash":"ed524d7aae1328f147a2ac7c468aaed6e8b48703","modified":1588665603855},{"_id":"source/_posts/2018-10-07-bj-11726.md","hash":"ba0bde9a782e528bbd269b7e549f60c482c64dd6","modified":1588665603855},{"_id":"source/_posts/2018-10-10-bj-1110.md","hash":"0bbd4fca56c254aa9298b711ee3938e1b99692a7","modified":1588665603856},{"_id":"source/_posts/2018-10-12-js-this.md","hash":"97239996c30930edb5d54e0ee5d840f8c6c052fa","modified":1588665603856},{"_id":"source/_posts/2018-10-13-bj-11727.md","hash":"94dabd80fa111e3979f02ede358f6c051c1ec919","modified":1588665603856},{"_id":"source/_posts/2018-10-14-bj-2748.md","hash":"4354b20f90d198a738ac8be815e57747fce0eda7","modified":1588665603856},{"_id":"source/_posts/2018-10-15-bj-10844.md","hash":"e3184d5c7caa362efbe1e713b95c707e37bcec3f","modified":1588665603856},{"_id":"source/_posts/2018-10-16-bj-2193.md","hash":"72afa4b987397cb2bd831fc89dd12d8d46718de4","modified":1588665603856},{"_id":"source/_posts/2018-10-17-react-flux.md","hash":"4390af93134cacb1bbe53ecb2564d2ad925b6b10","modified":1588665603856},{"_id":"source/_posts/2018-10-17-react-redux-counter.md","hash":"cb3a5ebe33c524850c4214111ba6d6db97810147","modified":1588665603856},{"_id":"source/_posts/2018-10-24-bj-2156.md","hash":"4059a4dcafbfa7664bffaed97d6cfd4414c1a4bf","modified":1588665603857},{"_id":"source/_posts/2018-10-25-bj-2579.md","hash":"01e90f07994034f4247792532948931283e109b1","modified":1588665603857},{"_id":"source/_posts/2018-10-26-bj-9465.md","hash":"5ec554cce8331803395e34c77734146f00b7a1bd","modified":1588665603857},{"_id":"source/_posts/2018-10-29-bj-11054.md","hash":"e65864c2a6d025770479ff49e8dbc5c572dbb053","modified":1588665603857},{"_id":"source/_posts/2018-10-28-bj-11053.md","hash":"5980f2e56acbba27621e0e6292edafb632e38d29","modified":1588665603857},{"_id":"source/_posts/2018-10-29-bj-11055.md","hash":"cd92181925610986095b8f56b4388c8b66c5f0fe","modified":1588665603857},{"_id":"source/_posts/2018-10-29-bj-11722.md","hash":"162df49543bedf447c69f35a82a5eec70e1f0c5e","modified":1588665603857},{"_id":"source/_posts/2018-10-31-bj-1912.md","hash":"be30d9dccd5e5f29917c7c263f10466ced754b01","modified":1588665603858},{"_id":"source/_posts/2018-11-07-bj-1699.md","hash":"105a5dc4532ad7970c31442689e3bde097bd9be9","modified":1588665603858},{"_id":"source/_posts/2018-11-19-bj-2609.md","hash":"84084d842ca68617f4e52ea98ba9ed00dbdd0eaa","modified":1588665603858},{"_id":"source/_posts/2018-12-16-bj-10172.md","hash":"27842caae81b54d54593a0200e5381a1b6607acb","modified":1588665603858},{"_id":"source/_posts/2018-12-16-bj-2577.md","hash":"8b16ae1bb698f408499d00c94defd7f19f887ac1","modified":1588665603858},{"_id":"source/_posts/2019-02-22-pgs-12921.md","hash":"e1c43777891ebc7c66e6fcd498ba784c33c46be3","modified":1588665603858},{"_id":"source/_posts/2019-07-22-pgs-12915.md","hash":"8e05cc748ebb1e55baf298acc3f96350564502de","modified":1588665603859},{"_id":"source/_posts/2018-12-22-bj-1003.md","hash":"1e284d25ede8cb382437615d43fdafdc7938c430","modified":1588665603858},{"_id":"source/_posts/2019-07-23-bj-2884.md","hash":"8cfe29b0956a6825081d5bcf6a2301b9e24b75ee","modified":1588665603859},{"_id":"source/_posts/2019-07-22-pgs-12930.md","hash":"ff0e8094c6f4e3daadd85083d7599a253dbd38ba","modified":1588665603859},{"_id":"source/_posts/2019-07-23-pgs-12933.md","hash":"c0f04477e95eba7d4e863353437b5779509283f2","modified":1588665603859},{"_id":"source/_posts/2019-07-23-pgs-12934.md","hash":"44ce706cf7ae95484932b1e4954169c555eb5270","modified":1588665603859},{"_id":"source/_posts/2019-07-24-bj-10950.md","hash":"228eac8cf1e877c6ab59a018a51dbdbfff60c2d6","modified":1588665603859},{"_id":"source/_posts/2019-07-26-pgs-12943.md","hash":"cd940f12bf7db453847822350011b5b419afff28","modified":1588665603859},{"_id":"source/_posts/2019-07-26-pgs-12947.md","hash":"00366547c9df08eb16accd2d769a156a56852285","modified":1588665603859},{"_id":"source/_posts/2019-07-26-pgs-12950.md","hash":"c58968ed55e93785e5c1bd819a0ac49736946664","modified":1588665603860},{"_id":"source/_posts/2019-07-28-pgs-12950.md","hash":"e2d1e203f44458cfd6ed5fde576940007b58667b","modified":1588665603860},{"_id":"source/_posts/2019-07-28-pgs-12982.md","hash":"1195aab89591997f79550dcdbc08091246fd4822","modified":1588665603860},{"_id":"source/_posts/2019-07-28-pgs-42576.md","hash":"84f9faa11ee443bbdf18f4f475a5eb6b7ee7559b","modified":1588665603860},{"_id":"source/_posts/2019-07-31-pgs-42840.md","hash":"e76a6b70c8b004604fd55cb4727bc0d030d4b2fb","modified":1588665603860},{"_id":"source/_posts/2019-08-04-boj-7568.md","hash":"0bc6f37fefc7ef81ec86bc1e9a255604035584e3","modified":1588665603860},{"_id":"source/_posts/2019-08-06-boj-2231.md","hash":"691064ea12744f6e7be828fc6237bcad202b6596","modified":1588665603860},{"_id":"source/_posts/2019-08-06-boj-4673.md","hash":"ac9654e74e249ffb9d827f784b5820f5a244584d","modified":1588665603861},{"_id":"source/_posts/2019-08-08-pgs-42839.md","hash":"44c444c934929e36ea65785afd39307abdd8b94d","modified":1588665603861},{"_id":"source/_posts/2019-08-09-js-call-and-invoke.md","hash":"190ce7aa1dad4f0b0b47ff9f48b2111df7a7408e","modified":1588665603861},{"_id":"source/_posts/2019-08-11-pgs-42841.md","hash":"31e90934a2e59db52f0b10c4ff38de9685b53a13","modified":1588665603861},{"_id":"source/_posts/2019-08-11-pgs-42842.md","hash":"0ac52ef7387151d39f85c417d303a570c7d8c696","modified":1588665603861},{"_id":"source/_posts/2019-08-20-pgs-42588.md","hash":"58c9b5fe807dcc26077b97dc9e495733bb2e18ba","modified":1588665603861},{"_id":"source/_posts/2019-09-25-boj-1260.md","hash":"2f7f17d8bbdeeab5e26cba404697ffcd2479d22f","modified":1588665603861},{"_id":"source/_posts/2019-09-26-boj-2606.md","hash":"92266ccab66154dd136cc2e39caf37355f76dbdd","modified":1588665603861},{"_id":"source/_posts/2019-10-17-leetcode-832.md","hash":"f5f685a663513fc6fcaeb8d71b8753aa070f875f","modified":1588665603862},{"_id":"source/_posts/2019-10-21-js-hashbang.md","hash":"6f8bb8669f6b15b6d029413798504f01b7a7ea72","modified":1588665603862},{"_id":"source/_posts/2019-10-22-pgs-42584.md","hash":"12fd5035d231fc1aca1d0e220886bb94d68dbf00","modified":1588665603862},{"_id":"source/_posts/2019-10-26-pgs-42885.md","hash":"0578327e9c53b9b02c57a67c1b39c500422e6a36","modified":1588665603862},{"_id":"source/_posts/2019-10-24-pgs-42586.md","hash":"c458328189593b3a2a4eb7c5bfb1c56ffb28f65b","modified":1588665603862},{"_id":"source/_posts/2019-10-23-pgs-12909.md","hash":"d683fc73c38036083db15f34e31994d709c1d78b","modified":1588665603862},{"_id":"source/_posts/2019-11-25-react-index.md","hash":"22c4994387093404b63045de140e509ba44871af","modified":1588665603862},{"_id":"source/_posts/2019-12-14-leetcode-20.md","hash":"fce0bcc499540e53d672652bd865319514453a1c","modified":1588665603863},{"_id":"source/_posts/2020-07-26-next-styled-components.md","hash":"6e3b4ef7bad29a0b89326877b4d92f57f0cda7c7","modified":1595771662440},{"_id":"source/_posts/2020-07-26-debug-closure.md","hash":"9a739eeb0cd696b03c7ab1d75d07b4fddf862c83","modified":1595771361420},{"_id":"source/_posts/2020-02-03-post.md","hash":"be4a02c9d152fa45c06857df45600ce056c05ba7","modified":1595746394649},{"_id":"source/_posts/2020-12-27-typescript-eslint-prettier.md","hash":"fe54b4617fb58ab615369ee2f926da63256506cb","modified":1609066726690},{"_id":"source/categories/index.md","hash":"24bab94927a2492bfad1010d13041e7a1aa3354f","modified":1588665603863},{"_id":"source/tags/index.md","hash":"14431729c00f6d7e5e0004d32438613bd5328c14","modified":1588665603879},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1588665603880},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ef63f34bd3b6bd4d7304d48ce5e0e3e2bead385","modified":1588665603881},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"715dcf9b0429a4a4c7107d6d1d00a34e4cf9aa99","modified":1588665603882},{"_id":"themes/next/.github/config.yml","hash":"e4f4b9afe59bc508c4f7634895b33d7d460a7cb1","modified":1588665603882},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1588665603882},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1588665603883},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1588665603883},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1588665603883},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1588665603883},{"_id":"themes/next/.github/stale.yml","hash":"941209526c2f7d916c76163c9e1ac1af9d956679","modified":1588665603883},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1588665603883},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1588665603886},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1588665603886},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1588665603886},{"_id":"themes/next/docs/DATA-FILES.md","hash":"40a8089076005e0d26ef7c0db58a2b5b464cda6c","modified":1588665603886},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1588665603887},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"08cda41b4bcf687facfda19ab39718ec7a05ae54","modified":1588665603887},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1588665603887},{"_id":"themes/next/docs/MATH.md","hash":"f520b336f16665e164d6edf075bdcc6aa17b31bc","modified":1588665603887},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"682937d48bf5d243842a76190921322e26c75247","modified":1588665603887},{"_id":"themes/next/languages/de.yml","hash":"3530753456db8a7a7cb72b47505bf6197ac9a9f2","modified":1588665603891},{"_id":"themes/next/languages/default.yml","hash":"2c415150d5ba44a05ec7ca5fa671d6129c7fe7db","modified":1588665603892},{"_id":"themes/next/languages/en.yml","hash":"2c415150d5ba44a05ec7ca5fa671d6129c7fe7db","modified":1588665603892},{"_id":"themes/next/languages/es.yml","hash":"9596836628169400beed4124eeb5867821075b00","modified":1588665603892},{"_id":"themes/next/languages/fa.yml","hash":"c77d0ab86695651f4fb09e0e9af484114fe80292","modified":1588665603892},{"_id":"themes/next/languages/fr.yml","hash":"30702ddcb121ee1ada258b8b900d826fec697e5e","modified":1588665603892},{"_id":"themes/next/languages/hu.yml","hash":"a317ba3ab2d9de40fe8b5447d0e63b9d8ab97c8b","modified":1588665603892},{"_id":"themes/next/languages/id.yml","hash":"85441f625f1f93a329b7eab01f919e81a6f36172","modified":1588665603893},{"_id":"themes/next/languages/it.yml","hash":"8e4d494cd7f4e33d2c416da3a48f9bd8968243ea","modified":1588665603893},{"_id":"themes/next/languages/ja.yml","hash":"2a767bc258a5072f8d97ffdfce53b4e2332570f4","modified":1588665603893},{"_id":"themes/next/languages/nl.yml","hash":"dea4d7d516071c9ec9e57935a84aaab15c3d2e97","modified":1588665603894},{"_id":"themes/next/languages/ko.yml","hash":"04ba65574f1fa63ffb95fcfb7a4515ee4b01532f","modified":1588665603893},{"_id":"themes/next/languages/pt-BR.yml","hash":"66e3cc8efc2a26184fcbe4db8981b84099348276","modified":1588665603894},{"_id":"themes/next/languages/pt.yml","hash":"f184ffed48395675a7025cb1ccfdade546f3e987","modified":1588665603894},{"_id":"themes/next/languages/ru.yml","hash":"79f7f3b6e96184cf21ce2c9a2adb01b0f0228cf8","modified":1588665603894},{"_id":"themes/next/languages/tr.yml","hash":"5c5b60faa00401e822c92abcdcf9c5d410a8b753","modified":1588665603894},{"_id":"themes/next/languages/uk.yml","hash":"a6af58b5351e0d0dde1fec22a3e80fc76bd8eecf","modified":1588665603895},{"_id":"themes/next/languages/vi.yml","hash":"2b698896b08d79333a3414185fc2b445b3657361","modified":1588665603895},{"_id":"themes/next/languages/zh-CN.yml","hash":"ab2fa8bfdbf4afd77c336412f29930dc8256a5fa","modified":1588665603895},{"_id":"themes/next/languages/zh-HK.yml","hash":"6e333aaca52dccee8e5f2d1dc28b0a6cda7b0c9a","modified":1588665603895},{"_id":"themes/next/languages/zh-TW.yml","hash":"d4517fa82652ccc75915469985efd7da1895963a","modified":1588665603895},{"_id":"themes/next/layout/_layout.swig","hash":"29ee038b0d5ffdb45327598733ea968588367769","modified":1588665603896},{"_id":"themes/next/layout/category.swig","hash":"c55debb2588e4746b02d31ec249bf0a84fdea260","modified":1588665603910},{"_id":"themes/next/layout/archive.swig","hash":"26526c09a4334099e2141456697696fcd1f9783f","modified":1588665603910},{"_id":"themes/next/layout/index.swig","hash":"3bc6fb1e9707d74b96e1346d3f03fe6584f764f4","modified":1588665603911},{"_id":"themes/next/layout/page.swig","hash":"e61d64c055b6497a04affc143f47fdd0a6dc495b","modified":1588665603911},{"_id":"themes/next/layout/tag.swig","hash":"7ff6e34d557a3da1c6a29ecd97842bf73ff213dc","modified":1588665603911},{"_id":"themes/next/layout/post.swig","hash":"382d9f9a9b35e1f369585f7f9f9b5dd6fa58d2f0","modified":1588665603911},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1588665603916},{"_id":"source/images/2020-07-26-debug-closure/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1595749598209},{"_id":"source/images/2020-02-03-post/5.png","hash":"894d24a44748489b837424550bec33c36d6babcb","modified":1588665603865},{"_id":"source/images/bj-11054/image-1.png","hash":"98233e101a1a60b09ada662411322e8b8b1c91a0","modified":1588665603866},{"_id":"source/images/bj-11054/image-2.png","hash":"38cb877871c08060125dbc5478ca43ecf9b80100","modified":1588665603866},{"_id":"source/images/bj-2193/example.png","hash":"9db9b5f501094f353e9a004ac9f60d1d7ae46786","modified":1588665603867},{"_id":"source/images/bj-9095/example.png","hash":"50c6b6749529e9f9a639e683c4735f369cde81f6","modified":1588665603868},{"_id":"source/images/js-prototype/prototype-link3.png","hash":"927b882e33913339c979748423eba37ed75925a5","modified":1588665603871},{"_id":"source/images/js-prototype/prototype-link4.png","hash":"ba321928fbdb786661a2a7b6de87aabde50967e2","modified":1588665603872},{"_id":"source/images/js-prototype/prototype-object2.png","hash":"5eec15226c63b382b4e76b03abf693ccab4d4cc8","modified":1588665603874},{"_id":"source/images/react-flux/flux-1.png","hash":"961657e641dd45721b96b7b632db66a6dc03e949","modified":1588665603876},{"_id":"source/images/react-flux/flux-2.png","hash":"8797dc034b50d92b3fe18ce1faa10f8e239f9947","modified":1588665603876},{"_id":"source/images/react-flux/flux-3.png","hash":"dfdf96018ea33d12c2f68a14d9c6c5b00530869f","modified":1588665603877},{"_id":"source/images/react-flux/flux-mvc-1.png","hash":"0433aa566d105fe532955283b50bbbcc48c28b3e","modified":1588665603877},{"_id":"source/images/react-redux-counter/result.png","hash":"36cbe88fbaa6ed2ec644c6d27f452c153ecd96ca","modified":1588665603879},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"8ae029084b9ac482adf0fae2a0979dd388476513","modified":1588665603881},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"7a9526f749205c882d672a4f51e6a3033c80ca6e","modified":1588665603881},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"89667adbb85c25716dba607cd7a38191acf60736","modified":1588665603881},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"789a3cceb8f37a4b63b1fb2452a03332a3c365ed","modified":1588665603882},{"_id":"source/images/react-index/index-1.png","hash":"803535f2be75a3560458a429e42b15e3686c26d0","modified":1588665603879},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1588665603888},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1588665603888},{"_id":"themes/next/docs/ru/README.md","hash":"41b1bef32fb991410ebf559b4c45022549f95215","modified":1588665603888},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"fe3f5cda1975114884d84bef384a562920d70335","modified":1588665603889},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1588665603889},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1588665603889},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"17d7203e85a8ce9760c42a853dee0f26a8f7ee4e","modified":1588665603889},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1588665603890},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1588665603890},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"0b0b9ec6ec4a89e701a3b91f8d7d95752d3e241b","modified":1588665603890},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"f0ffb74de522749c9f2fda46970a61bdafbfbc24","modified":1588665603890},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"7f37327bbcae7ed7d04d187fd5e9bc6bbf14926a","modified":1588665603891},{"_id":"themes/next/docs/zh-CN/README.md","hash":"b6a3611d40863c12804c5846994786119ce3b79f","modified":1588665603891},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"815676d904f92748ddf4f529bed2baf066997bc6","modified":1588665603896},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"e2c9db54cc9e154e882008fde6588b065fadc9a7","modified":1588665603897},{"_id":"themes/next/layout/_macro/post.swig","hash":"87a40f829ae6bb786c6c51bd83d110140eb41b80","modified":1588665603896},{"_id":"themes/next/layout/_partials/comments.swig","hash":"0c4914a5fd08f15beec71940218c814ad9a89f3f","modified":1588665603897},{"_id":"themes/next/layout/_partials/footer.swig","hash":"1ee6335c12773dc43f8b92136770cb10d460c25c","modified":1588665603897},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1588665603899},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1588665603902},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1588665603902},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1588665603902},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"a3462c37ab6d7642b1e95860ea5c4cfbac78efab","modified":1588665603903},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1588665603904},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1588665603904},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1588665603905},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1588665603907},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"dd6bd817cb69b5ad5e9746498146314b54054ff8","modified":1588665603908},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"da6a9d14ed10203e378c6e2c00a7b5e7afabca58","modified":1588665603908},{"_id":"themes/next/scripts/events/index.js","hash":"9047d8ae2670e43429b16a7919a08a0a0a81afe0","modified":1588665603912},{"_id":"themes/next/scripts/filters/locals.js","hash":"5bbfdc1c373542159660b7a68ed0b57ca18ad10b","modified":1588665603914},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1588665603914},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1588665603914},{"_id":"themes/next/scripts/filters/post.js","hash":"f2f566f2577c554377fd704442399acdd14a8118","modified":1588665603915},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1588665603915},{"_id":"themes/next/scripts/helpers/font.js","hash":"32268fb4c59c5b37c1eb1c9582ab630e09e5cc7d","modified":1588665603915},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"58347687b02f7ab5e64bef07525c8efa97c9e8fb","modified":1588665603915},{"_id":"themes/next/scripts/helpers/engine.js","hash":"cb211b6b50913454b1737782e9e2af96cfa40448","modified":1588665603915},{"_id":"themes/next/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1588665603916},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1588665603916},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1588665603916},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1588665603917},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1588665603917},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1588665603916},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1588665603917},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1588665603918},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1588665603917},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1588665603918},{"_id":"themes/next/source/css/main.styl","hash":"68c3377b643162aeaae2b60c196486fdb3b509c3","modified":1588665603938},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1588665603938},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1588665603938},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1588665603939},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1588665603939},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1588665603939},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1588665603939},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1588665603940},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1588665603940},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1588665603940},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1588665603940},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1588665603941},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1588665603941},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1588665603941},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1588665603941},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1588665603941},{"_id":"themes/next/source/js/algolia-search.js","hash":"f31a633c15391ce0095579735a479f3f92622eab","modified":1588665603942},{"_id":"themes/next/source/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1588665603942},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1588665603942},{"_id":"themes/next/source/js/local-search.js","hash":"0d30f1c0e4d4a1cc26d494808f3f36132d06ae14","modified":1588665603942},{"_id":"themes/next/source/js/next-boot.js","hash":"f7045763e277e685c271bd4b4c37e531d699ac63","modified":1588665603943},{"_id":"themes/next/source/js/utils.js","hash":"a1e70ac9d32697907d5d78f2533d627f4df8ebcb","modified":1588665603943},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1588665603944},{"_id":"source/images/2020-07-26-next-styled-components/2020-07-11__12.06.58.png","hash":"684063b3c2a1b93a86a85f88954e1837ffe05ad9","modified":1595738928000},{"_id":"source/images/bj-1003/fibo.png","hash":"e6f2d6605bd920fd4f30445350150c0a249e64f6","modified":1588665603865},{"_id":"source/images/js-prototype/prototype-link2.png","hash":"abd33eac5823dc8b49c604808351b600924067b7","modified":1588665603871},{"_id":"source/images/js-prototype/prototype-link.png","hash":"fea4238e3f6f7ef583fc38e8e5d7249ebcdef16c","modified":1588665603870},{"_id":"source/images/js-prototype/prototype-object.png","hash":"d6ce160617fed29a3a2c111bb0ae639a5e62a793","modified":1588665603873},{"_id":"source/images/js-prototype/prototype-object3.png","hash":"cd597eeb3ad58d4cb319f2848734d7f50107e24b","modified":1588665603874},{"_id":"source/images/react-flux/flux-mvc-2.png","hash":"d586ac332985fb3ab6d942d93f68f3443fe654c9","modified":1588665603878},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588665603932},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588665603932},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_1.59.00.png","hash":"230a6d38b068aafff52e70dfcdd2922f6a02844a","modified":1595749737746},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.00.20.png","hash":"44d4e3b8934a328f1b86a727bc5177eb714d79dd","modified":1595716578000},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.01.52.png","hash":"b3bb0982b120a560af86279bb3fd95a3cb6a46bf","modified":1595716578000},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.25.15.png","hash":"a2057f3ae0b854688eaac7a33e268397623d24fa","modified":1595716578000},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.26.10.png","hash":"e01ba4b57e6839f691a8a484d81d9b5773de3e1a","modified":1595716578000},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.36.58.png","hash":"901227735f3ef4d020ae0f2d17ce0034d598d874","modified":1595716578000},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.35.36.png","hash":"a8abf8156b0f0f1f5acca877f711037ebda90ca1","modified":1595716578000},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.41.25.png","hash":"e87d878a60bb40c740552e97f0e8ea922ded26c5","modified":1595716578000},{"_id":"source/images/js-prototype/prototype-object4.png","hash":"bc21bb0f9ecf4ab02faff6403e9883cd5b11bc00","modified":1588665603875},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"1638483d2d2dad1da4c841a6fb9f6ee96b850187","modified":1588665603897},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"7487ca8f0e4b16351ea0d6b35dc52b0d32176d57","modified":1588665603898},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"0172055d118d1d7f4c8379c8495c1ee1aa50c7d9","modified":1588665603898},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"30528a8da30994b1ef9355a72b09b2cd85a7c0e9","modified":1588665603898},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"e6076865dba066c5f0008e22217efb850d5af69c","modified":1588665603898},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"bbf0c8e42491fac70f4f8165224f1d7d92a040d7","modified":1588665603898},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"54ba9508a901c295a02c8e34e9cece7c7dcad518","modified":1588665603899},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1588665603899},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"a56e4f6ad95c106f361d354f828d1ef4810b1d76","modified":1588665603899},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"94d54b0c65d504f772af1e62424952e092b6c21d","modified":1588665603900},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"14c33bd544903e74388739599fffe3ecb66ed4b0","modified":1588665603900},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1588665603900},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1588665603900},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"1b7faa20a458b46369779b57bcc695bbc5d1c13a","modified":1588665603900},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1588665603901},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"d6fa9e4432b87004c5678dfe2d4b2c1f4a702b93","modified":1588665603901},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"2791a8dc20a276704fc8b03f9822f76578a9152d","modified":1588665603901},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"716b78cd90addc4216413719554721cb362b0c18","modified":1588665603901},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"a2bb0bec243685e670b60a3d54142950adc03af0","modified":1588665603902},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1588665603903},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1588665603903},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1588665603903},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1588665603903},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1588665603904},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1588665603904},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1588665603905},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1588665603905},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1588665603905},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1588665603906},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"fdcf006e1ba2e53eab65e901b6c63159538307ef","modified":1588665603905},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"d3dc3e051e6816cdd576d00cc70b18b8a4c6a495","modified":1588665603906},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1588665603906},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"ed236103bccbcf608f7d5d5b33b9f995d2f1a7de","modified":1588665603906},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1588665603906},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4d6f9e09ca4056ff6a5d4923e202126a75242183","modified":1588665603907},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1588665603907},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1588665603907},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1588665603908},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1588665603908},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1588665603908},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1588665603909},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1588665603909},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"0ea0bac09b0747bc16fde852164c0eaab2efe02c","modified":1588665603909},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1588665603909},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"801e1d2f59f7d2db4096c4788b8469b4165f4965","modified":1588665603910},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"4958fa997ff6df2b2ce05341f40cc3a81b0f91bb","modified":1588665603910},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"7fa72dc60c078842979861622839b109683e05a3","modified":1588665603910},{"_id":"themes/next/scripts/events/lib/config.js","hash":"b205d72a56b1827681f0a260c266e0c02065fd08","modified":1588665603912},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1588665603912},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1588665603912},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"1f20213af8da3127701e6bb9da995e5c91be2051","modified":1588665603913},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1588665603913},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1588665603913},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"19cbd24880d0fbbd4d5698cd54da598f03b942da","modified":1588665603913},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1588665603913},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1588665603914},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1588665603914},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6a72b5928cdab9526a288177991e4b2aedd028cf","modified":1588665603914},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1588665603932},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"644c1f0b02be9bf59955ebdf496136b3fa4b660b","modified":1588665603932},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0a25f3df1b5c39794365efde387647da81da884a","modified":1588665603932},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"b9d7058db61df7bbd2b58779efe45621a06ffc18","modified":1588665603937},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c261d685c5ed0df34718d94bb2ba977c0ed443e6","modified":1588665603937},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"52550138127ae9ebbe049bcdacd94d767c003855","modified":1588665603937},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"50bc57e66331c0f15a4527010b4ca3316ac92403","modified":1588665603937},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d4e817e2b238ace5d7ac568ce0c5380196a6d039","modified":1588665603938},{"_id":"themes/next/source/js/schemes/muse.js","hash":"ae2a2502b77203e83f75a040c43e86a7ecb4873c","modified":1588665603943},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"f068b46f8c305c7436c2767492a6bed42dcd764c","modified":1588665603943},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1588665603944},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1588665603944},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1588665603945},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1588665603944},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1588665603945},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1588665603949},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1588665603950},{"_id":"source/images/2020-02-03-post/10.png","hash":"19111433c9d5848664d218f781f6a45665cd5ec7","modified":1588665603864},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_1.58.25.png","hash":"9954fb6ca6c11d190e4e9f2f496894a302f54caf","modified":1595749730792},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.18.18.png","hash":"998e85e95e2c54f6a119fbbd8bf40d34f3aec046","modified":1595716578000},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.19.55.png","hash":"f6c1392e2c694e82c02f61e45dc01bc9264f35ca","modified":1595716578000},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.38.10.png","hash":"fec274e703817bf8bd84c0c7747c4a2754a45304","modified":1595716578000},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.40.36.png","hash":"e0ed4bab3f0d1cb8ee2e62df3086cdd521df86a6","modified":1595716578000},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.39.16.png","hash":"a71ec5cb3972f1e530fb7ddc02ce8fbb360da94e","modified":1595716578000},{"_id":"source/images/2020-07-26-debug-closure/2020-07-26_2.42.14.png","hash":"d28772d8074e0e0561d995c9d871768891bbf28e","modified":1595716578000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"fb27a38f9a4b8fcba4f637b03904f7a83cc73416","modified":1588665603907},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"80d359661d08b80ad561b97f8508766b3e1f6d01","modified":1588665603918},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"47ee915d7b0a97e74140a25fbfc01c04d6781534","modified":1588665603919},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"112f5e8f1fe5cec4419e87acfbdef0e615ed23f3","modified":1588665603919},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"bc87cea0b534f2d75db60f300b069456f6516d1b","modified":1588665603922},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"170c4598cbbe49cd1527f94158d97d2320a6b906","modified":1588665603922},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"990bd301ce2de0a6b936781c58318f3945d81bc2","modified":1588665603925},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"44fe82eadbdbb2f66adda37ac83ebd0f85876bfc","modified":1588665603925},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4f7879a50d4608c46cc2061c725a2564597a45bd","modified":1588665603928},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"d8ba44b8e1a0332c5c1079ff65fc83d2918a5865","modified":1588665603928},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"3faa8a7cdb05ef3f3b02920d381773dfd54270a5","modified":1588665603928},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1588665603929},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1588665603930},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1588665603930},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"8e1cc5e3b20d804a7265f945b877388bffee39eb","modified":1588665603930},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1588665603932},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"4fb385d8533877678440c8faa08b68fa793cb1a2","modified":1588665603933},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"1693ec6b53758ac15d2c7798c789d6ae8af913ea","modified":1588665603933},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"24a086a6904bbf5355a354403c9b0e6069f7eb01","modified":1588665603933},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"48743ac61af37a4de2026667e15a65de5e8cf542","modified":1588665603933},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e321bd62f5e04d1fdc101a470ec13604e99816a5","modified":1588665603934},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1588665603934},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"3646e915b0a55f3b66e41d802b082aba88a76e06","modified":1588665603934},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1588665603934},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"5adf2fdea25630893283e1ad5ba1721b698d6e95","modified":1588665603935},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1588665603935},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"a54662bd4cbbe316048a811d3b5c83fb6df63739","modified":1588665603934},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1588665603935},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"f1f81bca31e82ccbd375f0cb9fb8dbb3beac810d","modified":1588665603935},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"b797c693378d94160121a2b8d9df0622a76cdbda","modified":1588665603936},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"71a3d7f2242706f7a6b79933a67ef3664cca3a24","modified":1588665603936},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"84a3b8fe07fc790082ee988dd8f6c2536fde72de","modified":1588665603936},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"0424a1fcffa1ae82fe70935972a894aca885bf9a","modified":1588665603936},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1588665603936},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1588665603946},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1588665603945},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1588665603946},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1588665603949},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1588665603919},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"6336c2b129db802221b1fd75e5fbe8aab85c0a1f","modified":1588665603919},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1588665603919},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1588665603919},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1588665603920},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"af182c0d1e52f94280f6108936914f04ed541eee","modified":1588665603920},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"4b84f35e7040f9adb5cc540c366d7f9eb4c48bcc","modified":1588665603920},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"e3ade812b5541eca5b863ad3ff234ea95925bf31","modified":1588665603920},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"5d5c022aa3b2f89c2f2a178212338bb64804dd75","modified":1588665603920},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"60ed14e9ddcb138837ca22efb8886f9bff2a3dd2","modified":1588665603921},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"bcba503e956e4b737b062faa66341bd880f16c10","modified":1588665603921},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1588665603921},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"9df5ba77e6cf36129bddc270407215c23c60ff38","modified":1588665603921},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"eca4d80dd0df1c3b1bc06bd39e6a4bd6c56198df","modified":1588665603921},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1588665603921},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1588665603922},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1588665603922},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"618db5757d747e80d037ff2c2f8a2ab8f75a3410","modified":1588665603922},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1588665603923},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1588665603923},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1588665603923},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"418890a2041e4d623e235890951143d183df6f03","modified":1588665603923},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1588665603923},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1588665603924},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"f5821481440a0624c8aec5fc85f093de1527095f","modified":1588665603924},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"0672ea2acf28dcc2cfc5244da36d3387d71a17cb","modified":1588665603924},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"4b237e2344f35e9d1f6dbc3842d5e432d478ebfd","modified":1588665603924},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"d5d85d3646d184e0340924addcfd2523fb289d00","modified":1588665603925},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1588665603925},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"a7ed54e2f52185a7b6bb9a8201f6c3aa74b0cb00","modified":1588665603925},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"c27b3056d5e22d3c66d8a152a23634314d5c4a60","modified":1588665603925},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1588665603926},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"9b3ff4aa24069eab0e9771437013f45e450d4217","modified":1588665603926},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"95339b71ac90553fb1634c536c9749055e0c788a","modified":1588665603926},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"a237c290e8934d1a8cbbf22b3f30503d9663021d","modified":1588665603926},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1588665603926},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1588665603927},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"521534f483440434e808f92377bc3fc73667c89a","modified":1588665603927},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1588665603927},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"6d8680894e24a516e2b5263af86b485767c3be63","modified":1588665603927},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"9a18b186b08ec220d1b17cf83812bcdd06077814","modified":1588665603927},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"b492a45422773ab2af06ee345d527ba4c6bbc608","modified":1588665603928},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1588665603929},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"b4923515ca8e44aa62e839ce948f759cfd1f896f","modified":1588665603929},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1588665603929},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"7213e3d0ad7c95717ecd4e701d6ee9248ef2bf9f","modified":1588665603930},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1588665603930},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"5bf28a03ef021c27cfd713971caca5a0b9466fd1","modified":1588665603931},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"1a14c1b92d8a4dd8aabb5949333ac0ac79094c6c","modified":1588665603931},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1588665603931},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1588665603931},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"d2f0f2171722533bba308f944a2ec727b083582c","modified":1588665603931},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1588665603948},{"_id":"source/images/2020-07-26-next-styled-components/2020-07-11__1.23.42.png","hash":"6c7084676fe04d74da68d28034d846e66a37b135","modified":1595738928000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1588665603948},{"_id":"public/atom.xml","hash":"f2a3afa33f7ec71dac0e7baffe5d19f8df77a1a8","modified":1609067575219},{"_id":"public/post-sitemap.xml","hash":"867224ad63c0b55f54c296a4c8399ce1b10f6aee","modified":1609067575219},{"_id":"public/page-sitemap.xml","hash":"623dff7c4398f09173b03446f60dc82bcfa8ab7a","modified":1609067575219},{"_id":"public/category-sitemap.xml","hash":"50c7fc9a368e2279497bb4a2cc1bb96bc9ae0e67","modified":1609067575219},{"_id":"public/tag-sitemap.xml","hash":"a07cba921ae7b99ac094108f4205bc1338ebe414","modified":1609067575219},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1609067575219},{"_id":"public/sitemap.xml","hash":"6369642624bc9dc7cdbdc8a8509edbee7fbdab02","modified":1609067575219},{"_id":"public/robots.txt","hash":"65990256b6ebe0149d8edfcae37274b6af3e42ae","modified":1609067575219},{"_id":"public/categories/index.html","hash":"b1c34b5e69cc600317bb48b6e5d5ac617e6e41b9","modified":1609067575219},{"_id":"public/tags/index.html","hash":"09745a6d526ff0bdd6a52d8686db8fb803b8d7e4","modified":1609067575219},{"_id":"public/2019/07/28/pgs-12950/index.html","hash":"cdeacf76ed76ec0f356a516f30a20ed208f0db90","modified":1609067575219},{"_id":"public/2018/12/16/bj-10172/index.html","hash":"9cde990a0be6631fadfcdff447b1c7d4ce44ae63","modified":1609067575219},{"_id":"public/archives/page/2/index.html","hash":"8338fe30728b0a913b91456d71a09c7f2bab306c","modified":1609067575219},{"_id":"public/archives/page/7/index.html","hash":"fe05588227a0a53b3871e269330209a84e472520","modified":1609067575219},{"_id":"public/archives/page/9/index.html","hash":"9468b529e0bc96526a84661efba0515cbaf3cefa","modified":1609067575219},{"_id":"public/archives/2018/index.html","hash":"a08cfed6035130a7379e04c2ef37a720fe577f68","modified":1609067575219},{"_id":"public/archives/2018/page/2/index.html","hash":"7d014a53cd3451dffb4291081cadb0367fa2f6f3","modified":1609067575219},{"_id":"public/archives/2018/page/3/index.html","hash":"17090c574f6d045991e2c3f6882738d8ad6133b1","modified":1609067575219},{"_id":"public/archives/2018/page/5/index.html","hash":"8b1bec7bafad019d87576b4cddb7a345bbfb52ca","modified":1609067575219},{"_id":"public/archives/2018/09/index.html","hash":"7c02d1599109f5f759dfd309174eaad3ab73f01b","modified":1609067575219},{"_id":"public/archives/2018/09/page/2/index.html","hash":"e6b2370cc8ce242359f2a616b1a3649faf0f9698","modified":1609067575219},{"_id":"public/archives/2018/09/page/3/index.html","hash":"110a336713908de24877728da1c2e131ee2a20c9","modified":1609067575219},{"_id":"public/archives/2018/10/index.html","hash":"aacb4475d10dcf0d1f7d3898cde0ca52013fc658","modified":1609067575219},{"_id":"public/archives/2018/10/page/2/index.html","hash":"6425ac4291e1c9a029cd0e7540909ff302e50550","modified":1609067575219},{"_id":"public/archives/2018/11/index.html","hash":"7da63b73df5e4e551ddc6756ee5c09d7d2a90e9e","modified":1609067575219},{"_id":"public/archives/2018/12/index.html","hash":"a53c1dd07316fd871a19911699e39293a1f981da","modified":1609067575219},{"_id":"public/archives/2019/index.html","hash":"ce529201c5770a539e944fdbcdb59c3b13f1c31c","modified":1609067575219},{"_id":"public/archives/2019/page/2/index.html","hash":"13206888ed2c88b071a1d6f2f3f623b8c6e10fcd","modified":1609067575219},{"_id":"public/archives/2019/page/4/index.html","hash":"64acc9a1b66d9b8337a4f29ce62eb2559ec40f31","modified":1609067575219},{"_id":"public/archives/2019/02/index.html","hash":"02f3bd194164c13276e2c50e6905da47cb2f7ddc","modified":1609067575219},{"_id":"public/archives/2019/07/index.html","hash":"69ddfe04f8bde269d5d4ea5c01c6c19782b4aa87","modified":1609067575219},{"_id":"public/archives/2019/07/page/2/index.html","hash":"c371ac1bec5a43ba95b9f0947ca1a18aa8b989a5","modified":1609067575219},{"_id":"public/archives/2019/08/index.html","hash":"e08218b827696787ce50b19fb1c69a0afc42388a","modified":1609067575219},{"_id":"public/archives/2019/09/index.html","hash":"3a8fd4fcd8c1c1ab024a3fb5c6ce701683af9192","modified":1609067575219},{"_id":"public/archives/2019/10/index.html","hash":"766d034a72b1850105e4da0341d7210b6e0441d1","modified":1609067575219},{"_id":"public/archives/2019/11/index.html","hash":"2a2cfcf15b31ba1dffd3b3791ffda58f651cce2a","modified":1609067575219},{"_id":"public/archives/2019/12/index.html","hash":"3eb8be95a9ec62b44ec5c98cca3821a2a98befe5","modified":1609067575219},{"_id":"public/archives/2020/index.html","hash":"8511f3cff7f65b091a7d81c2fbfa90c95ef65848","modified":1609067575219},{"_id":"public/archives/2020/02/index.html","hash":"83a68c99b9c941a8458101b13e823ac1264f62bf","modified":1609067575219},{"_id":"public/archives/2020/07/index.html","hash":"62696861080aace9b520ba1ceeb39687093de354","modified":1609067575219},{"_id":"public/archives/2020/12/index.html","hash":"6d8ec6f1690ca7d5cbbe9fe57e35659c7e95ac66","modified":1609067575219},{"_id":"public/categories/백준/index.html","hash":"5076e979aff054c41cd5381070e32828688fc847","modified":1609067575219},{"_id":"public/categories/백준/page/5/index.html","hash":"11d299e0a1a403ddf782a8aa94940bf42391d3f1","modified":1609067575219},{"_id":"public/categories/JAVA/index.html","hash":"21bf7f513fb32115e809dc2830e2f1c507346275","modified":1609067575219},{"_id":"public/categories/자바스크립트/index.html","hash":"3c29ab86020e3f257bb1b9c7ad461403cd0a72e7","modified":1609067575219},{"_id":"public/categories/React/index.html","hash":"f96b51d5ac075cb1d698773b4daac0f859ed4cd4","modified":1609067575219},{"_id":"public/categories/프로그래머스/index.html","hash":"b2f082a97a6f212da5718c8585e2a30823fe8049","modified":1609067575219},{"_id":"public/categories/leetcode/index.html","hash":"bdc3351ddddfa7e6e701b59aa47c8d80e00a18b7","modified":1609067575219},{"_id":"public/categories/etc/index.html","hash":"606cbc1bfdc723e05a06c14f91734ce62d74ae24","modified":1609067575219},{"_id":"public/tags/boj/index.html","hash":"9d70925fed3dcca02e2cc763a0a3742cd26337ae","modified":1609067575219},{"_id":"public/tags/boj/page/2/index.html","hash":"3923b9532d8b07f9f982cd868230c67aa077f59d","modified":1609067575219},{"_id":"public/tags/boj/page/3/index.html","hash":"10520a539f4ff159b9c57207514ddd93d64ca81a","modified":1609067575219},{"_id":"public/tags/boj/page/4/index.html","hash":"6aa80d74db0f352787c394667fc6771bc60eebd8","modified":1609067575219},{"_id":"public/tags/boj/page/5/index.html","hash":"c6d3addd2c8aa82590d44ce5242db4277df57341","modified":1609067575219},{"_id":"public/tags/algorithm/index.html","hash":"ae29ec2817f35cd6f98ca5c05405ac55b987002f","modified":1609067575219},{"_id":"public/tags/algorithm/page/2/index.html","hash":"65e14f40be73cca3144f309abcb57be05d1ab65b","modified":1609067575219},{"_id":"public/tags/algorithm/page/6/index.html","hash":"1ed32c76f1d21e360a8dd4187a6da020077c7254","modified":1609067575219},{"_id":"public/tags/algorithm/page/7/index.html","hash":"8c7c449d9160c0abd403c9e9187ac5b8a99954f6","modified":1609067575219},{"_id":"public/tags/algorithm/page/8/index.html","hash":"ec5242cca3f5f9eceee95783c4561adbf1906890","modified":1609067575219},{"_id":"public/tags/java/index.html","hash":"9d1f7962a6f3fbc75c15730ff0ef069e73bb49d9","modified":1609067575219},{"_id":"public/tags/study/index.html","hash":"b38fa532552e4c775f9894736d26cb3beecebae4","modified":1609067575219},{"_id":"public/tags/javascript/index.html","hash":"ba1fd947a1c8e1053a82c3604147bb54c103701a","modified":1609067575219},{"_id":"public/tags/react/index.html","hash":"c2fd4f2a4aebf51e1a91d38bfb240be90f34a2ce","modified":1609067575219},{"_id":"public/tags/programmers/index.html","hash":"c1108144729138b59218fabe27237b14ce4a7999","modified":1609067575219},{"_id":"public/tags/programmers/page/2/index.html","hash":"c0ae30cdf95a6720e65bc4ffb8080f387cd5b06c","modified":1609067575219},{"_id":"public/tags/Leetcode/index.html","hash":"653eda153ae3943993a430eddf60b7e55a376bae","modified":1609067575219},{"_id":"public/tags/greedy/index.html","hash":"6a4995b91986d70a3b0b1026501e4642f7fda923","modified":1609067575219},{"_id":"public/tags/next/index.html","hash":"a991d4caa09087b9c412521c0fb7687d62f549ce","modified":1609067575219},{"_id":"public/2020/12/27/typescript-eslint-prettier/index.html","hash":"9d1cb69f45c4408f512c58561b4257e23b2e7707","modified":1609067575219},{"_id":"public/2020/07/26/next-styled-components/index.html","hash":"ae6917d43f0b0d59c9ffefc4ed8cbd67272f1434","modified":1609067575219},{"_id":"public/2020/07/26/debug-closure/index.html","hash":"198a92b3f6463e0e3dbc756d620170660912f168","modified":1609067575219},{"_id":"public/2020/02/03/post/index.html","hash":"37d74e59422781a369da1536d5ebac0927e38a9f","modified":1609067575219},{"_id":"public/2019/12/14/leetcode-20/index.html","hash":"99077a43a468df5eb85944e43681ab00101a17e4","modified":1609067575219},{"_id":"public/2019/11/25/react-index/index.html","hash":"04f9f8c5f940f5e4d6f53ba1d0f43b0ebf3872b4","modified":1609067575219},{"_id":"public/2019/10/26/pgs-42885/index.html","hash":"672e966e933535dbec34ee31342c165203c35d36","modified":1609067575219},{"_id":"public/2019/10/24/pgs-42586/index.html","hash":"fdb166384ae8478ff4675344f0085f816d36cbfe","modified":1609067575219},{"_id":"public/2019/10/23/pgs-12909/index.html","hash":"8b3a0e0775b5cd7b0768f567f90391429c3de4c7","modified":1609067575219},{"_id":"public/2019/10/22/pgs-42584/index.html","hash":"ebd970fb16c6cd683d4239c3f58d58f4ba2bc7d7","modified":1609067575219},{"_id":"public/2019/10/21/js-hashbang/index.html","hash":"f6d5c86145d3511d8caf35f7fb75976cfa87a75e","modified":1609067575219},{"_id":"public/2019/10/17/leetcode-832/index.html","hash":"7a13c40cd68c3065364fc85ed0720b3f34e37da6","modified":1609067575219},{"_id":"public/2019/09/26/boj-2606/index.html","hash":"bf2afd57d40faf92a560e9bc1d37f68ef369406d","modified":1609067575219},{"_id":"public/2019/09/25/boj-1260/index.html","hash":"f2159bcc10122fce41d9aed724afbdca62834aed","modified":1609067575219},{"_id":"public/2019/08/20/pgs-42588/index.html","hash":"82cb366bb72efb323d094ab19bd9ef10f2ebbe3c","modified":1609067575219},{"_id":"public/2019/08/11/pgs-42841/index.html","hash":"25d872b9036b317c9c44aace3d56dd7ab611a724","modified":1609067575219},{"_id":"public/2019/08/11/pgs-42842/index.html","hash":"baa7b133f3ffcec0d8fbe57e5c14baed509cbb09","modified":1609067575219},{"_id":"public/2019/08/09/js-call-and-invoke/index.html","hash":"a012fbe3de092697ddd658770b228713b7f3773f","modified":1609067575219},{"_id":"public/2019/08/08/pgs-42839/index.html","hash":"0f3ca407e7a931a44727da36b05e2b2db9d03c17","modified":1609067575219},{"_id":"public/2019/08/06/boj-2231/index.html","hash":"8168918230cf119a038d412625d8c5dcbedfea57","modified":1609067575219},{"_id":"public/2019/08/06/boj-4673/index.html","hash":"e4f4fcd0574f8cc13c531ed740916b657d947cc4","modified":1609067575219},{"_id":"public/2019/08/04/boj-7568/index.html","hash":"2a23271b1d8ca0dfa6d09f688bef22bf01918277","modified":1609067575219},{"_id":"public/2019/07/31/pgs-42840/index.html","hash":"4188ef9dfec84b1adfbc0bb716fcf8af18387f5b","modified":1609067575219},{"_id":"public/2019/07/28/pgs-12982/index.html","hash":"b347d68d9d7f625a846d69250b13cf17dc35c1f0","modified":1609067575219},{"_id":"public/2019/07/28/pgs-42576/index.html","hash":"2b450bb3fa4e7575874c551821e88432b48756b2","modified":1609067575219},{"_id":"public/2019/07/26/pgs-12943/index.html","hash":"e7f277a4662c5f8a86618dbe75535c851a83fa56","modified":1609067575219},{"_id":"public/2019/07/26/pgs-12947/index.html","hash":"189773fcd3be28867da984c8e7ab166867e098a8","modified":1609067575219},{"_id":"public/2019/07/26/pgs-12950/index.html","hash":"85ea577f9dbff630ea4e15061df4ea1fb5ef8f8e","modified":1609067575219},{"_id":"public/2019/07/24/bj-10950/index.html","hash":"34b71906c1262a0ef47cd2e4c513d7b0fc2c2388","modified":1609067575219},{"_id":"public/2019/07/23/bj-2884/index.html","hash":"4efaa9e468d01b57e855ddfd0aba92bb82658261","modified":1609067575219},{"_id":"public/2019/07/23/pgs-12933/index.html","hash":"e6ad2a68ed14484721a95b5d561d1cab7364b529","modified":1609067575219},{"_id":"public/2019/07/23/pgs-12934/index.html","hash":"794babebe82d264e68d8272b17590916901576f4","modified":1609067575219},{"_id":"public/2019/07/22/pgs-12915/index.html","hash":"2ba85b789c29536465e11a8da82b683916447f54","modified":1609067575219},{"_id":"public/2019/07/22/pgs-12930/index.html","hash":"9f992daf59c1f6ef4474b6ea6f131c13e003146c","modified":1609067575219},{"_id":"public/2019/02/22/pgs-12921/index.html","hash":"d4de97fee0c20c4691394c9b41331f465ce90e9c","modified":1609067575219},{"_id":"public/2018/12/22/bj-1003/index.html","hash":"675e2d298acce9955f374c6d43388816675cb98d","modified":1609067575219},{"_id":"public/2018/12/16/bj-2577/index.html","hash":"377fa1b32652061aff26b87e263d11d5e82519ae","modified":1609067575219},{"_id":"public/2018/11/19/bj-2609/index.html","hash":"18631caf571cb0ef99550eae727400d1191c788d","modified":1609067575219},{"_id":"public/2018/11/07/bj-1699/index.html","hash":"2ea3b829ba82575cc2ceb709bf7d3849020d74c4","modified":1609067575219},{"_id":"public/2018/10/31/bj-1912/index.html","hash":"2c6df87eb48d841a4882433c65fcc99db6687e4f","modified":1609067575219},{"_id":"public/2018/10/29/bj-11054/index.html","hash":"3eae8ea053b1d4d5f541235477f8bb8f71a2ca30","modified":1609067575219},{"_id":"public/2018/10/29/bj-11722/index.html","hash":"bf3e3469aa32f014ce1034fd1fc6785a6aa91345","modified":1609067575219},{"_id":"public/2018/10/29/bj-11055/index.html","hash":"7b904d5d193e3a8d3865c646a9ecd7ea3fd3e0ca","modified":1609067575219},{"_id":"public/2018/10/28/bj-11053/index.html","hash":"add8d7480e37c86b624f1495bf4262c3abcd434d","modified":1609067575219},{"_id":"public/2018/10/26/bj-9465/index.html","hash":"234605110f81f121e0853abcd097f90b8204df4a","modified":1609067575219},{"_id":"public/2018/10/25/bj-2579/index.html","hash":"49beb6805240fa0e0f66c197d55f034b3d7fd514","modified":1609067575219},{"_id":"public/2018/10/24/bj-2156/index.html","hash":"d3e80bb03be2f8a4c5fc9c2f5009de1a090ded55","modified":1609067575219},{"_id":"public/2018/10/17/react-flux/index.html","hash":"f0a177928a6a268757dd5e108b7437ab5e4c9934","modified":1609067575219},{"_id":"public/2018/10/17/react-redux-counter/index.html","hash":"0eb5648ddabd9fbaadf0d7ef3f461c1d53d6f6d8","modified":1609067575219},{"_id":"public/2018/10/16/bj-2193/index.html","hash":"fd67ee2c4c01ab2d683223acedb37e6e98c9c117","modified":1609067575219},{"_id":"public/2018/10/15/bj-10844/index.html","hash":"347e6716a011d81ef0515e1140ae1972aa6e60f9","modified":1609067575219},{"_id":"public/2018/10/14/bj-2748/index.html","hash":"e8a136fe785d03d572820eb8c5cb94fe2a62afbf","modified":1609067575219},{"_id":"public/2018/10/13/bj-11727/index.html","hash":"dc7b916e1b47a587d90b7b8f3b2439846c7b2d88","modified":1609067575219},{"_id":"public/2018/10/12/js-this/index.html","hash":"e5b45712d2004c33586b56c07885ed5f2ae8b16b","modified":1609067575219},{"_id":"public/2018/10/10/bj-1110/index.html","hash":"bbedf9bd514af0c18cfb41ab43d2000ac0e0f258","modified":1609067575219},{"_id":"public/2018/10/07/bj-11726/index.html","hash":"590a2448ba0430f8ed1bfa7acefdf43450cd91d2","modified":1609067575219},{"_id":"public/2018/10/04/bj-1463/index.html","hash":"02800996d84c8cf36722548bc83fa994897c58aa","modified":1609067575219},{"_id":"public/2018/10/01/bj-9095/index.html","hash":"4981951bb4d448e3b158b52bd3ea4ac7c93a67f8","modified":1609067575219},{"_id":"public/2018/09/28/bj-2747/index.html","hash":"1ba67c1fca56cca9fbbec952920f38078185c207","modified":1609067575219},{"_id":"public/2018/09/27/bj-10824/index.html","hash":"563bf898ec7c2b909d90c307f6b7e2e5d6d3e19c","modified":1609067575219},{"_id":"public/2018/09/27/bj-11655/index.html","hash":"db324982b00ddee629fa9fac29028d66576b799e","modified":1609067575219},{"_id":"public/2018/09/27/bj-11656/index.html","hash":"bee58cfc1ff6f36ee8c45803c4e69a0b29d4a93c","modified":1609067575219},{"_id":"public/2018/09/24/bj-10808/index.html","hash":"6ebac8598977457e892fd17d48dc51655458b0a8","modified":1609067575219},{"_id":"public/2018/09/24/bj-10809/index.html","hash":"6c27ab70c138b8de728472a87dfbc58441b72477","modified":1609067575219},{"_id":"public/2018/09/24/bj-10820/index.html","hash":"c789e283f83f8463320f745aecc87d1d99be8a69","modified":1609067575219},{"_id":"public/2018/09/23/bj-10866/index.html","hash":"5b486b537fdd5e76cf9155d59a9281bf9c0edd6a","modified":1609067575219},{"_id":"public/2018/09/22/bj-1978/index.html","hash":"d171e807a4b15cc5f35ad277013f29e18947bea7","modified":1609067575219},{"_id":"public/2018/09/21/bj-10845/index.html","hash":"2976d6903a277853be8c8c6e03412de408922fb3","modified":1609067575219},{"_id":"public/2018/09/21/bj-1158/index.html","hash":"9e2b6c77cdf024d66f0e32e32cf55f08e4ef4c50","modified":1609067575219},{"_id":"public/2018/09/21/java-plang-4/index.html","hash":"542fe4d9899c7731080167f33148e2ea0d1c3848","modified":1609067575219},{"_id":"public/2018/09/20/bj-1406/index.html","hash":"4c143acfaf77a70991e70e03e794ba358a766b2f","modified":1609067575219},{"_id":"public/2018/09/19/bj-15552/index.html","hash":"75df5551bb4405e52ef7b0cf5bfcc2e4b12718fb","modified":1609067575219},{"_id":"public/2018/09/19/java-plang-3/index.html","hash":"27e18422bfba3a5144e7c4ca28698b0bd71a4961","modified":1609067575219},{"_id":"public/2018/09/18/java-plang-2/index.html","hash":"b65936557437a8dd3aa929fa4d62b198daf70696","modified":1609067575219},{"_id":"public/2018/09/18/bj-2839/index.html","hash":"0c50375b2ea2490b2e5e33ca42d02eb41a686770","modified":1609067575219},{"_id":"public/2018/09/17/bj-1924/index.html","hash":"acbc1483ca4017e4418e9d5f1c463e1435025b73","modified":1609067575219},{"_id":"public/2018/09/17/java-plang-1/index.html","hash":"763c8302b310e1b84329c2f2129fd15db974ca3b","modified":1609067575219},{"_id":"public/2018/09/16/bj-4344/index.html","hash":"00c9328593bcc98d5496d40d03d8b3dac2310fd0","modified":1609067575219},{"_id":"public/2018/09/14/bj-2751/index.html","hash":"25e3188cfeb885b5c2efcd9f06d02f89d275fb30","modified":1609067575219},{"_id":"public/2018/09/13/bj-2750/index.html","hash":"93e247af9cbb8a137f66228ae9e680cad0f4e0d8","modified":1609067575219},{"_id":"public/2018/09/13/bj-10799/index.html","hash":"daf52e9b1967456b434ebf44013db32052d7a594","modified":1609067575219},{"_id":"public/2018/09/12/bj-2292/index.html","hash":"08fc9e27d1fe6274a9f8bca387afeb2c7cdd4d29","modified":1609067575219},{"_id":"public/2018/09/12/bj-9012/index.html","hash":"fb8d5ffd58afc66fcfc951174ca9cbf0177304b5","modified":1609067575219},{"_id":"public/archives/index.html","hash":"3c03dd87ec535581851e621b1a65a36123d34417","modified":1609067575219},{"_id":"public/archives/page/3/index.html","hash":"f360b2c94471966b89a988522a6adf8ad99a879a","modified":1609067575219},{"_id":"public/archives/page/4/index.html","hash":"8572a6853f12267eb83deb3fc5a87d2441515b8b","modified":1609067575219},{"_id":"public/archives/page/5/index.html","hash":"2f9b79037b374470f89d16905428869a10d31f9e","modified":1609067575219},{"_id":"public/archives/page/6/index.html","hash":"0166313dbbcbf309e11efd359deb58beae24837f","modified":1609067575219},{"_id":"public/archives/page/8/index.html","hash":"d82ae7c6b7631279b764ccfa409aa73b07a0af22","modified":1609067575219},{"_id":"public/archives/2018/page/4/index.html","hash":"b95347f044571d473ee81f0c4c4e7c741840056b","modified":1609067575219},{"_id":"public/archives/2019/page/3/index.html","hash":"f5f7d5c86ca5f0ace6c63d5ecf3464d9b5584c46","modified":1609067575219},{"_id":"public/categories/백준/page/2/index.html","hash":"ca501fcc37c1d54d4dc41b2213a5479bf969a0a5","modified":1609067575219},{"_id":"public/categories/백준/page/3/index.html","hash":"fbd46caa0e35ae932d1e6570090c2de8fe1d7db9","modified":1609067575219},{"_id":"public/categories/백준/page/4/index.html","hash":"bc96df2a23e30b95e5382c1443229c4549ebed27","modified":1609067575219},{"_id":"public/categories/프로그래머스/page/2/index.html","hash":"35ec5971d8aee446424a0a1b771fbe81bb932d66","modified":1609067575219},{"_id":"public/index.html","hash":"1de6333a05c329f35c54f405598074e751a3cf33","modified":1609067575219},{"_id":"public/page/2/index.html","hash":"fb49e0a0609fc57cf84833eb82dca86c8ca2f2ff","modified":1609067575219},{"_id":"public/page/3/index.html","hash":"ee6edbbd2bddfbc5a45dbb40a327acdd43a338fd","modified":1609067575219},{"_id":"public/page/4/index.html","hash":"99ec70041c52680e2bbdd5e1017e4754fb66f500","modified":1609067575219},{"_id":"public/page/5/index.html","hash":"cadf7dddc6e8222b52dd943284e4e75dcd2f5240","modified":1609067575219},{"_id":"public/page/6/index.html","hash":"e4b0b774575c0847ed32db5b1540361ee6155189","modified":1609067575219},{"_id":"public/page/7/index.html","hash":"879e9acf738d70f4e882063a68259f24f71b22e1","modified":1609067575219},{"_id":"public/page/8/index.html","hash":"ad502dbc33a0e90a3f178bae740f830331063f23","modified":1609067575219},{"_id":"public/page/9/index.html","hash":"1e7f7f95ef2ea5ed439e2e220902ff691b7054b2","modified":1609067575219},{"_id":"public/tags/algorithm/page/3/index.html","hash":"4cfb3fec40f28c63e56372e1cc505f4593df3d06","modified":1609067575219},{"_id":"public/tags/algorithm/page/4/index.html","hash":"de615e97bcd71596329bb64220c0cc1b71cf2d2b","modified":1609067575219},{"_id":"public/tags/algorithm/page/5/index.html","hash":"de87f6927816b516beecc0f6dde3a8ae7c7c7371","modified":1609067575219},{"_id":"public/images/bj-11054/image-1.png","hash":"98233e101a1a60b09ada662411322e8b8b1c91a0","modified":1609067575219},{"_id":"public/images/bj-2193/example.png","hash":"9db9b5f501094f353e9a004ac9f60d1d7ae46786","modified":1609067575219},{"_id":"public/images/js-prototype/prototype-link3.png","hash":"927b882e33913339c979748423eba37ed75925a5","modified":1609067575219},{"_id":"public/images/bj-9095/example.png","hash":"50c6b6749529e9f9a639e683c4735f369cde81f6","modified":1609067575219},{"_id":"public/images/js-prototype/prototype-link4.png","hash":"ba321928fbdb786661a2a7b6de87aabde50967e2","modified":1609067575219},{"_id":"public/images/react-flux/flux-1.png","hash":"961657e641dd45721b96b7b632db66a6dc03e949","modified":1609067575219},{"_id":"public/images/react-flux/flux-2.png","hash":"8797dc034b50d92b3fe18ce1faa10f8e239f9947","modified":1609067575219},{"_id":"public/images/react-redux-counter/result.png","hash":"36cbe88fbaa6ed2ec644c6d27f452c153ecd96ca","modified":1609067575219},{"_id":"public/images/react-flux/flux-mvc-1.png","hash":"0433aa566d105fe532955283b50bbbcc48c28b3e","modified":1609067575219},{"_id":"public/images/react-flux/flux-3.png","hash":"dfdf96018ea33d12c2f68a14d9c6c5b00530869f","modified":1609067575219},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1609067575219},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1609067575219},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1609067575219},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1609067575219},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1609067575219},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1609067575219},{"_id":"public/images/react-index/index-1.png","hash":"803535f2be75a3560458a429e42b15e3686c26d0","modified":1609067575219},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1609067575219},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1609067575219},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1609067575219},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1609067575219},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1609067575219},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1609067575219},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1609067575219},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1609067575219},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1609067575219},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1609067575219},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1609067575219},{"_id":"public/images/bj-11054/image-2.png","hash":"38cb877871c08060125dbc5478ca43ecf9b80100","modified":1609067575219},{"_id":"public/images/js-prototype/prototype-object2.png","hash":"5eec15226c63b382b4e76b03abf693ccab4d4cc8","modified":1609067575219},{"_id":"public/images/js-prototype/prototype-link.png","hash":"fea4238e3f6f7ef583fc38e8e5d7249ebcdef16c","modified":1609067575219},{"_id":"public/images/js-prototype/prototype-object.png","hash":"d6ce160617fed29a3a2c111bb0ae639a5e62a793","modified":1609067575219},{"_id":"public/images/js-prototype/prototype-object3.png","hash":"cd597eeb3ad58d4cb319f2848734d7f50107e24b","modified":1609067575219},{"_id":"public/images/react-flux/flux-mvc-2.png","hash":"d586ac332985fb3ab6d942d93f68f3443fe654c9","modified":1609067575219},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1609067575219},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1609067575219},{"_id":"public/js/algolia-search.js","hash":"f31a633c15391ce0095579735a479f3f92622eab","modified":1609067575219},{"_id":"public/js/local-search.js","hash":"0d30f1c0e4d4a1cc26d494808f3f36132d06ae14","modified":1609067575219},{"_id":"public/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1609067575219},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1609067575219},{"_id":"public/js/next-boot.js","hash":"f7045763e277e685c271bd4b4c37e531d699ac63","modified":1609067575219},{"_id":"public/js/utils.js","hash":"a1e70ac9d32697907d5d78f2533d627f4df8ebcb","modified":1609067575219},{"_id":"public/js/schemes/muse.js","hash":"ae2a2502b77203e83f75a040c43e86a7ecb4873c","modified":1609067575219},{"_id":"public/js/schemes/pisces.js","hash":"f068b46f8c305c7436c2767492a6bed42dcd764c","modified":1609067575219},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1609067575219},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1609067575219},{"_id":"public/css/main.css","hash":"4b7c29d2f8a933fbd52ff9cc72e682f66b925ebe","modified":1609067575219},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1609067575219},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1609067575219},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1609067575219},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1609067575219},{"_id":"public/images/2020-02-03-post/5.png","hash":"894d24a44748489b837424550bec33c36d6babcb","modified":1609067575219},{"_id":"public/images/2020-07-26-next-styled-components/2020-07-11__12.06.58.png","hash":"684063b3c2a1b93a86a85f88954e1837ffe05ad9","modified":1609067575219},{"_id":"public/images/bj-1003/fibo.png","hash":"e6f2d6605bd920fd4f30445350150c0a249e64f6","modified":1609067575219},{"_id":"public/images/js-prototype/prototype-link2.png","hash":"abd33eac5823dc8b49c604808351b600924067b7","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.00.20.png","hash":"44d4e3b8934a328f1b86a727bc5177eb714d79dd","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.01.52.png","hash":"b3bb0982b120a560af86279bb3fd95a3cb6a46bf","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.25.15.png","hash":"a2057f3ae0b854688eaac7a33e268397623d24fa","modified":1609067575219},{"_id":"public/images/2020-02-03-post/10.png","hash":"19111433c9d5848664d218f781f6a45665cd5ec7","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.19.55.png","hash":"f6c1392e2c694e82c02f61e45dc01bc9264f35ca","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.40.36.png","hash":"e0ed4bab3f0d1cb8ee2e62df3086cdd521df86a6","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.39.16.png","hash":"a71ec5cb3972f1e530fb7ddc02ce8fbb360da94e","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_1.59.00.png","hash":"230a6d38b068aafff52e70dfcdd2922f6a02844a","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.26.10.png","hash":"e01ba4b57e6839f691a8a484d81d9b5773de3e1a","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.41.25.png","hash":"e87d878a60bb40c740552e97f0e8ea922ded26c5","modified":1609067575219},{"_id":"public/images/js-prototype/prototype-object4.png","hash":"bc21bb0f9ecf4ab02faff6403e9883cd5b11bc00","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_1.58.25.png","hash":"9954fb6ca6c11d190e4e9f2f496894a302f54caf","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.42.14.png","hash":"d28772d8074e0e0561d995c9d871768891bbf28e","modified":1609067575219},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.18.18.png","hash":"998e85e95e2c54f6a119fbbd8bf40d34f3aec046","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.38.10.png","hash":"fec274e703817bf8bd84c0c7747c4a2754a45304","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.35.36.png","hash":"a8abf8156b0f0f1f5acca877f711037ebda90ca1","modified":1609067575219},{"_id":"public/images/2020-07-26-debug-closure/2020-07-26_2.36.58.png","hash":"901227735f3ef4d020ae0f2d17ce0034d598d874","modified":1609067575219},{"_id":"public/images/2020-07-26-next-styled-components/2020-07-11__1.23.42.png","hash":"6c7084676fe04d74da68d28034d846e66a37b135","modified":1609067575219}],"Category":[{"name":"백준","_id":"ckj71affw0003uv59699qez1q"},{"name":"JAVA","_id":"ckj71afg5000muv59282wgq20"},{"name":"자바스크립트","_id":"ckj71afgq002suv593vek6076"},{"name":"React","_id":"ckj71afgy003buv59abep6xcm"},{"name":"프로그래머스","_id":"ckj71afh9004iuv599305f34l"},{"name":"leetcode","_id":"ckj71afhq006suv590xgl0cdd"},{"name":"etc","_id":"ckj71afhy007quv5905udbvfa"}],"Data":[],"Page":[{"title":"categories","date":"2020-01-20T06:34:12.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-01-20 15:34:12\ntype: \"categories\"\n---\n","updated":"2020-05-05T08:00:03.863Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckj71affu0001uv59ckce5v70","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2020-01-20T06:33:58.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-01-20 15:33:58\ntype: \"tags\"\n---\n","updated":"2020-05-05T08:00:03.879Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckj71afio00a6uv594wtjeuu9","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"[백준/2292] 벌집","_content":"> Baekjoon Online Judge - [2292](https://www.acmicpc.net/problem/2292)\n\n## Review\n* 벌집은 '1-7-19-37...' 즉, 6의 배수만큼 더해저 늘어난다.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint input = sc.nextInt();\n\t\tint six = 0;\n\t\tint room = 1;\n\t\tint count = 1;\n\t\tsc.close();\n\t\t\n\t\t// 6의 배수씩 늘어나다 input보다 커질 경우 멈춤\n\t\twhile (room < input) {\n\t\t\t// 6의 배수만큼 늘어남\n\t\t\tsix += 6;\n\t\t\troom += six;\n\t\t\t\n\t\t\t// 6씩 늘어날 때마다 1을 더함\n\t\t\tcount ++;\t\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n```","source":"_posts/2018-09-12-bj-2292.md","raw":"---\ntitle: \"[백준/2292] 벌집\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [2292](https://www.acmicpc.net/problem/2292)\n\n## Review\n* 벌집은 '1-7-19-37...' 즉, 6의 배수만큼 더해저 늘어난다.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint input = sc.nextInt();\n\t\tint six = 0;\n\t\tint room = 1;\n\t\tint count = 1;\n\t\tsc.close();\n\t\t\n\t\t// 6의 배수씩 늘어나다 input보다 커질 경우 멈춤\n\t\twhile (room < input) {\n\t\t\t// 6의 배수만큼 늘어남\n\t\t\tsix += 6;\n\t\t\troom += six;\n\t\t\t\n\t\t\t// 6씩 늘어날 때마다 1을 더함\n\t\t\tcount ++;\t\n\t\t}\n\t\tSystem.out.println(count);\n\t}\n}\n```","slug":"bj-2292","published":1,"date":"2018-09-11T15:00:00.000Z","updated":"2020-05-05T08:00:03.851Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71affq0000uv591qks13sk","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yMjky\" title=\"https://www.acmicpc.net/problem/2292\">2292<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>벌집은 ‘1-7-19-37…’ 즉, 6의 배수만큼 더해저 늘어난다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> input = sc.nextInt();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> six = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> room = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> count = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tsc.close();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 6의 배수씩 늘어나다 input보다 커질 경우 멈춤</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (room &lt; input) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 6의 배수만큼 늘어남</span></span><br><span class=\"line\">\t\t\tsix += <span class=\"number\">6</span>;</span><br><span class=\"line\">\t\t\troom += six;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 6씩 늘어날 때마다 1을 더함</span></span><br><span class=\"line\">\t\t\tcount ++;\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(count);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yMjky\" title=\"https://www.acmicpc.net/problem/2292\">2292<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>벌집은 ‘1-7-19-37…’ 즉, 6의 배수만큼 더해저 늘어난다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> input = sc.nextInt();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> six = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> room = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> count = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tsc.close();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"comment\">// 6의 배수씩 늘어나다 input보다 커질 경우 멈춤</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (room &lt; input) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 6의 배수만큼 늘어남</span></span><br><span class=\"line\">\t\t\tsix += <span class=\"number\">6</span>;</span><br><span class=\"line\">\t\t\troom += six;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 6씩 늘어날 때마다 1을 더함</span></span><br><span class=\"line\">\t\t\tcount ++;\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(count);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/2750] 수 정렬하기","_content":"\n> Baekjoon Online Judge - [2750](https://www.acmicpc.net/problem/2750)\n\n## Review\n\n- 무슨 정렬로 풀까 하다가 선택 정렬로 풀었다.\n- 입력 부분을 작성한 다음 선택 정렬을 구현하면 된다.\n- 선택 정렬은 O(n²) 시간복잡도를 가졌다. 기억하자.\n\n## Code (JAVA)\n\n```java\nimport java.util.*;\nimport java.util.Arrays;\n\npublic class Main {\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n\n    int[] arr = new int[n];\n    int i, j, temp, min;\n\n    // 숫자 하나씩 배열에 넣기\n    for (i = 0; i < n; i++) {\n      int data = sc.nextInt();\n      arr[i] = data;\n    }\n\n    sc.close();\n\n    for(i = 0; i < arr.length; i++) {\n      // 최솟값 초기화\n      min = i;\n      for(j = i+1; j < arr.length; j++) {\n        // 배열에서 최솟값 찾기\n        if(arr[min] > arr[j]) {\n          min = j;\n        }\n      }\n\n      // 값 바꾸기\n      temp = arr[i];\n      arr[i] = arr[min];\n      arr[min] = temp;\n\n      // 출력\n      System.out.println(arr[i]);\n    }\n  }\n}\n```\n","source":"_posts/2018-09-13-bj-2750.md","raw":"---\ntitle: \"[백준/2750] 수 정렬하기\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [2750](https://www.acmicpc.net/problem/2750)\n\n## Review\n\n- 무슨 정렬로 풀까 하다가 선택 정렬로 풀었다.\n- 입력 부분을 작성한 다음 선택 정렬을 구현하면 된다.\n- 선택 정렬은 O(n²) 시간복잡도를 가졌다. 기억하자.\n\n## Code (JAVA)\n\n```java\nimport java.util.*;\nimport java.util.Arrays;\n\npublic class Main {\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n\n    int[] arr = new int[n];\n    int i, j, temp, min;\n\n    // 숫자 하나씩 배열에 넣기\n    for (i = 0; i < n; i++) {\n      int data = sc.nextInt();\n      arr[i] = data;\n    }\n\n    sc.close();\n\n    for(i = 0; i < arr.length; i++) {\n      // 최솟값 초기화\n      min = i;\n      for(j = i+1; j < arr.length; j++) {\n        // 배열에서 최솟값 찾기\n        if(arr[min] > arr[j]) {\n          min = j;\n        }\n      }\n\n      // 값 바꾸기\n      temp = arr[i];\n      arr[i] = arr[min];\n      arr[min] = temp;\n\n      // 출력\n      System.out.println(arr[i]);\n    }\n  }\n}\n```\n","slug":"bj-2750","published":1,"date":"2018-09-12T15:00:00.000Z","updated":"2020-05-05T08:00:03.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71affu0002uv59g05s7hjt","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNzUw\" title=\"https://www.acmicpc.net/problem/2750\">2750<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>무슨 정렬로 풀까 하다가 선택 정렬로 풀었다.</li>\n<li>입력 부분을 작성한 다음 선택 정렬을 구현하면 된다.</li>\n<li>선택 정렬은 O(n²) 시간복잡도를 가졌다. 기억하자.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, temp, min;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 숫자 하나씩 배열에 넣기</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> data = sc.nextInt();</span><br><span class=\"line\">      arr[i] = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 최솟값 초기화</span></span><br><span class=\"line\">      min = i;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(j = i+<span class=\"number\">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 배열에서 최솟값 찾기</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[min] &gt; arr[j]) &#123;</span><br><span class=\"line\">          min = j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 값 바꾸기</span></span><br><span class=\"line\">      temp = arr[i];</span><br><span class=\"line\">      arr[i] = arr[min];</span><br><span class=\"line\">      arr[min] = temp;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 출력</span></span><br><span class=\"line\">      System.out.println(arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNzUw\" title=\"https://www.acmicpc.net/problem/2750\">2750<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>무슨 정렬로 풀까 하다가 선택 정렬로 풀었다.</li>\n<li>입력 부분을 작성한 다음 선택 정렬을 구현하면 된다.</li>\n<li>선택 정렬은 O(n²) 시간복잡도를 가졌다. 기억하자.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i, j, temp, min;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 숫자 하나씩 배열에 넣기</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> data = sc.nextInt();</span><br><span class=\"line\">      arr[i] = data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 최솟값 초기화</span></span><br><span class=\"line\">      min = i;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(j = i+<span class=\"number\">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 배열에서 최솟값 찾기</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(arr[min] &gt; arr[j]) &#123;</span><br><span class=\"line\">          min = j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 값 바꾸기</span></span><br><span class=\"line\">      temp = arr[i];</span><br><span class=\"line\">      arr[i] = arr[min];</span><br><span class=\"line\">      arr[min] = temp;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 출력</span></span><br><span class=\"line\">      System.out.println(arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/9012] 괄호","_content":"> Baekjoon Online Judge - [9012](https://www.acmicpc.net/problem/9012)\n\n## Review\n* 굳이 스택으로 풀지 않아도 될 것 같은데 연습 겸 일부러 저번에 했던 스택 문제를 응용해서 풀었다.\n* ')' 처리가 정말 중요했던 문제. 정말 고생 많이 했다. 17~23번 라인이 핵심인데, 만약 문자가 ')'인 경우 스택이 비어있지 않으면 무조건 false 처리를 한다.\n* 맞왜틀일 경우 [반례](https://www.acmicpc.net/board/view/24691)를 보자.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tString s;\n\t\t\n\t\twhile(n-->0) {\n\t\t\tboolean isVPS = true;\n\t\t\tStack stack = new Stack();\n\t\t\ts = sc.next();\n\t\t\t\n\t\t\tfor(int j = 0; j < s.length(); j++) {\n\t\t\t\tif(s.charAt(j)=='(') {\n\t\t\t\t\tstack.push(1);\n\t\t\t\t} else if(s.charAt(j)==')') { \n\t\t\t\t\tif(stack.size != 0) {\n\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisVPS = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (stack.size !=0) {\n\t\t\t\tisVPS = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(isVPS) {\n                System.out.println(\"YES\");\n            }else {\n                System.out.println(\"NO\");\n            }\n\t\t}\n\t\tsc.close();\n\t}\n\t\n\tstatic class Stack {\n\t\tprivate int size = 0;\n\t\tprivate SNode top = null;\n\t\t\n\t\tprivate class SNode {\n\t\t\tint data;\n\t\t    private SNode next;\n\t\t}\n\t\t\n\t\tpublic void push(int x) {\n\t\t\tSNode node = new SNode();\n\t\t\tnode.data = x;\n\t\t\tnode.next = top;\n\t\t\ttop = node;\n\t\t\tsize++;\n\t\t}\n\t\t\n\t\tpublic void pop() {\n\t\t\ttop = top.next;\n\t\t\tsize--;\n\t\t}\n\t}\n}\n```","source":"_posts/2018-09-12-bj-9012.md","raw":"---\ntitle: \"[백준/9012] 괄호\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [9012](https://www.acmicpc.net/problem/9012)\n\n## Review\n* 굳이 스택으로 풀지 않아도 될 것 같은데 연습 겸 일부러 저번에 했던 스택 문제를 응용해서 풀었다.\n* ')' 처리가 정말 중요했던 문제. 정말 고생 많이 했다. 17~23번 라인이 핵심인데, 만약 문자가 ')'인 경우 스택이 비어있지 않으면 무조건 false 처리를 한다.\n* 맞왜틀일 경우 [반례](https://www.acmicpc.net/board/view/24691)를 보자.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tString s;\n\t\t\n\t\twhile(n-->0) {\n\t\t\tboolean isVPS = true;\n\t\t\tStack stack = new Stack();\n\t\t\ts = sc.next();\n\t\t\t\n\t\t\tfor(int j = 0; j < s.length(); j++) {\n\t\t\t\tif(s.charAt(j)=='(') {\n\t\t\t\t\tstack.push(1);\n\t\t\t\t} else if(s.charAt(j)==')') { \n\t\t\t\t\tif(stack.size != 0) {\n\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisVPS = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (stack.size !=0) {\n\t\t\t\tisVPS = false;\n\t\t\t}\n\t\t\t\n\t\t\tif(isVPS) {\n                System.out.println(\"YES\");\n            }else {\n                System.out.println(\"NO\");\n            }\n\t\t}\n\t\tsc.close();\n\t}\n\t\n\tstatic class Stack {\n\t\tprivate int size = 0;\n\t\tprivate SNode top = null;\n\t\t\n\t\tprivate class SNode {\n\t\t\tint data;\n\t\t    private SNode next;\n\t\t}\n\t\t\n\t\tpublic void push(int x) {\n\t\t\tSNode node = new SNode();\n\t\t\tnode.data = x;\n\t\t\tnode.next = top;\n\t\t\ttop = node;\n\t\t\tsize++;\n\t\t}\n\t\t\n\t\tpublic void pop() {\n\t\t\ttop = top.next;\n\t\t\tsize--;\n\t\t}\n\t}\n}\n```","slug":"bj-9012","published":1,"date":"2018-09-11T15:00:00.000Z","updated":"2020-05-05T08:00:03.851Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71affx0005uv593nmh46va","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS85MDEy\" title=\"https://www.acmicpc.net/problem/9012\">9012<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>굳이 스택으로 풀지 않아도 될 것 같은데 연습 겸 일부러 저번에 했던 스택 문제를 응용해서 풀었다.</li>\n<li>‘)’ 처리가 정말 중요했던 문제. 정말 고생 많이 했다. 17~23번 라인이 핵심인데, 만약 문자가 ‘)’인 경우 스택이 비어있지 않으면 무조건 false 처리를 한다.</li>\n<li>맞왜틀일 경우 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvYm9hcmQvdmlldy8yNDY5MQ==\" title=\"https://www.acmicpc.net/board/view/24691\">반례<i class=\"fa fa-external-link\"></i></span>를 보자.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">\t\tString s;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(n--&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">boolean</span> isVPS = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t\tStack stack = <span class=\"keyword\">new</span> Stack();</span><br><span class=\"line\">\t\t\ts = sc.next();</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; s.length(); j++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(s.charAt(j)==<span class=\"string\">'('</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tstack.push(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.charAt(j)==<span class=\"string\">')'</span>) &#123; </span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(stack.size != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tstack.pop();</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\tisVPS = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (stack.size !=<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\tisVPS = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(isVPS) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"YES\"</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"NO\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tsc.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stack</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> size = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> SNode top = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SNode</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> data;</span><br><span class=\"line\">\t\t    <span class=\"keyword\">private</span> SNode next;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tSNode node = <span class=\"keyword\">new</span> SNode();</span><br><span class=\"line\">\t\t\tnode.data = x;</span><br><span class=\"line\">\t\t\tnode.next = top;</span><br><span class=\"line\">\t\t\ttop = node;</span><br><span class=\"line\">\t\t\tsize++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\ttop = top.next;</span><br><span class=\"line\">\t\t\tsize--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS85MDEy\" title=\"https://www.acmicpc.net/problem/9012\">9012<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>굳이 스택으로 풀지 않아도 될 것 같은데 연습 겸 일부러 저번에 했던 스택 문제를 응용해서 풀었다.</li>\n<li>‘)’ 처리가 정말 중요했던 문제. 정말 고생 많이 했다. 17~23번 라인이 핵심인데, 만약 문자가 ‘)’인 경우 스택이 비어있지 않으면 무조건 false 처리를 한다.</li>\n<li>맞왜틀일 경우 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvYm9hcmQvdmlldy8yNDY5MQ==\" title=\"https://www.acmicpc.net/board/view/24691\">반례<i class=\"fa fa-external-link\"></i></span>를 보자.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">\t\tString s;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(n--&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">boolean</span> isVPS = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t\tStack stack = <span class=\"keyword\">new</span> Stack();</span><br><span class=\"line\">\t\t\ts = sc.next();</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; s.length(); j++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(s.charAt(j)==<span class=\"string\">'('</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tstack.push(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.charAt(j)==<span class=\"string\">')'</span>) &#123; </span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(stack.size != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tstack.pop();</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\tisVPS = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (stack.size !=<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\tisVPS = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(isVPS) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"YES\"</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"NO\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tsc.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stack</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> size = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> SNode top = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SNode</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> data;</span><br><span class=\"line\">\t\t    <span class=\"keyword\">private</span> SNode next;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tSNode node = <span class=\"keyword\">new</span> SNode();</span><br><span class=\"line\">\t\t\tnode.data = x;</span><br><span class=\"line\">\t\t\tnode.next = top;</span><br><span class=\"line\">\t\t\ttop = node;</span><br><span class=\"line\">\t\t\tsize++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\ttop = top.next;</span><br><span class=\"line\">\t\t\tsize--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/2751] 수 정렬하기 2","_content":"\n> Baekjoon Online Judge - [2751](https://www.acmicpc.net/problem/2751)\n\n## Review\n\n- 병합 정렬로 풀었다.\n- 병합 정렬부터 조금 어려워져서 예제를 보고 풀었다.\n- 이건 참고한 [동영상과 예제](https://www.youtube.com/watch?v=QAyl79dCO_k&t=295s). 아직 갈 길이 멀다.\n\n## Code (JAVA)\n\n```java\nimport java.util.*;\n\npublic class Main {\n\n  private static void mergeSort(int[] arr) {\n    int[] temp = new int[arr.length];\n    mergeSort(arr, temp, 0, arr.length - 1);\n  }\n\n  private static void mergeSort(int[] arr, int[] temp, int start, int end) {\n\n    //반으로 나눠서\n    if(start < end) {\n      int mid = (start + end) / 2;\n\n      // 재귀 호출\n      mergeSort(arr, temp, start, mid);\n      mergeSort(arr, temp, mid + 1, end);\n\n      // 쪼갠 다음에 병합\n      merge(arr, temp, start, mid, end);\n    }\n  }\n\n  private static void merge(int[] arr, int[] temp, int start, int mid, int end) {\n\n    // 임시 배열에 넣음\n    for (int i = start; i <= end; i++) {\n      temp[i] = arr[i];\n    }\n\n    int part1 = start;\n    int part2 = mid + 1;\n    int index = start;\n\n    // 두 개의 배열을 모두 돌 때까지\n    while (part1 <= mid && part2 <= end) {\n      // 비교해서 arr에 삽입\n      if(temp[part1] <= temp[part2]) {\n        arr[index] = temp[part1];\n        part1++;\n      } else {\n        arr[index] = temp[part2];\n        part2++;\n      }\n      index++;\n    }\n\n    // 뒤쪽 배열은 비였고, 앞쪽 배열에 데이터가 남아있는 경우\n    // 앞쪽 포인터가 배열의 끝에서 남은 만큼을 돌면서\n    // 최종적으로 저장할 배열에 남은 값들을 붙여줌\n    for(int i = 0; i <= mid-part1; i++) {\n      arr[index + i] = temp[part1 + i];\n    }\n  }\n\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    int[] arr = new int[n];\n\n    for (int i = 0; i < n; i++) {\n      arr[i] = sc.nextInt();\n    }\n\n    mergeSort(arr);\n\n    for (int i = 0; i < n; i++) {\n      System.out.println(arr[i]);\n    }\n    sc.close();\n  }\n\n}\n```\n","source":"_posts/2018-09-14-bj-2751.md","raw":"---\ntitle: \"[백준/2751] 수 정렬하기 2\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [2751](https://www.acmicpc.net/problem/2751)\n\n## Review\n\n- 병합 정렬로 풀었다.\n- 병합 정렬부터 조금 어려워져서 예제를 보고 풀었다.\n- 이건 참고한 [동영상과 예제](https://www.youtube.com/watch?v=QAyl79dCO_k&t=295s). 아직 갈 길이 멀다.\n\n## Code (JAVA)\n\n```java\nimport java.util.*;\n\npublic class Main {\n\n  private static void mergeSort(int[] arr) {\n    int[] temp = new int[arr.length];\n    mergeSort(arr, temp, 0, arr.length - 1);\n  }\n\n  private static void mergeSort(int[] arr, int[] temp, int start, int end) {\n\n    //반으로 나눠서\n    if(start < end) {\n      int mid = (start + end) / 2;\n\n      // 재귀 호출\n      mergeSort(arr, temp, start, mid);\n      mergeSort(arr, temp, mid + 1, end);\n\n      // 쪼갠 다음에 병합\n      merge(arr, temp, start, mid, end);\n    }\n  }\n\n  private static void merge(int[] arr, int[] temp, int start, int mid, int end) {\n\n    // 임시 배열에 넣음\n    for (int i = start; i <= end; i++) {\n      temp[i] = arr[i];\n    }\n\n    int part1 = start;\n    int part2 = mid + 1;\n    int index = start;\n\n    // 두 개의 배열을 모두 돌 때까지\n    while (part1 <= mid && part2 <= end) {\n      // 비교해서 arr에 삽입\n      if(temp[part1] <= temp[part2]) {\n        arr[index] = temp[part1];\n        part1++;\n      } else {\n        arr[index] = temp[part2];\n        part2++;\n      }\n      index++;\n    }\n\n    // 뒤쪽 배열은 비였고, 앞쪽 배열에 데이터가 남아있는 경우\n    // 앞쪽 포인터가 배열의 끝에서 남은 만큼을 돌면서\n    // 최종적으로 저장할 배열에 남은 값들을 붙여줌\n    for(int i = 0; i <= mid-part1; i++) {\n      arr[index + i] = temp[part1 + i];\n    }\n  }\n\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    int[] arr = new int[n];\n\n    for (int i = 0; i < n; i++) {\n      arr[i] = sc.nextInt();\n    }\n\n    mergeSort(arr);\n\n    for (int i = 0; i < n; i++) {\n      System.out.println(arr[i]);\n    }\n    sc.close();\n  }\n\n}\n```\n","slug":"bj-2751","published":1,"date":"2018-09-13T15:00:00.000Z","updated":"2020-05-05T08:00:03.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71affy0006uv5919i98l3e","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNzUx\" title=\"https://www.acmicpc.net/problem/2751\">2751<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>병합 정렬로 풀었다.</li>\n<li>병합 정렬부터 조금 어려워져서 예제를 보고 풀었다.</li>\n<li>이건 참고한 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1RQXlsNzlkQ09fayZ0PTI5NXM=\" title=\"https://www.youtube.com/watch?v=QAyl79dCO_k&t=295s\">동영상과 예제<i class=\"fa fa-external-link\"></i></span>. 아직 갈 길이 멀다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">mergeSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] temp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[arr.length];</span><br><span class=\"line\">    mergeSort(arr, temp, <span class=\"number\">0</span>, arr.length - <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">mergeSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span>[] temp, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//반으로 나눠서</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(start &lt; end) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> mid = (start + end) / <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 재귀 호출</span></span><br><span class=\"line\">      mergeSort(arr, temp, start, mid);</span><br><span class=\"line\">      mergeSort(arr, temp, mid + <span class=\"number\">1</span>, end);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 쪼갠 다음에 병합</span></span><br><span class=\"line\">      merge(arr, temp, start, mid, end);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span>[] temp, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> mid, <span class=\"keyword\">int</span> end)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 임시 배열에 넣음</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = start; i &lt;= end; i++) &#123;</span><br><span class=\"line\">      temp[i] = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> part1 = start;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> part2 = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = start;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 두 개의 배열을 모두 돌 때까지</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (part1 &lt;= mid &amp;&amp; part2 &lt;= end) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 비교해서 arr에 삽입</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(temp[part1] &lt;= temp[part2]) &#123;</span><br><span class=\"line\">        arr[index] = temp[part1];</span><br><span class=\"line\">        part1++;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        arr[index] = temp[part2];</span><br><span class=\"line\">        part2++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      index++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 뒤쪽 배열은 비였고, 앞쪽 배열에 데이터가 남아있는 경우</span></span><br><span class=\"line\">    <span class=\"comment\">// 앞쪽 포인터가 배열의 끝에서 남은 만큼을 돌면서</span></span><br><span class=\"line\">    <span class=\"comment\">// 최종적으로 저장할 배열에 남은 값들을 붙여줌</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= mid-part1; i++) &#123;</span><br><span class=\"line\">      arr[index + i] = temp[part1 + i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">      arr[i] = sc.nextInt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    mergeSort(arr);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">      System.out.println(arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNzUx\" title=\"https://www.acmicpc.net/problem/2751\">2751<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>병합 정렬로 풀었다.</li>\n<li>병합 정렬부터 조금 어려워져서 예제를 보고 풀었다.</li>\n<li>이건 참고한 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1RQXlsNzlkQ09fayZ0PTI5NXM=\" title=\"https://www.youtube.com/watch?v=QAyl79dCO_k&t=295s\">동영상과 예제<i class=\"fa fa-external-link\"></i></span>. 아직 갈 길이 멀다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">mergeSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] temp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[arr.length];</span><br><span class=\"line\">    mergeSort(arr, temp, <span class=\"number\">0</span>, arr.length - <span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">mergeSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span>[] temp, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//반으로 나눠서</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(start &lt; end) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> mid = (start + end) / <span class=\"number\">2</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 재귀 호출</span></span><br><span class=\"line\">      mergeSort(arr, temp, start, mid);</span><br><span class=\"line\">      mergeSort(arr, temp, mid + <span class=\"number\">1</span>, end);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 쪼갠 다음에 병합</span></span><br><span class=\"line\">      merge(arr, temp, start, mid, end);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span>[] temp, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> mid, <span class=\"keyword\">int</span> end)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 임시 배열에 넣음</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = start; i &lt;= end; i++) &#123;</span><br><span class=\"line\">      temp[i] = arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> part1 = start;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> part2 = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = start;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 두 개의 배열을 모두 돌 때까지</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (part1 &lt;= mid &amp;&amp; part2 &lt;= end) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 비교해서 arr에 삽입</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(temp[part1] &lt;= temp[part2]) &#123;</span><br><span class=\"line\">        arr[index] = temp[part1];</span><br><span class=\"line\">        part1++;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        arr[index] = temp[part2];</span><br><span class=\"line\">        part2++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      index++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 뒤쪽 배열은 비였고, 앞쪽 배열에 데이터가 남아있는 경우</span></span><br><span class=\"line\">    <span class=\"comment\">// 앞쪽 포인터가 배열의 끝에서 남은 만큼을 돌면서</span></span><br><span class=\"line\">    <span class=\"comment\">// 최종적으로 저장할 배열에 남은 값들을 붙여줌</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= mid-part1; i++) &#123;</span><br><span class=\"line\">      arr[index + i] = temp[part1 + i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">      arr[i] = sc.nextInt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    mergeSort(arr);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">      System.out.println(arr[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/10799] 쇠막대기","_content":"\n> Baekjoon Online Judge - [10799](https://www.acmicpc.net/problem/10799)\n\n## Review\n\n- 저번에 풀었던 괄호 [9012](https://www.acmicpc.net/problem/9012) 문제를 응용해서 풀면 쉽게 풀린다.\n- 포인트는 라인 23~27이다. '))' 이렇게 중첩이 된 경우, 쇠파이프가 끊긴 거니 1을 더해주면 된다.\n\n## Code (JAVA)\n\n```java\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s;\n\t\ts = sc.next();\n\n\t\tStack stack = new Stack();\n\n\t\tint cnt = 0;\n\t\tint res = 0;\n\n\t\tfor(int j = 0; j < s.length(); j++) {\n\t\t\tif(s.charAt(j)=='(') {\n\t\t\t\tstack.push(1);\n\t\t\t\tcnt++;\n\t\t\t} else if(s.charAt(j)==')') {\n\t\t\t\tif(stack.size != 0) {\n\t\t\t\t\tstack.pop();\n\t\t\t\t\tcnt--;\n\t\t\t\t\tif(s.charAt(j-1)=='(') {\n\t\t\t\t\t\tres += cnt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(res);\n\t\tsc.close();\n\t}\n\n\tstatic class Stack {\n\t\tprivate int size = 0;\n\t\tprivate SNode top = null;\n\n\t\tprivate class SNode {\n\t\t\tint data;\n\t\t    private SNode next;\n\t\t}\n\n\t\tpublic void push(int x) {\n\t\t\tSNode node = new SNode();\n\t\t\tnode.data = x;\n\t\t\tnode.next = top;\n\t\t\ttop = node;\n\t\t\tsize++;\n\t\t}\n\n\t\tpublic void pop() {\n\t\t\ttop = top.next;\n\t\t\tsize--;\n\t\t}\n\t}\n}\n```\n","source":"_posts/2018-09-13-bj-10799.md","raw":"---\ntitle: \"[백준/10799] 쇠막대기\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [10799](https://www.acmicpc.net/problem/10799)\n\n## Review\n\n- 저번에 풀었던 괄호 [9012](https://www.acmicpc.net/problem/9012) 문제를 응용해서 풀면 쉽게 풀린다.\n- 포인트는 라인 23~27이다. '))' 이렇게 중첩이 된 경우, 쇠파이프가 끊긴 거니 1을 더해주면 된다.\n\n## Code (JAVA)\n\n```java\nimport java.util.*;\n\npublic class Main {\n\tpublic static void main(String args[]){\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s;\n\t\ts = sc.next();\n\n\t\tStack stack = new Stack();\n\n\t\tint cnt = 0;\n\t\tint res = 0;\n\n\t\tfor(int j = 0; j < s.length(); j++) {\n\t\t\tif(s.charAt(j)=='(') {\n\t\t\t\tstack.push(1);\n\t\t\t\tcnt++;\n\t\t\t} else if(s.charAt(j)==')') {\n\t\t\t\tif(stack.size != 0) {\n\t\t\t\t\tstack.pop();\n\t\t\t\t\tcnt--;\n\t\t\t\t\tif(s.charAt(j-1)=='(') {\n\t\t\t\t\t\tres += cnt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(res);\n\t\tsc.close();\n\t}\n\n\tstatic class Stack {\n\t\tprivate int size = 0;\n\t\tprivate SNode top = null;\n\n\t\tprivate class SNode {\n\t\t\tint data;\n\t\t    private SNode next;\n\t\t}\n\n\t\tpublic void push(int x) {\n\t\t\tSNode node = new SNode();\n\t\t\tnode.data = x;\n\t\t\tnode.next = top;\n\t\t\ttop = node;\n\t\t\tsize++;\n\t\t}\n\n\t\tpublic void pop() {\n\t\t\ttop = top.next;\n\t\t\tsize--;\n\t\t}\n\t}\n}\n```\n","slug":"bj-10799","published":1,"date":"2018-09-12T15:00:00.000Z","updated":"2020-05-05T08:00:03.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71affz0007uv597e868onq","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDc5OQ==\" title=\"https://www.acmicpc.net/problem/10799\">10799<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>저번에 풀었던 괄호 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS85MDEy\" title=\"https://www.acmicpc.net/problem/9012\">9012<i class=\"fa fa-external-link\"></i></span> 문제를 응용해서 풀면 쉽게 풀린다.</li>\n<li>포인트는 라인 23~27이다. ‘))’ 이렇게 중첩이 된 경우, 쇠파이프가 끊긴 거니 1을 더해주면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\tString s;</span><br><span class=\"line\">\t\ts = sc.next();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tStack stack = <span class=\"keyword\">new</span> Stack();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; s.length(); j++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(s.charAt(j)==<span class=\"string\">'('</span>) &#123;</span><br><span class=\"line\">\t\t\t\tstack.push(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\tcnt++;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.charAt(j)==<span class=\"string\">')'</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(stack.size != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tstack.pop();</span><br><span class=\"line\">\t\t\t\t\tcnt--;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(s.charAt(j-<span class=\"number\">1</span>)==<span class=\"string\">'('</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tres += cnt;</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\tres++;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(res);</span><br><span class=\"line\">\t\tsc.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stack</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> size = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> SNode top = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SNode</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> data;</span><br><span class=\"line\">\t\t    <span class=\"keyword\">private</span> SNode next;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tSNode node = <span class=\"keyword\">new</span> SNode();</span><br><span class=\"line\">\t\t\tnode.data = x;</span><br><span class=\"line\">\t\t\tnode.next = top;</span><br><span class=\"line\">\t\t\ttop = node;</span><br><span class=\"line\">\t\t\tsize++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\ttop = top.next;</span><br><span class=\"line\">\t\t\tsize--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDc5OQ==\" title=\"https://www.acmicpc.net/problem/10799\">10799<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>저번에 풀었던 괄호 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS85MDEy\" title=\"https://www.acmicpc.net/problem/9012\">9012<i class=\"fa fa-external-link\"></i></span> 문제를 응용해서 풀면 쉽게 풀린다.</li>\n<li>포인트는 라인 23~27이다. ‘))’ 이렇게 중첩이 된 경우, 쇠파이프가 끊긴 거니 1을 더해주면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\tString s;</span><br><span class=\"line\">\t\ts = sc.next();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tStack stack = <span class=\"keyword\">new</span> Stack();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; s.length(); j++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(s.charAt(j)==<span class=\"string\">'('</span>) &#123;</span><br><span class=\"line\">\t\t\t\tstack.push(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\tcnt++;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.charAt(j)==<span class=\"string\">')'</span>) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(stack.size != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\tstack.pop();</span><br><span class=\"line\">\t\t\t\t\tcnt--;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(s.charAt(j-<span class=\"number\">1</span>)==<span class=\"string\">'('</span>) &#123;</span><br><span class=\"line\">\t\t\t\t\t\tres += cnt;</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\tres++;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(res);</span><br><span class=\"line\">\t\tsc.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Stack</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> size = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> SNode top = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">private</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SNode</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> data;</span><br><span class=\"line\">\t\t    <span class=\"keyword\">private</span> SNode next;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">\t\t\tSNode node = <span class=\"keyword\">new</span> SNode();</span><br><span class=\"line\">\t\t\tnode.data = x;</span><br><span class=\"line\">\t\t\tnode.next = top;</span><br><span class=\"line\">\t\t\ttop = node;</span><br><span class=\"line\">\t\t\tsize++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\ttop = top.next;</span><br><span class=\"line\">\t\t\tsize--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/4344] 평균은 넘겠지","_content":"\n> Baekjoon Online Judge - [4344](https://www.acmicpc.net/problem/4344)\n\n## Review\n\n- 일단 평균을 먼저 구하기\n- 배열 요소들이 평균보다 크면 count 증가\n- count / m \\* 100 값 출력\n- 푸는 데에 10분 입력 부분 고치는 데에 1시간 걸렸다\n- 자바로 형변환하는 게 아직 어색하다\n- 입력 받는 건 아직도 어렵다\n- 쉬운 문제인 줄 알았는데 여러모로 반성하게 되는 문제\n\n## Code (JAVA)\n\n```java\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    double arr[];\n    int count, m;\n    double res, sum, avg;\n\n    for(int i = 0; i < n; i++) {\n      m = sc.nextInt();\n      arr = new double[m];\n\n      sum = 0;\n      count = 0;\n      res = 0;\n\n      for(int j = 0; j < m; j++) {\n        arr[j] = sc.nextInt();\n        sum += arr[j];\n      }\n\n      avg = sum / m;\n\n      for(int k = 0; k < arr.length; k++) {\n        if(avg < arr[k]) {\n          count++;\n        }\n      }\n\n      res = (double) count / m * 100;\n      System.out.printf(\"%.3f\", res);\n      System.out.println(\"%\");\n    }\n\n  }\n\n}\n```\n","source":"_posts/2018-09-16-bj-4344.md","raw":"---\ntitle: \"[백준/4344] 평균은 넘겠지\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [4344](https://www.acmicpc.net/problem/4344)\n\n## Review\n\n- 일단 평균을 먼저 구하기\n- 배열 요소들이 평균보다 크면 count 증가\n- count / m \\* 100 값 출력\n- 푸는 데에 10분 입력 부분 고치는 데에 1시간 걸렸다\n- 자바로 형변환하는 게 아직 어색하다\n- 입력 받는 건 아직도 어렵다\n- 쉬운 문제인 줄 알았는데 여러모로 반성하게 되는 문제\n\n## Code (JAVA)\n\n```java\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    double arr[];\n    int count, m;\n    double res, sum, avg;\n\n    for(int i = 0; i < n; i++) {\n      m = sc.nextInt();\n      arr = new double[m];\n\n      sum = 0;\n      count = 0;\n      res = 0;\n\n      for(int j = 0; j < m; j++) {\n        arr[j] = sc.nextInt();\n        sum += arr[j];\n      }\n\n      avg = sum / m;\n\n      for(int k = 0; k < arr.length; k++) {\n        if(avg < arr[k]) {\n          count++;\n        }\n      }\n\n      res = (double) count / m * 100;\n      System.out.printf(\"%.3f\", res);\n      System.out.println(\"%\");\n    }\n\n  }\n\n}\n```\n","slug":"bj-4344","published":1,"date":"2018-09-15T15:00:00.000Z","updated":"2020-05-05T08:00:03.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afg1000auv591dw786cs","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS80MzQ0\" title=\"https://www.acmicpc.net/problem/4344\">4344<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>일단 평균을 먼저 구하기</li>\n<li>배열 요소들이 평균보다 크면 count 증가</li>\n<li>count / m * 100 값 출력</li>\n<li>푸는 데에 10분 입력 부분 고치는 데에 1시간 걸렸다</li>\n<li>자바로 형변환하는 게 아직 어색하다</li>\n<li>입력 받는 건 아직도 어렵다</li>\n<li>쉬운 문제인 줄 알았는데 여러모로 반성하게 되는 문제</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">double</span> arr[];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> count, m;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> res, sum, avg;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">      m = sc.nextInt();</span><br><span class=\"line\">      arr = <span class=\"keyword\">new</span> <span class=\"keyword\">double</span>[m];</span><br><span class=\"line\"></span><br><span class=\"line\">      sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">      count = <span class=\"number\">0</span>;</span><br><span class=\"line\">      res = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">        arr[j] = sc.nextInt();</span><br><span class=\"line\">        sum += arr[j];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      avg = sum / m;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; arr.length; k++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(avg &lt; arr[k]) &#123;</span><br><span class=\"line\">          count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      res = (<span class=\"keyword\">double</span>) count / m * <span class=\"number\">100</span>;</span><br><span class=\"line\">      System.out.printf(<span class=\"string\">\"%.3f\"</span>, res);</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"%\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS80MzQ0\" title=\"https://www.acmicpc.net/problem/4344\">4344<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>일단 평균을 먼저 구하기</li>\n<li>배열 요소들이 평균보다 크면 count 증가</li>\n<li>count / m * 100 값 출력</li>\n<li>푸는 데에 10분 입력 부분 고치는 데에 1시간 걸렸다</li>\n<li>자바로 형변환하는 게 아직 어색하다</li>\n<li>입력 받는 건 아직도 어렵다</li>\n<li>쉬운 문제인 줄 알았는데 여러모로 반성하게 되는 문제</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">double</span> arr[];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> count, m;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> res, sum, avg;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">      m = sc.nextInt();</span><br><span class=\"line\">      arr = <span class=\"keyword\">new</span> <span class=\"keyword\">double</span>[m];</span><br><span class=\"line\"></span><br><span class=\"line\">      sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">      count = <span class=\"number\">0</span>;</span><br><span class=\"line\">      res = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">        arr[j] = sc.nextInt();</span><br><span class=\"line\">        sum += arr[j];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      avg = sum / m;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; arr.length; k++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(avg &lt; arr[k]) &#123;</span><br><span class=\"line\">          count++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      res = (<span class=\"keyword\">double</span>) count / m * <span class=\"number\">100</span>;</span><br><span class=\"line\">      System.out.printf(<span class=\"string\">\"%.3f\"</span>, res);</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"%\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/1924] 2007년","_content":"\n> Baekjoon Online Judge - [1924](https://www.acmicpc.net/problem/1924)\n\n## Review\n\n- 이전 년도의 날수를 전부 더한다.\n- 해당 날짜까지의 일수를 추가한 다음에 7로 나눈 나머지를 구하면 되는 문제.\n\n## Code (JAVA)\n\n```java\nimport java.util.Scanner;\n\npublic class Main {\n\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n\n    int m = sc.nextInt();\n    int d = sc.nextInt();\n\n    String[] day = {\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"};\n    int[] month = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n    int preYear = 2006;\n    int res;\n\n    // 이전 년도의 날수 구하기\n    int totalDays = (preYear)*365 + (preYear/4 - preYear/100 + preYear/400);\n\n    // 이전 월의 날짜 전부 더하기\n    for(int i = 0; i < m-1; i++) {\n      totalDays += month[i];\n    }\n\n    totalDays += d;\n    res = totalDays % 7;\n\n    System.out.println(day[res]);\n    sc.close();\n\n  }\n\n}\n```\n","source":"_posts/2018-09-17-bj-1924.md","raw":"---\ntitle: \"[백준/1924] 2007년\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [1924](https://www.acmicpc.net/problem/1924)\n\n## Review\n\n- 이전 년도의 날수를 전부 더한다.\n- 해당 날짜까지의 일수를 추가한 다음에 7로 나눈 나머지를 구하면 되는 문제.\n\n## Code (JAVA)\n\n```java\nimport java.util.Scanner;\n\npublic class Main {\n\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n\n    int m = sc.nextInt();\n    int d = sc.nextInt();\n\n    String[] day = {\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"};\n    int[] month = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n    int preYear = 2006;\n    int res;\n\n    // 이전 년도의 날수 구하기\n    int totalDays = (preYear)*365 + (preYear/4 - preYear/100 + preYear/400);\n\n    // 이전 월의 날짜 전부 더하기\n    for(int i = 0; i < m-1; i++) {\n      totalDays += month[i];\n    }\n\n    totalDays += d;\n    res = totalDays % 7;\n\n    System.out.println(day[res]);\n    sc.close();\n\n  }\n\n}\n```\n","slug":"bj-1924","published":1,"date":"2018-09-16T15:00:00.000Z","updated":"2020-05-05T08:00:03.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afg2000buv596bxrbp8k","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xOTI0\" title=\"https://www.acmicpc.net/problem/1924\">1924<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>이전 년도의 날수를 전부 더한다.</li>\n<li>해당 날짜까지의 일수를 추가한 다음에 7로 나눈 나머지를 구하면 되는 문제.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> m = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> d = sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">    String[] day = &#123;<span class=\"string\">\"SUN\"</span>, <span class=\"string\">\"MON\"</span>, <span class=\"string\">\"TUE\"</span>, <span class=\"string\">\"WED\"</span>, <span class=\"string\">\"THU\"</span>, <span class=\"string\">\"FRI\"</span>, <span class=\"string\">\"SAT\"</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] month = &#123;<span class=\"number\">31</span>, <span class=\"number\">28</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> preYear = <span class=\"number\">2006</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 이전 년도의 날수 구하기</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> totalDays = (preYear)*<span class=\"number\">365</span> + (preYear/<span class=\"number\">4</span> - preYear/<span class=\"number\">100</span> + preYear/<span class=\"number\">400</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 이전 월의 날짜 전부 더하기</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">      totalDays += month[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    totalDays += d;</span><br><span class=\"line\">    res = totalDays % <span class=\"number\">7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(day[res]);</span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xOTI0\" title=\"https://www.acmicpc.net/problem/1924\">1924<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>이전 년도의 날수를 전부 더한다.</li>\n<li>해당 날짜까지의 일수를 추가한 다음에 7로 나눈 나머지를 구하면 되는 문제.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> m = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> d = sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">    String[] day = &#123;<span class=\"string\">\"SUN\"</span>, <span class=\"string\">\"MON\"</span>, <span class=\"string\">\"TUE\"</span>, <span class=\"string\">\"WED\"</span>, <span class=\"string\">\"THU\"</span>, <span class=\"string\">\"FRI\"</span>, <span class=\"string\">\"SAT\"</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] month = &#123;<span class=\"number\">31</span>, <span class=\"number\">28</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>, <span class=\"number\">30</span>, <span class=\"number\">31</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> preYear = <span class=\"number\">2006</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 이전 년도의 날수 구하기</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> totalDays = (preYear)*<span class=\"number\">365</span> + (preYear/<span class=\"number\">4</span> - preYear/<span class=\"number\">100</span> + preYear/<span class=\"number\">400</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 이전 월의 날짜 전부 더하기</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">      totalDays += month[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    totalDays += d;</span><br><span class=\"line\">    res = totalDays % <span class=\"number\">7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(day[res]);</span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[JAVA] 프로그래밍 대회에서 사용하는 자바 - 1","_content":"> [백준 강의](https://code.plus/course/3) 정리 - 입/출력\n\n# 목차\n1. [입력받기](#link-1)\n  * [Scanner](#link-1-1)\n  * [BufferedReader](#link-1-2)\n  * [StringTokenizer](#link-1-3)\n2. [출력하기](#link-2)\n  * [print, println, printf](#link-2-1)\n  * [StringBuilder](#link-2-2)\n\n## <a id=\"link-1\"></a>1. 입력받기\n### <a id=\"link-1-1\"></a>1.1 Scanner\n* 입력을 편하게 받을 수 있다.\n* \"next자료형\"을 이용해서 입력을 받을 수 있다.\n* \"hasNext자료형\"을 이용해서 입력받을 수 있는 자료형이 있는지 구할 수 있다.\n\n```java\nimport java.util.Scanner;\n\npublic class Main {\n  \n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    int sum = 0;\n    while(sc.hasNextInt()) {\n      sum += sc.nextInt();\n    }\n    System.out.println(sum);\n    \n  }\n  \n}\n```\n\n### <a id=\"link-1-2\"></a>1.2 BufferedReader\n* Scanner는 느린 경우가 많아서, 입력이 많은 경우에는 BufferedReader를 사용하는 것이 좋다.\n* read와 readLine만 있기 때문에 정수는 파싱을 해야 한다.\n\n\n```java\nimport java.io.*;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n   BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n   String[] line = bf.readLine().split(\" \");\n   \n   String a = line[0] + line[1];\n   String b = line[2] + line[3];\n   // 문제 제한 때문에 결과값이 int의 범위를 넘어가게 돼서 long으로 형변환\n   long ans = Long.valueOf(a) + Long.valueOf(b);\n   System.out.println(ans);\n  }\n  \n}\n```\n\n### <a id=\"link-1-3\"></a>1.3 StringTokenizer\n* 문자열을 토큰으로 잘라야 할 때 사용하면 편하다.\n* 어떤 문자열이 있을 때 공백이나 콤마 등으로 잘라야 할 때 좋다.\n\n```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n   BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n   String line = bf.readLine();\n   \n   // 첫번째 인자는 무엇을 자를 것인지 결정\n   // 두번째 인자는 무엇을 기준으로 나눌 것인지 결정\n   StringTokenizer st = new StringTokenizer(line, \",\");\n   \n   int sum = 0;\n   \n   // 토큰이 있는지 없는지를 확인\n   while (st.hasMoreTokens()) {\n     // 정수 형태로 형변환\n     sum += Integer.valueOf(st.nextToken());\n   }\n   System.out.println(sum);\n  }\n  \n}\n```\n## <a id=\"link-2\"></a>2. 출력하기\n### <a id=\"link-2-1\"></a>2.1 print, println, printf\n* print\n* println\n* printf\n\n```java\npublic class Main {\n  \n  public static void main(String args[]){\n    // 줄바꿈하지 않고 출력\n    System.out.print(\"Hello world\");\n\n    // 줄바꿈해서 출력\n    System.out.println(\"Hello world\");\n\n    // 출력 서식 + 출력할 내용\n    System.out.printf(\"%.3f\", 1.234567f);\n    \n  }\n  \n}\n```\n### <a id=\"link-2-2\"></a>2.2 StringBuilder\n* 출력해야 할 것이 많은 경우에는 StringBuilder를 이용해 문자열을 만들고 출력하는 것이 좋다.\n\n```java\npublic class Main {\n  \n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    \n    int n = sc.nextInt();\n    StringBuilder sb = new StringBuilder();\n    \n    for(int i=1; i<=n; i++) {\n      sb.append(i + \"\\n\");\n    }\n    System.out.println(sb);\n  }\n  \n}\n```","source":"_posts/2018-09-17-java-plang-1.md","raw":"---\ntitle: \"[JAVA] 프로그래밍 대회에서 사용하는 자바 - 1\"\ntags: [java, study]\ncategories: JAVA\n---\n> [백준 강의](https://code.plus/course/3) 정리 - 입/출력\n\n# 목차\n1. [입력받기](#link-1)\n  * [Scanner](#link-1-1)\n  * [BufferedReader](#link-1-2)\n  * [StringTokenizer](#link-1-3)\n2. [출력하기](#link-2)\n  * [print, println, printf](#link-2-1)\n  * [StringBuilder](#link-2-2)\n\n## <a id=\"link-1\"></a>1. 입력받기\n### <a id=\"link-1-1\"></a>1.1 Scanner\n* 입력을 편하게 받을 수 있다.\n* \"next자료형\"을 이용해서 입력을 받을 수 있다.\n* \"hasNext자료형\"을 이용해서 입력받을 수 있는 자료형이 있는지 구할 수 있다.\n\n```java\nimport java.util.Scanner;\n\npublic class Main {\n  \n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    int sum = 0;\n    while(sc.hasNextInt()) {\n      sum += sc.nextInt();\n    }\n    System.out.println(sum);\n    \n  }\n  \n}\n```\n\n### <a id=\"link-1-2\"></a>1.2 BufferedReader\n* Scanner는 느린 경우가 많아서, 입력이 많은 경우에는 BufferedReader를 사용하는 것이 좋다.\n* read와 readLine만 있기 때문에 정수는 파싱을 해야 한다.\n\n\n```java\nimport java.io.*;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n   BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n   String[] line = bf.readLine().split(\" \");\n   \n   String a = line[0] + line[1];\n   String b = line[2] + line[3];\n   // 문제 제한 때문에 결과값이 int의 범위를 넘어가게 돼서 long으로 형변환\n   long ans = Long.valueOf(a) + Long.valueOf(b);\n   System.out.println(ans);\n  }\n  \n}\n```\n\n### <a id=\"link-1-3\"></a>1.3 StringTokenizer\n* 문자열을 토큰으로 잘라야 할 때 사용하면 편하다.\n* 어떤 문자열이 있을 때 공백이나 콤마 등으로 잘라야 할 때 좋다.\n\n```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n   BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n   String line = bf.readLine();\n   \n   // 첫번째 인자는 무엇을 자를 것인지 결정\n   // 두번째 인자는 무엇을 기준으로 나눌 것인지 결정\n   StringTokenizer st = new StringTokenizer(line, \",\");\n   \n   int sum = 0;\n   \n   // 토큰이 있는지 없는지를 확인\n   while (st.hasMoreTokens()) {\n     // 정수 형태로 형변환\n     sum += Integer.valueOf(st.nextToken());\n   }\n   System.out.println(sum);\n  }\n  \n}\n```\n## <a id=\"link-2\"></a>2. 출력하기\n### <a id=\"link-2-1\"></a>2.1 print, println, printf\n* print\n* println\n* printf\n\n```java\npublic class Main {\n  \n  public static void main(String args[]){\n    // 줄바꿈하지 않고 출력\n    System.out.print(\"Hello world\");\n\n    // 줄바꿈해서 출력\n    System.out.println(\"Hello world\");\n\n    // 출력 서식 + 출력할 내용\n    System.out.printf(\"%.3f\", 1.234567f);\n    \n  }\n  \n}\n```\n### <a id=\"link-2-2\"></a>2.2 StringBuilder\n* 출력해야 할 것이 많은 경우에는 StringBuilder를 이용해 문자열을 만들고 출력하는 것이 좋다.\n\n```java\npublic class Main {\n  \n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    \n    int n = sc.nextInt();\n    StringBuilder sb = new StringBuilder();\n    \n    for(int i=1; i<=n; i++) {\n      sb.append(i + \"\\n\");\n    }\n    System.out.println(sb);\n  }\n  \n}\n```","slug":"java-plang-1","published":1,"date":"2018-09-16T15:00:00.000Z","updated":"2020-05-05T08:00:03.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afg3000guv5962700xun","content":"<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnBsdXMvY291cnNlLzM=\" title=\"https://code.plus/course/3\">백준 강의<i class=\"fa fa-external-link\"></i></span> 정리 - 입/출력</p>\n</blockquote>\n<h1 id=\"목차\"><a href=\"#목차\" class=\"headerlink\" title=\"목차\"></a>목차</h1><ol>\n<li><a href=\"#link-1\">입력받기</a><ul>\n<li><a href=\"#link-1-1\">Scanner</a></li>\n<li><a href=\"#link-1-2\">BufferedReader</a></li>\n<li><a href=\"#link-1-3\">StringTokenizer</a></li>\n</ul>\n</li>\n<li><a href=\"#link-2\">출력하기</a><ul>\n<li><a href=\"#link-2-1\">print, println, printf</a></li>\n<li><a href=\"#link-2-2\">StringBuilder</a></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"1-입력받기\"><a href=\"#1-입력받기\" class=\"headerlink\" title=\"1. 입력받기\"></a><a id=\"link-1\"></a>1. 입력받기</h2><h3 id=\"1-1-Scanner\"><a href=\"#1-1-Scanner\" class=\"headerlink\" title=\"1.1 Scanner\"></a><a id=\"link-1-1\"></a>1.1 Scanner</h3><ul>\n<li>입력을 편하게 받을 수 있다.</li>\n<li>“next자료형”을 이용해서 입력을 받을 수 있다.</li>\n<li>“hasNext자료형”을 이용해서 입력받을 수 있는 자료형이 있는지 구할 수 있다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(sc.hasNextInt()) &#123;</span><br><span class=\"line\">      sum += sc.nextInt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(sum);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-BufferedReader\"><a href=\"#1-2-BufferedReader\" class=\"headerlink\" title=\"1.2 BufferedReader\"></a><a id=\"link-1-2\"></a>1.2 BufferedReader</h3><ul>\n<li>Scanner는 느린 경우가 많아서, 입력이 많은 경우에는 BufferedReader를 사용하는 것이 좋다.</li>\n<li>read와 readLine만 있기 때문에 정수는 파싱을 해야 한다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">   BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">   String[] line = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">   </span><br><span class=\"line\">   String a = line[<span class=\"number\">0</span>] + line[<span class=\"number\">1</span>];</span><br><span class=\"line\">   String b = line[<span class=\"number\">2</span>] + line[<span class=\"number\">3</span>];</span><br><span class=\"line\">   <span class=\"comment\">// 문제 제한 때문에 결과값이 int의 범위를 넘어가게 돼서 long으로 형변환</span></span><br><span class=\"line\">   <span class=\"keyword\">long</span> ans = Long.valueOf(a) + Long.valueOf(b);</span><br><span class=\"line\">   System.out.println(ans);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3-StringTokenizer\"><a href=\"#1-3-StringTokenizer\" class=\"headerlink\" title=\"1.3 StringTokenizer\"></a><a id=\"link-1-3\"></a>1.3 StringTokenizer</h3><ul>\n<li>문자열을 토큰으로 잘라야 할 때 사용하면 편하다.</li>\n<li>어떤 문자열이 있을 때 공백이나 콤마 등으로 잘라야 할 때 좋다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">   BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">   String line = bf.readLine();</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">// 첫번째 인자는 무엇을 자를 것인지 결정</span></span><br><span class=\"line\">   <span class=\"comment\">// 두번째 인자는 무엇을 기준으로 나눌 것인지 결정</span></span><br><span class=\"line\">   StringTokenizer st = <span class=\"keyword\">new</span> StringTokenizer(line, <span class=\"string\">\",\"</span>);</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">// 토큰이 있는지 없는지를 확인</span></span><br><span class=\"line\">   <span class=\"keyword\">while</span> (st.hasMoreTokens()) &#123;</span><br><span class=\"line\">     <span class=\"comment\">// 정수 형태로 형변환</span></span><br><span class=\"line\">     sum += Integer.valueOf(st.nextToken());</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   System.out.println(sum);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-출력하기\"><a href=\"#2-출력하기\" class=\"headerlink\" title=\"2. 출력하기\"></a><a id=\"link-2\"></a>2. 출력하기</h2><h3 id=\"2-1-print-println-printf\"><a href=\"#2-1-print-println-printf\" class=\"headerlink\" title=\"2.1 print, println, printf\"></a><a id=\"link-2-1\"></a>2.1 print, println, printf</h3><ul>\n<li>print</li>\n<li>println</li>\n<li>printf</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 줄바꿈하지 않고 출력</span></span><br><span class=\"line\">    System.out.print(<span class=\"string\">\"Hello world\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 줄바꿈해서 출력</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"Hello world\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 출력 서식 + 출력할 내용</span></span><br><span class=\"line\">    System.out.printf(<span class=\"string\">\"%.3f\"</span>, <span class=\"number\">1.234567f</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-StringBuilder\"><a href=\"#2-2-StringBuilder\" class=\"headerlink\" title=\"2.2 StringBuilder\"></a><a id=\"link-2-2\"></a>2.2 StringBuilder</h3><ul>\n<li>출력해야 할 것이 많은 경우에는 StringBuilder를 이용해 문자열을 만들고 출력하는 것이 좋다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++) &#123;</span><br><span class=\"line\">      sb.append(i + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(sb);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnBsdXMvY291cnNlLzM=\" title=\"https://code.plus/course/3\">백준 강의<i class=\"fa fa-external-link\"></i></span> 정리 - 입/출력</p>\n</blockquote>\n<h1 id=\"목차\"><a href=\"#목차\" class=\"headerlink\" title=\"목차\"></a>목차</h1><ol>\n<li><a href=\"#link-1\">입력받기</a><ul>\n<li><a href=\"#link-1-1\">Scanner</a></li>\n<li><a href=\"#link-1-2\">BufferedReader</a></li>\n<li><a href=\"#link-1-3\">StringTokenizer</a></li>\n</ul>\n</li>\n<li><a href=\"#link-2\">출력하기</a><ul>\n<li><a href=\"#link-2-1\">print, println, printf</a></li>\n<li><a href=\"#link-2-2\">StringBuilder</a></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"1-입력받기\"><a href=\"#1-입력받기\" class=\"headerlink\" title=\"1. 입력받기\"></a><a id=\"link-1\"></a>1. 입력받기</h2><h3 id=\"1-1-Scanner\"><a href=\"#1-1-Scanner\" class=\"headerlink\" title=\"1.1 Scanner\"></a><a id=\"link-1-1\"></a>1.1 Scanner</h3><ul>\n<li>입력을 편하게 받을 수 있다.</li>\n<li>“next자료형”을 이용해서 입력을 받을 수 있다.</li>\n<li>“hasNext자료형”을 이용해서 입력받을 수 있는 자료형이 있는지 구할 수 있다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(sc.hasNextInt()) &#123;</span><br><span class=\"line\">      sum += sc.nextInt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(sum);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-BufferedReader\"><a href=\"#1-2-BufferedReader\" class=\"headerlink\" title=\"1.2 BufferedReader\"></a><a id=\"link-1-2\"></a>1.2 BufferedReader</h3><ul>\n<li>Scanner는 느린 경우가 많아서, 입력이 많은 경우에는 BufferedReader를 사용하는 것이 좋다.</li>\n<li>read와 readLine만 있기 때문에 정수는 파싱을 해야 한다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">   BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">   String[] line = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">   </span><br><span class=\"line\">   String a = line[<span class=\"number\">0</span>] + line[<span class=\"number\">1</span>];</span><br><span class=\"line\">   String b = line[<span class=\"number\">2</span>] + line[<span class=\"number\">3</span>];</span><br><span class=\"line\">   <span class=\"comment\">// 문제 제한 때문에 결과값이 int의 범위를 넘어가게 돼서 long으로 형변환</span></span><br><span class=\"line\">   <span class=\"keyword\">long</span> ans = Long.valueOf(a) + Long.valueOf(b);</span><br><span class=\"line\">   System.out.println(ans);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-3-StringTokenizer\"><a href=\"#1-3-StringTokenizer\" class=\"headerlink\" title=\"1.3 StringTokenizer\"></a><a id=\"link-1-3\"></a>1.3 StringTokenizer</h3><ul>\n<li>문자열을 토큰으로 잘라야 할 때 사용하면 편하다.</li>\n<li>어떤 문자열이 있을 때 공백이나 콤마 등으로 잘라야 할 때 좋다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">   BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">   String line = bf.readLine();</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">// 첫번째 인자는 무엇을 자를 것인지 결정</span></span><br><span class=\"line\">   <span class=\"comment\">// 두번째 인자는 무엇을 기준으로 나눌 것인지 결정</span></span><br><span class=\"line\">   StringTokenizer st = <span class=\"keyword\">new</span> StringTokenizer(line, <span class=\"string\">\",\"</span>);</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">// 토큰이 있는지 없는지를 확인</span></span><br><span class=\"line\">   <span class=\"keyword\">while</span> (st.hasMoreTokens()) &#123;</span><br><span class=\"line\">     <span class=\"comment\">// 정수 형태로 형변환</span></span><br><span class=\"line\">     sum += Integer.valueOf(st.nextToken());</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   System.out.println(sum);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-출력하기\"><a href=\"#2-출력하기\" class=\"headerlink\" title=\"2. 출력하기\"></a><a id=\"link-2\"></a>2. 출력하기</h2><h3 id=\"2-1-print-println-printf\"><a href=\"#2-1-print-println-printf\" class=\"headerlink\" title=\"2.1 print, println, printf\"></a><a id=\"link-2-1\"></a>2.1 print, println, printf</h3><ul>\n<li>print</li>\n<li>println</li>\n<li>printf</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 줄바꿈하지 않고 출력</span></span><br><span class=\"line\">    System.out.print(<span class=\"string\">\"Hello world\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 줄바꿈해서 출력</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"Hello world\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 출력 서식 + 출력할 내용</span></span><br><span class=\"line\">    System.out.printf(<span class=\"string\">\"%.3f\"</span>, <span class=\"number\">1.234567f</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2-StringBuilder\"><a href=\"#2-2-StringBuilder\" class=\"headerlink\" title=\"2.2 StringBuilder\"></a><a id=\"link-2-2\"></a>2.2 StringBuilder</h3><ul>\n<li>출력해야 할 것이 많은 경우에는 StringBuilder를 이용해 문자열을 만들고 출력하는 것이 좋다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++) &#123;</span><br><span class=\"line\">      sb.append(i + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(sb);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[JAVA] 프로그래밍 대회에서 사용하는 자바 - 2","_content":"> [백준 강의](https://code.plus/course/3) 정리 - Collections\n\n* Collections의 Stack, Queue 등을 사용하면 구현 없이 사용할 수 있다.\n\n# 목차\n1. [ArrayList](#link-1)\n  * [ArrayList의 주요 메소드](#link-1-1)\n\t* [예제](#link-1-2)\n\n2. [LinkedList](#link-2)\n3. [Stack](#link-3)\n\t* [Stack의 주요 메소드](#link-3-1)\n4. [Set](#link-4)\n\t* [Set의 주요 메소드](#link-4-1)\n\t* [HashSet](#link-4-2)\n\t* [TreeSet](#link-4-3)\n\t* [LinkedHashSet](#link-4-4)\n5. [Map](#link-5)\n\t* [Map의 주요 메소드](#link-5-1)\n6. [Queue](#link-6)\n\t* [Queue의 주요 메소드](#link-6-1)\n\t* [PriorityQueue](#link-6-2)\n\n## 1. <a id=\"link-1\"></a>ArrayList\n* 배열이다.\n* Array와 같은 역할을 하지만, 길이가 정해져 있지 않고 변한다.\n* C++에서는 vector에 해당된다.\n* `java.util`에 들어있다.\n* 그래프 문제의 인접 리스트를 만들 때 가장 많이 사용한다.\n\n```java\nimport java.util.*;\n\npublic class Main {\n  public static void main(String args[]) {\n    ArrayList<Integer> a = new ArrayList<Integer>();\n    // capacity가 40, 자료형은 정수\n    ArrayList<Integer> b = new ArrayList<Integer>(40);\n  }\n}\n```\n\n### <a id=\"link-1-1\"></a>1.1 ArrayList의 주요 메소드\n1. **boolean add(E e)**\n  - 새로운 element e를 추가\n2. **void add(int index, E element)**\n  - O(n)\n  - index번째에 새로운 element e를 추가\n3. **void clear()**\n  - ArrayList를 완전히 비움\n4. **boolean Contains(Object o)**\n  - O(n)\n  - Object o가 들어있는지 아닌지를 판단\n5. **E get(int index)**\n  - index번째를 데려옴\n  - arr[index]는 arr.get<index>와 같은 표현이다.\n6. **boolean isEmpty()**\n  - ArrayList가 비어있는지 아닌지 판단\n7. **E remove(int index)**\n  - O(n)\n  - index번째 삭제 \n8. **E set(int index, E element)**\n  - index번째를 새로운 element로 바꿈\n  - arr[index] = element와 같다\n9. **Object[] toArray()**\n  - Array로 바꾸기\n\n### 1.2 <a id=\"link-1-2\"></a>예제\n* ArrayList에 element 넣어서 출력하기\n```java\nimport java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    ArrayList<Integer> a = new ArrayList<Integer>();\n    for (int i=0; i<n; i++) {\n      int temp = sc.nextInt();\n      a.add(temp);\n    }\n    // 정렬하기\n    Collections.sort(a);\n    for (int x : a) {\n      System.out.println(x);\n    }\n    // 이렇게도 출력 가능\n    // for (int i=0; i<n; i++) {\n    //   System.out.println(a.get(i));\n    // }\n  }\n}\n```\n\n* 그래프 문제의 인접 리스트 만들기\n\n```java\nArrayList<Integer>[] a = (ArrayList<Integer>[]) new ArrayList[n+1];\n\nfor (int i=1; i<=n; i++) {\n    a[i] = new ArrayList<Integer>();\n}\nfor (int i=0; i<m; i++) {\n    int u = sc.nextInt();\n    int v = sc.nextInt();\n    // 인접한 간선 만들기\n    a[u].add(v);\n    a[v].add(u);\n}\n```\n\n## 2. <a id=\"link-2\"></a>LinkedList\n* 이중 연결 리스트라고 한다.\n* `java.util`에 들어있다.\n* 대회 문제나 알고리즘 문제에서는 사용하는 경우가 드물다.\n\n## <a id=\"link-3\"></a>3. Stack\n* `java.util`에 들어있다.\n* 가장 많이 사용하는 메소드 중 하나이다.\n* 한쪽 끝에서만 자료를 넣고 뺄 수 있는 구조이다.\n* 마지막으로 넣은 것이 가장 먼저 나오기 때문에 Last In First Out(LIFO)라고도 한다.\n\n### <a id=\"link-3-1\"></a>3.1 Stack의 주요 메소드\n1. **E push(E item)**\n  * 스택에 자료를 넣는 연산\n2. **E pop()**\n  * 스택에서 자료를 빼는 연산\n  * return값이 있다 (C++에서는 없음)\n3. **E peek()**\n  * 스택의 가장 위에 있는 자료를 보는 연산\n4. **bool empty()**\n  * 스택이 비어있는지 아닌지를 알아보는 연산\n5. **int size()**\n  * 스택에 저장되어있는 자료의 개수를 알아보는 연산\n\n## <a id=\"link-4\"></a>4. Set\n* 인터페이스이다.\n* 중복된 원소를 포함하지 않는다.\n* Set을 구현한 것으로 HashSet, TreeSet, LinkedHashSet이 있다.\n* 일반적인 경우에는 HashSet을 사용하고, 순서가 중요한 경우에는 TreeSet, 입력으로 넣은 순서가 중요한 경우에는 LinkedHashSet을 사용한다.\n\n### <a id=\"link-4-1\"></a>4.1 Set의 주요 메소드\n1. **boolean add(E e)**\n  * 새로운 element e를 추가\n2. **void clear()**\n  * Set을 완전히 비움\n3. **boolean contains(Object o)**\n  * Object o가 들어있는지 아닌지를 판단\n4. **boolean isEmpty()**\n  * Set이 비어있는지 아닌지 판단\n5. **boolean remove(Object o)**\n  * Object o 삭제 \n6. **int size()**\n  * Set 크기 알아보기\n7. **Object[] toArray()**\n  * Array로 바꾸기\n\n### <a id=\"link-4-2\"></a>4.2 HastSet\n* 해시 테이블을 이용해서 구현되어 있다.\n* 삽입/삭제/제거 연산의 시간 복잡도가 O(1)이다.\n* 순서가 보장되지 않는다.\n\n```java\nimport java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    HashSet<Integer> d = new HashSet<Integer>();\n    for (int i=10; i>=1; i--) {\n      d.add(i); \n    }\n    for (int x : d) {\n      // 순서를 모른다.\n      System.out.print(x + \" \");\n    }\n  }\n}\n```\n\n### <a id=\"link-4-3\"></a>4.3 TreeSet\n* 이진 검색 트리(레드 블랙 트리)로 이루어져 있다.\n* 삽입/삭제/제거 연산의 시간 복잡도가 O(log N)이다.\n* 순서가 보장된다.\n\n```java\nimport java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    TreeSet<Integer> d = new TreeSet<Integer>();\n    for (int i=10; i>=1; i--) {\n      d.add(i); \n    }\n    for (int x : d) {\n      // 1 2 3 4 5 6 7 8 9 10\n      System.out.print(x + \" \");\n    }\n  }\n}\n```\n\n### <a id=\"link-4-4\"></a>4.4 LinkedHashSet\n* 해시테이블과 연결리스트를 이용해서 구현되어 있다.\n* 삽입/삭제/제거 연산의 시간 복잡도가 O(1)이다.\n* 추가한 순서가 보장된다.\n\n```java\nimport java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    LinkedHashSet<Integer> d = new LinkedHashSet<Integer>();\n    for (int i=10; i>=1; i--) {\n      d.add(i);\n    }\n    for (int x : d) {\n      // 10 9 8 7 6 5 4 3 2 1\n      System.out.print(x + \" \");\n    }\n  }\n}\n```\n\n## <a id=\"link-5\"></a>5. Map\n* 인터페이스이다.\n* 중복된 Key를 포함하지 않는다.\n* Key-Value 쌍을 이룬다. (사전과 비슷)\n* Map을 구현한 것으로 HashMap, TreeMap, LinkedHashMap이 있다.\n\n### <a id=\"link-5-1\"></a>5.1 Map의 주요 메소드\n1. void clear()\n  * Map을 완전히 비움\n2. boolean containsKey(Object key)\n  * key가 들어있는지 아닌지 확인\n3. boolean containsValue(Object value)\n  * 어떤 value를 가지고있는지 아닌지를 확인\n4. Set<Map.Entry<K,V>> entrySet()\n  * Key-Value 쌍을 이용한 Set을 만들어줌\n5. V get(Object key)\n  * Key를 넣으면 Key에 해당하는 Value 리턴\n6. boolean isEmpty()\n  * Map이 비어있는지 아닌지 판단\n7. Set<K> keySet()\n  * Key를 이용해서 만든 Set을 만들어줌\n8. V put(K key, V value)\n  * Key에 해당하는 Value를 넣음\n9. boolean remove(Object o)\n  * Object o 삭제 \n10. int size()\n  * Map의 크기 알아보기\n\n## <a id=\"link-6\"></a>6. Queue\n* 한쪽 끝에만 자료를 넣고 다른 한쪽 끝에서만 뺄 수 있는 자료구조.\n* 먼저 넣은 것이 가장 먼저 나오기 때문에 First In First Out(FIFO)라고도 한다.\n* 인터페이스이다.\n* 구현한 클래스로는 ArrayDeque, LinkedList, PriorityQueue가 있다.\n* 뒤에 무슨 데이터가 있는지 알아보는 메소드는 존재하지 않는다. 중요하지 않기 때문이다.\n\n### <a id=\"link-6-1\"></a>6.1 Queue의 주요 메소드\n1. **boolean offer(E e)**\n  * 큐에 자료를 넣는 연산(push)\n2. **E poll()**\n  * 큐에서 자료를 빼는 연산(pop)\n  * return값이 있다 (C++에서는 없음)\n3. **E peek()**\n  * 큐의 가장 앞에 있는 자료를 보는 연산\n4. **bool isEmpty()**\n  * 큐가 비어있는지 아닌지를 알아보는 연산\n5. **int size()**\n  * 큐에 저장되어있는 자료의 개수를 알아보는 연산\n\n### <a id=\"link-6-2\"></a>6.2 PriorityQueue\n* 우선 순위 큐라고 한다.\n* 큐에 들어있는 아이템들 중 우선순위가 높은 아이템부터 pop이 된다.\n* 최대 힙이나 최소 힙으로 구현하게 되는 경우가 많다.\n\n```java\n//최소 힙을 구하는 소스\nimport java.util.*;\n\npublic class Main {\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    PriorityQueue<Integer> q = new PriorityQueue<Integer>();\n    int n = sc.nextInt();\n    while (n-- > 0) {\n      int x = sc.nextInt();\n      if (x == 0) {\n        if (q.isEmpty()) {\n          System.out.println(0);\n        } else {\n          System.out.println(q.poll());\n        }\n      } else {\n        q.offer(x);\n      }\n    }\n  }\n}\n```","source":"_posts/2018-09-18-java-plang-2.md","raw":"---\ntitle: \"[JAVA] 프로그래밍 대회에서 사용하는 자바 - 2\"\ntags: [java, study]\ncategories: JAVA\n---\n> [백준 강의](https://code.plus/course/3) 정리 - Collections\n\n* Collections의 Stack, Queue 등을 사용하면 구현 없이 사용할 수 있다.\n\n# 목차\n1. [ArrayList](#link-1)\n  * [ArrayList의 주요 메소드](#link-1-1)\n\t* [예제](#link-1-2)\n\n2. [LinkedList](#link-2)\n3. [Stack](#link-3)\n\t* [Stack의 주요 메소드](#link-3-1)\n4. [Set](#link-4)\n\t* [Set의 주요 메소드](#link-4-1)\n\t* [HashSet](#link-4-2)\n\t* [TreeSet](#link-4-3)\n\t* [LinkedHashSet](#link-4-4)\n5. [Map](#link-5)\n\t* [Map의 주요 메소드](#link-5-1)\n6. [Queue](#link-6)\n\t* [Queue의 주요 메소드](#link-6-1)\n\t* [PriorityQueue](#link-6-2)\n\n## 1. <a id=\"link-1\"></a>ArrayList\n* 배열이다.\n* Array와 같은 역할을 하지만, 길이가 정해져 있지 않고 변한다.\n* C++에서는 vector에 해당된다.\n* `java.util`에 들어있다.\n* 그래프 문제의 인접 리스트를 만들 때 가장 많이 사용한다.\n\n```java\nimport java.util.*;\n\npublic class Main {\n  public static void main(String args[]) {\n    ArrayList<Integer> a = new ArrayList<Integer>();\n    // capacity가 40, 자료형은 정수\n    ArrayList<Integer> b = new ArrayList<Integer>(40);\n  }\n}\n```\n\n### <a id=\"link-1-1\"></a>1.1 ArrayList의 주요 메소드\n1. **boolean add(E e)**\n  - 새로운 element e를 추가\n2. **void add(int index, E element)**\n  - O(n)\n  - index번째에 새로운 element e를 추가\n3. **void clear()**\n  - ArrayList를 완전히 비움\n4. **boolean Contains(Object o)**\n  - O(n)\n  - Object o가 들어있는지 아닌지를 판단\n5. **E get(int index)**\n  - index번째를 데려옴\n  - arr[index]는 arr.get<index>와 같은 표현이다.\n6. **boolean isEmpty()**\n  - ArrayList가 비어있는지 아닌지 판단\n7. **E remove(int index)**\n  - O(n)\n  - index번째 삭제 \n8. **E set(int index, E element)**\n  - index번째를 새로운 element로 바꿈\n  - arr[index] = element와 같다\n9. **Object[] toArray()**\n  - Array로 바꾸기\n\n### 1.2 <a id=\"link-1-2\"></a>예제\n* ArrayList에 element 넣어서 출력하기\n```java\nimport java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    ArrayList<Integer> a = new ArrayList<Integer>();\n    for (int i=0; i<n; i++) {\n      int temp = sc.nextInt();\n      a.add(temp);\n    }\n    // 정렬하기\n    Collections.sort(a);\n    for (int x : a) {\n      System.out.println(x);\n    }\n    // 이렇게도 출력 가능\n    // for (int i=0; i<n; i++) {\n    //   System.out.println(a.get(i));\n    // }\n  }\n}\n```\n\n* 그래프 문제의 인접 리스트 만들기\n\n```java\nArrayList<Integer>[] a = (ArrayList<Integer>[]) new ArrayList[n+1];\n\nfor (int i=1; i<=n; i++) {\n    a[i] = new ArrayList<Integer>();\n}\nfor (int i=0; i<m; i++) {\n    int u = sc.nextInt();\n    int v = sc.nextInt();\n    // 인접한 간선 만들기\n    a[u].add(v);\n    a[v].add(u);\n}\n```\n\n## 2. <a id=\"link-2\"></a>LinkedList\n* 이중 연결 리스트라고 한다.\n* `java.util`에 들어있다.\n* 대회 문제나 알고리즘 문제에서는 사용하는 경우가 드물다.\n\n## <a id=\"link-3\"></a>3. Stack\n* `java.util`에 들어있다.\n* 가장 많이 사용하는 메소드 중 하나이다.\n* 한쪽 끝에서만 자료를 넣고 뺄 수 있는 구조이다.\n* 마지막으로 넣은 것이 가장 먼저 나오기 때문에 Last In First Out(LIFO)라고도 한다.\n\n### <a id=\"link-3-1\"></a>3.1 Stack의 주요 메소드\n1. **E push(E item)**\n  * 스택에 자료를 넣는 연산\n2. **E pop()**\n  * 스택에서 자료를 빼는 연산\n  * return값이 있다 (C++에서는 없음)\n3. **E peek()**\n  * 스택의 가장 위에 있는 자료를 보는 연산\n4. **bool empty()**\n  * 스택이 비어있는지 아닌지를 알아보는 연산\n5. **int size()**\n  * 스택에 저장되어있는 자료의 개수를 알아보는 연산\n\n## <a id=\"link-4\"></a>4. Set\n* 인터페이스이다.\n* 중복된 원소를 포함하지 않는다.\n* Set을 구현한 것으로 HashSet, TreeSet, LinkedHashSet이 있다.\n* 일반적인 경우에는 HashSet을 사용하고, 순서가 중요한 경우에는 TreeSet, 입력으로 넣은 순서가 중요한 경우에는 LinkedHashSet을 사용한다.\n\n### <a id=\"link-4-1\"></a>4.1 Set의 주요 메소드\n1. **boolean add(E e)**\n  * 새로운 element e를 추가\n2. **void clear()**\n  * Set을 완전히 비움\n3. **boolean contains(Object o)**\n  * Object o가 들어있는지 아닌지를 판단\n4. **boolean isEmpty()**\n  * Set이 비어있는지 아닌지 판단\n5. **boolean remove(Object o)**\n  * Object o 삭제 \n6. **int size()**\n  * Set 크기 알아보기\n7. **Object[] toArray()**\n  * Array로 바꾸기\n\n### <a id=\"link-4-2\"></a>4.2 HastSet\n* 해시 테이블을 이용해서 구현되어 있다.\n* 삽입/삭제/제거 연산의 시간 복잡도가 O(1)이다.\n* 순서가 보장되지 않는다.\n\n```java\nimport java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    HashSet<Integer> d = new HashSet<Integer>();\n    for (int i=10; i>=1; i--) {\n      d.add(i); \n    }\n    for (int x : d) {\n      // 순서를 모른다.\n      System.out.print(x + \" \");\n    }\n  }\n}\n```\n\n### <a id=\"link-4-3\"></a>4.3 TreeSet\n* 이진 검색 트리(레드 블랙 트리)로 이루어져 있다.\n* 삽입/삭제/제거 연산의 시간 복잡도가 O(log N)이다.\n* 순서가 보장된다.\n\n```java\nimport java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    TreeSet<Integer> d = new TreeSet<Integer>();\n    for (int i=10; i>=1; i--) {\n      d.add(i); \n    }\n    for (int x : d) {\n      // 1 2 3 4 5 6 7 8 9 10\n      System.out.print(x + \" \");\n    }\n  }\n}\n```\n\n### <a id=\"link-4-4\"></a>4.4 LinkedHashSet\n* 해시테이블과 연결리스트를 이용해서 구현되어 있다.\n* 삽입/삭제/제거 연산의 시간 복잡도가 O(1)이다.\n* 추가한 순서가 보장된다.\n\n```java\nimport java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    LinkedHashSet<Integer> d = new LinkedHashSet<Integer>();\n    for (int i=10; i>=1; i--) {\n      d.add(i);\n    }\n    for (int x : d) {\n      // 10 9 8 7 6 5 4 3 2 1\n      System.out.print(x + \" \");\n    }\n  }\n}\n```\n\n## <a id=\"link-5\"></a>5. Map\n* 인터페이스이다.\n* 중복된 Key를 포함하지 않는다.\n* Key-Value 쌍을 이룬다. (사전과 비슷)\n* Map을 구현한 것으로 HashMap, TreeMap, LinkedHashMap이 있다.\n\n### <a id=\"link-5-1\"></a>5.1 Map의 주요 메소드\n1. void clear()\n  * Map을 완전히 비움\n2. boolean containsKey(Object key)\n  * key가 들어있는지 아닌지 확인\n3. boolean containsValue(Object value)\n  * 어떤 value를 가지고있는지 아닌지를 확인\n4. Set<Map.Entry<K,V>> entrySet()\n  * Key-Value 쌍을 이용한 Set을 만들어줌\n5. V get(Object key)\n  * Key를 넣으면 Key에 해당하는 Value 리턴\n6. boolean isEmpty()\n  * Map이 비어있는지 아닌지 판단\n7. Set<K> keySet()\n  * Key를 이용해서 만든 Set을 만들어줌\n8. V put(K key, V value)\n  * Key에 해당하는 Value를 넣음\n9. boolean remove(Object o)\n  * Object o 삭제 \n10. int size()\n  * Map의 크기 알아보기\n\n## <a id=\"link-6\"></a>6. Queue\n* 한쪽 끝에만 자료를 넣고 다른 한쪽 끝에서만 뺄 수 있는 자료구조.\n* 먼저 넣은 것이 가장 먼저 나오기 때문에 First In First Out(FIFO)라고도 한다.\n* 인터페이스이다.\n* 구현한 클래스로는 ArrayDeque, LinkedList, PriorityQueue가 있다.\n* 뒤에 무슨 데이터가 있는지 알아보는 메소드는 존재하지 않는다. 중요하지 않기 때문이다.\n\n### <a id=\"link-6-1\"></a>6.1 Queue의 주요 메소드\n1. **boolean offer(E e)**\n  * 큐에 자료를 넣는 연산(push)\n2. **E poll()**\n  * 큐에서 자료를 빼는 연산(pop)\n  * return값이 있다 (C++에서는 없음)\n3. **E peek()**\n  * 큐의 가장 앞에 있는 자료를 보는 연산\n4. **bool isEmpty()**\n  * 큐가 비어있는지 아닌지를 알아보는 연산\n5. **int size()**\n  * 큐에 저장되어있는 자료의 개수를 알아보는 연산\n\n### <a id=\"link-6-2\"></a>6.2 PriorityQueue\n* 우선 순위 큐라고 한다.\n* 큐에 들어있는 아이템들 중 우선순위가 높은 아이템부터 pop이 된다.\n* 최대 힙이나 최소 힙으로 구현하게 되는 경우가 많다.\n\n```java\n//최소 힙을 구하는 소스\nimport java.util.*;\n\npublic class Main {\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    PriorityQueue<Integer> q = new PriorityQueue<Integer>();\n    int n = sc.nextInt();\n    while (n-- > 0) {\n      int x = sc.nextInt();\n      if (x == 0) {\n        if (q.isEmpty()) {\n          System.out.println(0);\n        } else {\n          System.out.println(q.poll());\n        }\n      } else {\n        q.offer(x);\n      }\n    }\n  }\n}\n```","slug":"java-plang-2","published":1,"date":"2018-09-17T15:00:00.000Z","updated":"2020-05-05T08:00:03.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afg4000juv5934angtg0","content":"<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnBsdXMvY291cnNlLzM=\" title=\"https://code.plus/course/3\">백준 강의<i class=\"fa fa-external-link\"></i></span> 정리 - Collections</p>\n</blockquote>\n<ul>\n<li>Collections의 Stack, Queue 등을 사용하면 구현 없이 사용할 수 있다.</li>\n</ul>\n<h1 id=\"목차\"><a href=\"#목차\" class=\"headerlink\" title=\"목차\"></a>목차</h1><ol>\n<li><p><a href=\"#link-1\">ArrayList</a></p>\n<ul>\n<li><a href=\"#link-1-1\">ArrayList의 주요 메소드</a><ul>\n<li><a href=\"#link-1-2\">예제</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><a href=\"#link-2\">LinkedList</a></p>\n</li>\n<li><p><a href=\"#link-3\">Stack</a></p>\n<ul>\n<li><a href=\"#link-3-1\">Stack의 주요 메소드</a></li>\n</ul>\n</li>\n<li><p><a href=\"#link-4\">Set</a></p>\n<ul>\n<li><a href=\"#link-4-1\">Set의 주요 메소드</a></li>\n<li><a href=\"#link-4-2\">HashSet</a></li>\n<li><a href=\"#link-4-3\">TreeSet</a></li>\n<li><a href=\"#link-4-4\">LinkedHashSet</a></li>\n</ul>\n</li>\n<li><p><a href=\"#link-5\">Map</a></p>\n<ul>\n<li><a href=\"#link-5-1\">Map의 주요 메소드</a></li>\n</ul>\n</li>\n<li><p><a href=\"#link-6\">Queue</a></p>\n<ul>\n<li><a href=\"#link-6-1\">Queue의 주요 메소드</a></li>\n<li><a href=\"#link-6-2\">PriorityQueue</a></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"1-ArrayList\"><a href=\"#1-ArrayList\" class=\"headerlink\" title=\"1. ArrayList\"></a>1. <a id=\"link-1\"></a>ArrayList</h2><ul>\n<li>배열이다.</li>\n<li>Array와 같은 역할을 하지만, 길이가 정해져 있지 않고 변한다.</li>\n<li>C++에서는 vector에 해당된다.</li>\n<li><code>java.util</code>에 들어있다.</li>\n<li>그래프 문제의 인접 리스트를 만들 때 가장 많이 사용한다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    ArrayList&lt;Integer&gt; a = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"comment\">// capacity가 40, 자료형은 정수</span></span><br><span class=\"line\">    ArrayList&lt;Integer&gt; b = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;(<span class=\"number\">40</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-1-ArrayList의-주요-메소드\"><a href=\"#1-1-ArrayList의-주요-메소드\" class=\"headerlink\" title=\"1.1 ArrayList의 주요 메소드\"></a><a id=\"link-1-1\"></a>1.1 ArrayList의 주요 메소드</h3><ol>\n<li><strong>boolean add(E e)</strong><ul>\n<li>새로운 element e를 추가</li>\n</ul>\n</li>\n<li><strong>void add(int index, E element)</strong><ul>\n<li>O(n)</li>\n<li>index번째에 새로운 element e를 추가</li>\n</ul>\n</li>\n<li><strong>void clear()</strong><ul>\n<li>ArrayList를 완전히 비움</li>\n</ul>\n</li>\n<li><strong>boolean Contains(Object o)</strong><ul>\n<li>O(n)</li>\n<li>Object o가 들어있는지 아닌지를 판단</li>\n</ul>\n</li>\n<li><strong>E get(int index)</strong><ul>\n<li>index번째를 데려옴</li>\n<li>arr[index]는 arr.get<index>와 같은 표현이다.</li>\n</ul>\n</li>\n<li><strong>boolean isEmpty()</strong><ul>\n<li>ArrayList가 비어있는지 아닌지 판단</li>\n</ul>\n</li>\n<li><strong>E remove(int index)</strong><ul>\n<li>O(n)</li>\n<li>index번째 삭제 </li>\n</ul>\n</li>\n<li><strong>E set(int index, E element)</strong><ul>\n<li>index번째를 새로운 element로 바꿈</li>\n<li>arr[index] = element와 같다</li>\n</ul>\n</li>\n<li><strong>Object[] toArray()</strong><ul>\n<li>Array로 바꾸기</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-2-예제\"><a href=\"#1-2-예제\" class=\"headerlink\" title=\"1.2 예제\"></a>1.2 <a id=\"link-1-2\"></a>예제</h3><ul>\n<li><p>ArrayList에 element 넣어서 출력하기</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    ArrayList&lt;Integer&gt; a = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> temp = sc.nextInt();</span><br><span class=\"line\">      a.add(temp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 정렬하기</span></span><br><span class=\"line\">    Collections.sort(a);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : a) &#123;</span><br><span class=\"line\">      System.out.println(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 이렇게도 출력 가능</span></span><br><span class=\"line\">    <span class=\"comment\">// for (int i=0; i&lt;n; i++) &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//   System.out.println(a.get(i));</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>그래프 문제의 인접 리스트 만들기</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArrayList&lt;Integer&gt;[] a = (ArrayList&lt;Integer&gt;[]) <span class=\"keyword\">new</span> ArrayList[n+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++) &#123;</span><br><span class=\"line\">    a[i] = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;m; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> u = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v = sc.nextInt();</span><br><span class=\"line\">    <span class=\"comment\">// 인접한 간선 만들기</span></span><br><span class=\"line\">    a[u].add(v);</span><br><span class=\"line\">    a[v].add(u);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-LinkedList\"><a href=\"#2-LinkedList\" class=\"headerlink\" title=\"2. LinkedList\"></a>2. <a id=\"link-2\"></a>LinkedList</h2><ul>\n<li>이중 연결 리스트라고 한다.</li>\n<li><code>java.util</code>에 들어있다.</li>\n<li>대회 문제나 알고리즘 문제에서는 사용하는 경우가 드물다.</li>\n</ul>\n<h2 id=\"3-Stack\"><a href=\"#3-Stack\" class=\"headerlink\" title=\"3. Stack\"></a><a id=\"link-3\"></a>3. Stack</h2><ul>\n<li><code>java.util</code>에 들어있다.</li>\n<li>가장 많이 사용하는 메소드 중 하나이다.</li>\n<li>한쪽 끝에서만 자료를 넣고 뺄 수 있는 구조이다.</li>\n<li>마지막으로 넣은 것이 가장 먼저 나오기 때문에 Last In First Out(LIFO)라고도 한다.</li>\n</ul>\n<h3 id=\"3-1-Stack의-주요-메소드\"><a href=\"#3-1-Stack의-주요-메소드\" class=\"headerlink\" title=\"3.1 Stack의 주요 메소드\"></a><a id=\"link-3-1\"></a>3.1 Stack의 주요 메소드</h3><ol>\n<li><strong>E push(E item)</strong><ul>\n<li>스택에 자료를 넣는 연산</li>\n</ul>\n</li>\n<li><strong>E pop()</strong><ul>\n<li>스택에서 자료를 빼는 연산</li>\n<li>return값이 있다 (C++에서는 없음)</li>\n</ul>\n</li>\n<li><strong>E peek()</strong><ul>\n<li>스택의 가장 위에 있는 자료를 보는 연산</li>\n</ul>\n</li>\n<li><strong>bool empty()</strong><ul>\n<li>스택이 비어있는지 아닌지를 알아보는 연산</li>\n</ul>\n</li>\n<li><strong>int size()</strong><ul>\n<li>스택에 저장되어있는 자료의 개수를 알아보는 연산</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"4-Set\"><a href=\"#4-Set\" class=\"headerlink\" title=\"4. Set\"></a><a id=\"link-4\"></a>4. Set</h2><ul>\n<li>인터페이스이다.</li>\n<li>중복된 원소를 포함하지 않는다.</li>\n<li>Set을 구현한 것으로 HashSet, TreeSet, LinkedHashSet이 있다.</li>\n<li>일반적인 경우에는 HashSet을 사용하고, 순서가 중요한 경우에는 TreeSet, 입력으로 넣은 순서가 중요한 경우에는 LinkedHashSet을 사용한다.</li>\n</ul>\n<h3 id=\"4-1-Set의-주요-메소드\"><a href=\"#4-1-Set의-주요-메소드\" class=\"headerlink\" title=\"4.1 Set의 주요 메소드\"></a><a id=\"link-4-1\"></a>4.1 Set의 주요 메소드</h3><ol>\n<li><strong>boolean add(E e)</strong><ul>\n<li>새로운 element e를 추가</li>\n</ul>\n</li>\n<li><strong>void clear()</strong><ul>\n<li>Set을 완전히 비움</li>\n</ul>\n</li>\n<li><strong>boolean contains(Object o)</strong><ul>\n<li>Object o가 들어있는지 아닌지를 판단</li>\n</ul>\n</li>\n<li><strong>boolean isEmpty()</strong><ul>\n<li>Set이 비어있는지 아닌지 판단</li>\n</ul>\n</li>\n<li><strong>boolean remove(Object o)</strong><ul>\n<li>Object o 삭제 </li>\n</ul>\n</li>\n<li><strong>int size()</strong><ul>\n<li>Set 크기 알아보기</li>\n</ul>\n</li>\n<li><strong>Object[] toArray()</strong><ul>\n<li>Array로 바꾸기</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"4-2-HastSet\"><a href=\"#4-2-HastSet\" class=\"headerlink\" title=\"4.2 HastSet\"></a><a id=\"link-4-2\"></a>4.2 HastSet</h3><ul>\n<li>해시 테이블을 이용해서 구현되어 있다.</li>\n<li>삽입/삭제/제거 연산의 시간 복잡도가 O(1)이다.</li>\n<li>순서가 보장되지 않는다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    HashSet&lt;Integer&gt; d = <span class=\"keyword\">new</span> HashSet&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">10</span>; i&gt;=<span class=\"number\">1</span>; i--) &#123;</span><br><span class=\"line\">      d.add(i); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : d) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 순서를 모른다.</span></span><br><span class=\"line\">      System.out.print(x + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-TreeSet\"><a href=\"#4-3-TreeSet\" class=\"headerlink\" title=\"4.3 TreeSet\"></a><a id=\"link-4-3\"></a>4.3 TreeSet</h3><ul>\n<li>이진 검색 트리(레드 블랙 트리)로 이루어져 있다.</li>\n<li>삽입/삭제/제거 연산의 시간 복잡도가 O(log N)이다.</li>\n<li>순서가 보장된다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    TreeSet&lt;Integer&gt; d = <span class=\"keyword\">new</span> TreeSet&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">10</span>; i&gt;=<span class=\"number\">1</span>; i--) &#123;</span><br><span class=\"line\">      d.add(i); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : d) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 1 2 3 4 5 6 7 8 9 10</span></span><br><span class=\"line\">      System.out.print(x + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-4-LinkedHashSet\"><a href=\"#4-4-LinkedHashSet\" class=\"headerlink\" title=\"4.4 LinkedHashSet\"></a><a id=\"link-4-4\"></a>4.4 LinkedHashSet</h3><ul>\n<li>해시테이블과 연결리스트를 이용해서 구현되어 있다.</li>\n<li>삽입/삭제/제거 연산의 시간 복잡도가 O(1)이다.</li>\n<li>추가한 순서가 보장된다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    LinkedHashSet&lt;Integer&gt; d = <span class=\"keyword\">new</span> LinkedHashSet&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">10</span>; i&gt;=<span class=\"number\">1</span>; i--) &#123;</span><br><span class=\"line\">      d.add(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : d) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 10 9 8 7 6 5 4 3 2 1</span></span><br><span class=\"line\">      System.out.print(x + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-Map\"><a href=\"#5-Map\" class=\"headerlink\" title=\"5. Map\"></a><a id=\"link-5\"></a>5. Map</h2><ul>\n<li>인터페이스이다.</li>\n<li>중복된 Key를 포함하지 않는다.</li>\n<li>Key-Value 쌍을 이룬다. (사전과 비슷)</li>\n<li>Map을 구현한 것으로 HashMap, TreeMap, LinkedHashMap이 있다.</li>\n</ul>\n<h3 id=\"5-1-Map의-주요-메소드\"><a href=\"#5-1-Map의-주요-메소드\" class=\"headerlink\" title=\"5.1 Map의 주요 메소드\"></a><a id=\"link-5-1\"></a>5.1 Map의 주요 메소드</h3><ol>\n<li>void clear()<ul>\n<li>Map을 완전히 비움</li>\n</ul>\n</li>\n<li>boolean containsKey(Object key)<ul>\n<li>key가 들어있는지 아닌지 확인</li>\n</ul>\n</li>\n<li>boolean containsValue(Object value)<ul>\n<li>어떤 value를 가지고있는지 아닌지를 확인</li>\n</ul>\n</li>\n<li>Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet()<ul>\n<li>Key-Value 쌍을 이용한 Set을 만들어줌</li>\n</ul>\n</li>\n<li>V get(Object key)<ul>\n<li>Key를 넣으면 Key에 해당하는 Value 리턴</li>\n</ul>\n</li>\n<li>boolean isEmpty()<ul>\n<li>Map이 비어있는지 아닌지 판단</li>\n</ul>\n</li>\n<li>Set<K> keySet()<ul>\n<li>Key를 이용해서 만든 Set을 만들어줌</li>\n</ul>\n</li>\n<li>V put(K key, V value)<ul>\n<li>Key에 해당하는 Value를 넣음</li>\n</ul>\n</li>\n<li>boolean remove(Object o)<ul>\n<li>Object o 삭제 </li>\n</ul>\n</li>\n<li>int size()<ul>\n<li>Map의 크기 알아보기</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"6-Queue\"><a href=\"#6-Queue\" class=\"headerlink\" title=\"6. Queue\"></a><a id=\"link-6\"></a>6. Queue</h2><ul>\n<li>한쪽 끝에만 자료를 넣고 다른 한쪽 끝에서만 뺄 수 있는 자료구조.</li>\n<li>먼저 넣은 것이 가장 먼저 나오기 때문에 First In First Out(FIFO)라고도 한다.</li>\n<li>인터페이스이다.</li>\n<li>구현한 클래스로는 ArrayDeque, LinkedList, PriorityQueue가 있다.</li>\n<li>뒤에 무슨 데이터가 있는지 알아보는 메소드는 존재하지 않는다. 중요하지 않기 때문이다.</li>\n</ul>\n<h3 id=\"6-1-Queue의-주요-메소드\"><a href=\"#6-1-Queue의-주요-메소드\" class=\"headerlink\" title=\"6.1 Queue의 주요 메소드\"></a><a id=\"link-6-1\"></a>6.1 Queue의 주요 메소드</h3><ol>\n<li><strong>boolean offer(E e)</strong><ul>\n<li>큐에 자료를 넣는 연산(push)</li>\n</ul>\n</li>\n<li><strong>E poll()</strong><ul>\n<li>큐에서 자료를 빼는 연산(pop)</li>\n<li>return값이 있다 (C++에서는 없음)</li>\n</ul>\n</li>\n<li><strong>E peek()</strong><ul>\n<li>큐의 가장 앞에 있는 자료를 보는 연산</li>\n</ul>\n</li>\n<li><strong>bool isEmpty()</strong><ul>\n<li>큐가 비어있는지 아닌지를 알아보는 연산</li>\n</ul>\n</li>\n<li><strong>int size()</strong><ul>\n<li>큐에 저장되어있는 자료의 개수를 알아보는 연산</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"6-2-PriorityQueue\"><a href=\"#6-2-PriorityQueue\" class=\"headerlink\" title=\"6.2 PriorityQueue\"></a><a id=\"link-6-2\"></a>6.2 PriorityQueue</h3><ul>\n<li>우선 순위 큐라고 한다.</li>\n<li>큐에 들어있는 아이템들 중 우선순위가 높은 아이템부터 pop이 된다.</li>\n<li>최대 힙이나 최소 힙으로 구현하게 되는 경우가 많다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//최소 힙을 구하는 소스</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    PriorityQueue&lt;Integer&gt; q = <span class=\"keyword\">new</span> PriorityQueue&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n-- &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> x = sc.nextInt();</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (x == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (q.isEmpty()) &#123;</span><br><span class=\"line\">          System.out.println(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          System.out.println(q.poll());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        q.offer(x);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnBsdXMvY291cnNlLzM=\" title=\"https://code.plus/course/3\">백준 강의<i class=\"fa fa-external-link\"></i></span> 정리 - Collections</p>\n</blockquote>\n<ul>\n<li>Collections의 Stack, Queue 등을 사용하면 구현 없이 사용할 수 있다.</li>\n</ul>\n<h1 id=\"목차\"><a href=\"#목차\" class=\"headerlink\" title=\"목차\"></a>목차</h1><ol>\n<li><p><a href=\"#link-1\">ArrayList</a></p>\n<ul>\n<li><a href=\"#link-1-1\">ArrayList의 주요 메소드</a><ul>\n<li><a href=\"#link-1-2\">예제</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><a href=\"#link-2\">LinkedList</a></p>\n</li>\n<li><p><a href=\"#link-3\">Stack</a></p>\n<ul>\n<li><a href=\"#link-3-1\">Stack의 주요 메소드</a></li>\n</ul>\n</li>\n<li><p><a href=\"#link-4\">Set</a></p>\n<ul>\n<li><a href=\"#link-4-1\">Set의 주요 메소드</a></li>\n<li><a href=\"#link-4-2\">HashSet</a></li>\n<li><a href=\"#link-4-3\">TreeSet</a></li>\n<li><a href=\"#link-4-4\">LinkedHashSet</a></li>\n</ul>\n</li>\n<li><p><a href=\"#link-5\">Map</a></p>\n<ul>\n<li><a href=\"#link-5-1\">Map의 주요 메소드</a></li>\n</ul>\n</li>\n<li><p><a href=\"#link-6\">Queue</a></p>\n<ul>\n<li><a href=\"#link-6-1\">Queue의 주요 메소드</a></li>\n<li><a href=\"#link-6-2\">PriorityQueue</a></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"1-ArrayList\"><a href=\"#1-ArrayList\" class=\"headerlink\" title=\"1. ArrayList\"></a>1. <a id=\"link-1\"></a>ArrayList</h2><ul>\n<li>배열이다.</li>\n<li>Array와 같은 역할을 하지만, 길이가 정해져 있지 않고 변한다.</li>\n<li>C++에서는 vector에 해당된다.</li>\n<li><code>java.util</code>에 들어있다.</li>\n<li>그래프 문제의 인접 리스트를 만들 때 가장 많이 사용한다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    ArrayList&lt;Integer&gt; a = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"comment\">// capacity가 40, 자료형은 정수</span></span><br><span class=\"line\">    ArrayList&lt;Integer&gt; b = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;(<span class=\"number\">40</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-1-ArrayList의-주요-메소드\"><a href=\"#1-1-ArrayList의-주요-메소드\" class=\"headerlink\" title=\"1.1 ArrayList의 주요 메소드\"></a><a id=\"link-1-1\"></a>1.1 ArrayList의 주요 메소드</h3><ol>\n<li><strong>boolean add(E e)</strong><ul>\n<li>새로운 element e를 추가</li>\n</ul>\n</li>\n<li><strong>void add(int index, E element)</strong><ul>\n<li>O(n)</li>\n<li>index번째에 새로운 element e를 추가</li>\n</ul>\n</li>\n<li><strong>void clear()</strong><ul>\n<li>ArrayList를 완전히 비움</li>\n</ul>\n</li>\n<li><strong>boolean Contains(Object o)</strong><ul>\n<li>O(n)</li>\n<li>Object o가 들어있는지 아닌지를 판단</li>\n</ul>\n</li>\n<li><strong>E get(int index)</strong><ul>\n<li>index번째를 데려옴</li>\n<li>arr[index]는 arr.get<index>와 같은 표현이다.</li>\n</ul>\n</li>\n<li><strong>boolean isEmpty()</strong><ul>\n<li>ArrayList가 비어있는지 아닌지 판단</li>\n</ul>\n</li>\n<li><strong>E remove(int index)</strong><ul>\n<li>O(n)</li>\n<li>index번째 삭제 </li>\n</ul>\n</li>\n<li><strong>E set(int index, E element)</strong><ul>\n<li>index번째를 새로운 element로 바꿈</li>\n<li>arr[index] = element와 같다</li>\n</ul>\n</li>\n<li><strong>Object[] toArray()</strong><ul>\n<li>Array로 바꾸기</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-2-예제\"><a href=\"#1-2-예제\" class=\"headerlink\" title=\"1.2 예제\"></a>1.2 <a id=\"link-1-2\"></a>예제</h3><ul>\n<li><p>ArrayList에 element 넣어서 출력하기</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    ArrayList&lt;Integer&gt; a = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> temp = sc.nextInt();</span><br><span class=\"line\">      a.add(temp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 정렬하기</span></span><br><span class=\"line\">    Collections.sort(a);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : a) &#123;</span><br><span class=\"line\">      System.out.println(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 이렇게도 출력 가능</span></span><br><span class=\"line\">    <span class=\"comment\">// for (int i=0; i&lt;n; i++) &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//   System.out.println(a.get(i));</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>그래프 문제의 인접 리스트 만들기</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArrayList&lt;Integer&gt;[] a = (ArrayList&lt;Integer&gt;[]) <span class=\"keyword\">new</span> ArrayList[n+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=n; i++) &#123;</span><br><span class=\"line\">    a[i] = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;m; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> u = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v = sc.nextInt();</span><br><span class=\"line\">    <span class=\"comment\">// 인접한 간선 만들기</span></span><br><span class=\"line\">    a[u].add(v);</span><br><span class=\"line\">    a[v].add(u);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-LinkedList\"><a href=\"#2-LinkedList\" class=\"headerlink\" title=\"2. LinkedList\"></a>2. <a id=\"link-2\"></a>LinkedList</h2><ul>\n<li>이중 연결 리스트라고 한다.</li>\n<li><code>java.util</code>에 들어있다.</li>\n<li>대회 문제나 알고리즘 문제에서는 사용하는 경우가 드물다.</li>\n</ul>\n<h2 id=\"3-Stack\"><a href=\"#3-Stack\" class=\"headerlink\" title=\"3. Stack\"></a><a id=\"link-3\"></a>3. Stack</h2><ul>\n<li><code>java.util</code>에 들어있다.</li>\n<li>가장 많이 사용하는 메소드 중 하나이다.</li>\n<li>한쪽 끝에서만 자료를 넣고 뺄 수 있는 구조이다.</li>\n<li>마지막으로 넣은 것이 가장 먼저 나오기 때문에 Last In First Out(LIFO)라고도 한다.</li>\n</ul>\n<h3 id=\"3-1-Stack의-주요-메소드\"><a href=\"#3-1-Stack의-주요-메소드\" class=\"headerlink\" title=\"3.1 Stack의 주요 메소드\"></a><a id=\"link-3-1\"></a>3.1 Stack의 주요 메소드</h3><ol>\n<li><strong>E push(E item)</strong><ul>\n<li>스택에 자료를 넣는 연산</li>\n</ul>\n</li>\n<li><strong>E pop()</strong><ul>\n<li>스택에서 자료를 빼는 연산</li>\n<li>return값이 있다 (C++에서는 없음)</li>\n</ul>\n</li>\n<li><strong>E peek()</strong><ul>\n<li>스택의 가장 위에 있는 자료를 보는 연산</li>\n</ul>\n</li>\n<li><strong>bool empty()</strong><ul>\n<li>스택이 비어있는지 아닌지를 알아보는 연산</li>\n</ul>\n</li>\n<li><strong>int size()</strong><ul>\n<li>스택에 저장되어있는 자료의 개수를 알아보는 연산</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"4-Set\"><a href=\"#4-Set\" class=\"headerlink\" title=\"4. Set\"></a><a id=\"link-4\"></a>4. Set</h2><ul>\n<li>인터페이스이다.</li>\n<li>중복된 원소를 포함하지 않는다.</li>\n<li>Set을 구현한 것으로 HashSet, TreeSet, LinkedHashSet이 있다.</li>\n<li>일반적인 경우에는 HashSet을 사용하고, 순서가 중요한 경우에는 TreeSet, 입력으로 넣은 순서가 중요한 경우에는 LinkedHashSet을 사용한다.</li>\n</ul>\n<h3 id=\"4-1-Set의-주요-메소드\"><a href=\"#4-1-Set의-주요-메소드\" class=\"headerlink\" title=\"4.1 Set의 주요 메소드\"></a><a id=\"link-4-1\"></a>4.1 Set의 주요 메소드</h3><ol>\n<li><strong>boolean add(E e)</strong><ul>\n<li>새로운 element e를 추가</li>\n</ul>\n</li>\n<li><strong>void clear()</strong><ul>\n<li>Set을 완전히 비움</li>\n</ul>\n</li>\n<li><strong>boolean contains(Object o)</strong><ul>\n<li>Object o가 들어있는지 아닌지를 판단</li>\n</ul>\n</li>\n<li><strong>boolean isEmpty()</strong><ul>\n<li>Set이 비어있는지 아닌지 판단</li>\n</ul>\n</li>\n<li><strong>boolean remove(Object o)</strong><ul>\n<li>Object o 삭제 </li>\n</ul>\n</li>\n<li><strong>int size()</strong><ul>\n<li>Set 크기 알아보기</li>\n</ul>\n</li>\n<li><strong>Object[] toArray()</strong><ul>\n<li>Array로 바꾸기</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"4-2-HastSet\"><a href=\"#4-2-HastSet\" class=\"headerlink\" title=\"4.2 HastSet\"></a><a id=\"link-4-2\"></a>4.2 HastSet</h3><ul>\n<li>해시 테이블을 이용해서 구현되어 있다.</li>\n<li>삽입/삭제/제거 연산의 시간 복잡도가 O(1)이다.</li>\n<li>순서가 보장되지 않는다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    HashSet&lt;Integer&gt; d = <span class=\"keyword\">new</span> HashSet&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">10</span>; i&gt;=<span class=\"number\">1</span>; i--) &#123;</span><br><span class=\"line\">      d.add(i); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : d) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 순서를 모른다.</span></span><br><span class=\"line\">      System.out.print(x + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-3-TreeSet\"><a href=\"#4-3-TreeSet\" class=\"headerlink\" title=\"4.3 TreeSet\"></a><a id=\"link-4-3\"></a>4.3 TreeSet</h3><ul>\n<li>이진 검색 트리(레드 블랙 트리)로 이루어져 있다.</li>\n<li>삽입/삭제/제거 연산의 시간 복잡도가 O(log N)이다.</li>\n<li>순서가 보장된다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    TreeSet&lt;Integer&gt; d = <span class=\"keyword\">new</span> TreeSet&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">10</span>; i&gt;=<span class=\"number\">1</span>; i--) &#123;</span><br><span class=\"line\">      d.add(i); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : d) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 1 2 3 4 5 6 7 8 9 10</span></span><br><span class=\"line\">      System.out.print(x + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-4-LinkedHashSet\"><a href=\"#4-4-LinkedHashSet\" class=\"headerlink\" title=\"4.4 LinkedHashSet\"></a><a id=\"link-4-4\"></a>4.4 LinkedHashSet</h3><ul>\n<li>해시테이블과 연결리스트를 이용해서 구현되어 있다.</li>\n<li>삽입/삭제/제거 연산의 시간 복잡도가 O(1)이다.</li>\n<li>추가한 순서가 보장된다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    LinkedHashSet&lt;Integer&gt; d = <span class=\"keyword\">new</span> LinkedHashSet&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">10</span>; i&gt;=<span class=\"number\">1</span>; i--) &#123;</span><br><span class=\"line\">      d.add(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : d) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 10 9 8 7 6 5 4 3 2 1</span></span><br><span class=\"line\">      System.out.print(x + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-Map\"><a href=\"#5-Map\" class=\"headerlink\" title=\"5. Map\"></a><a id=\"link-5\"></a>5. Map</h2><ul>\n<li>인터페이스이다.</li>\n<li>중복된 Key를 포함하지 않는다.</li>\n<li>Key-Value 쌍을 이룬다. (사전과 비슷)</li>\n<li>Map을 구현한 것으로 HashMap, TreeMap, LinkedHashMap이 있다.</li>\n</ul>\n<h3 id=\"5-1-Map의-주요-메소드\"><a href=\"#5-1-Map의-주요-메소드\" class=\"headerlink\" title=\"5.1 Map의 주요 메소드\"></a><a id=\"link-5-1\"></a>5.1 Map의 주요 메소드</h3><ol>\n<li>void clear()<ul>\n<li>Map을 완전히 비움</li>\n</ul>\n</li>\n<li>boolean containsKey(Object key)<ul>\n<li>key가 들어있는지 아닌지 확인</li>\n</ul>\n</li>\n<li>boolean containsValue(Object value)<ul>\n<li>어떤 value를 가지고있는지 아닌지를 확인</li>\n</ul>\n</li>\n<li>Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet()<ul>\n<li>Key-Value 쌍을 이용한 Set을 만들어줌</li>\n</ul>\n</li>\n<li>V get(Object key)<ul>\n<li>Key를 넣으면 Key에 해당하는 Value 리턴</li>\n</ul>\n</li>\n<li>boolean isEmpty()<ul>\n<li>Map이 비어있는지 아닌지 판단</li>\n</ul>\n</li>\n<li>Set<K> keySet()<ul>\n<li>Key를 이용해서 만든 Set을 만들어줌</li>\n</ul>\n</li>\n<li>V put(K key, V value)<ul>\n<li>Key에 해당하는 Value를 넣음</li>\n</ul>\n</li>\n<li>boolean remove(Object o)<ul>\n<li>Object o 삭제 </li>\n</ul>\n</li>\n<li>int size()<ul>\n<li>Map의 크기 알아보기</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"6-Queue\"><a href=\"#6-Queue\" class=\"headerlink\" title=\"6. Queue\"></a><a id=\"link-6\"></a>6. Queue</h2><ul>\n<li>한쪽 끝에만 자료를 넣고 다른 한쪽 끝에서만 뺄 수 있는 자료구조.</li>\n<li>먼저 넣은 것이 가장 먼저 나오기 때문에 First In First Out(FIFO)라고도 한다.</li>\n<li>인터페이스이다.</li>\n<li>구현한 클래스로는 ArrayDeque, LinkedList, PriorityQueue가 있다.</li>\n<li>뒤에 무슨 데이터가 있는지 알아보는 메소드는 존재하지 않는다. 중요하지 않기 때문이다.</li>\n</ul>\n<h3 id=\"6-1-Queue의-주요-메소드\"><a href=\"#6-1-Queue의-주요-메소드\" class=\"headerlink\" title=\"6.1 Queue의 주요 메소드\"></a><a id=\"link-6-1\"></a>6.1 Queue의 주요 메소드</h3><ol>\n<li><strong>boolean offer(E e)</strong><ul>\n<li>큐에 자료를 넣는 연산(push)</li>\n</ul>\n</li>\n<li><strong>E poll()</strong><ul>\n<li>큐에서 자료를 빼는 연산(pop)</li>\n<li>return값이 있다 (C++에서는 없음)</li>\n</ul>\n</li>\n<li><strong>E peek()</strong><ul>\n<li>큐의 가장 앞에 있는 자료를 보는 연산</li>\n</ul>\n</li>\n<li><strong>bool isEmpty()</strong><ul>\n<li>큐가 비어있는지 아닌지를 알아보는 연산</li>\n</ul>\n</li>\n<li><strong>int size()</strong><ul>\n<li>큐에 저장되어있는 자료의 개수를 알아보는 연산</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"6-2-PriorityQueue\"><a href=\"#6-2-PriorityQueue\" class=\"headerlink\" title=\"6.2 PriorityQueue\"></a><a id=\"link-6-2\"></a>6.2 PriorityQueue</h3><ul>\n<li>우선 순위 큐라고 한다.</li>\n<li>큐에 들어있는 아이템들 중 우선순위가 높은 아이템부터 pop이 된다.</li>\n<li>최대 힙이나 최소 힙으로 구현하게 되는 경우가 많다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//최소 힙을 구하는 소스</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    PriorityQueue&lt;Integer&gt; q = <span class=\"keyword\">new</span> PriorityQueue&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n-- &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> x = sc.nextInt();</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (x == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (q.isEmpty()) &#123;</span><br><span class=\"line\">          System.out.println(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          System.out.println(q.poll());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        q.offer(x);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/2839] 설탕 배달","_content":"\n> Baekjoon Online Judge - [2839](https://www.acmicpc.net/problem/2839)\n\n## Review\n\n- 3을 계속 빼다 5의 배수인 경우 5로 전부 나누면 된다.\n\n## Code (JAVA)\n\n```java\nimport java.util.*;\n\npublic class Main {\n\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int input = sc.nextInt();\n    int cnt = 0;\n    int ans = 0;\n\n    // 입력이 5의 배수가 아닌 경우, 0보다 같거나 클 경우\n    while(input % 5 !=0 && input >= 0) {\n      // 3씩 뺌\n      input -=3;\n      cnt++;\n\n    }\n\n    ans = input < 0 ? -1 : cnt + input/5;\n    System.out.println(ans);\n\n  }\n\n}\n```\n","source":"_posts/2018-09-18-bj-2839.md","raw":"---\ntitle: \"[백준/2839] 설탕 배달\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [2839](https://www.acmicpc.net/problem/2839)\n\n## Review\n\n- 3을 계속 빼다 5의 배수인 경우 5로 전부 나누면 된다.\n\n## Code (JAVA)\n\n```java\nimport java.util.*;\n\npublic class Main {\n\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int input = sc.nextInt();\n    int cnt = 0;\n    int ans = 0;\n\n    // 입력이 5의 배수가 아닌 경우, 0보다 같거나 클 경우\n    while(input % 5 !=0 && input >= 0) {\n      // 3씩 뺌\n      input -=3;\n      cnt++;\n\n    }\n\n    ans = input < 0 ? -1 : cnt + input/5;\n    System.out.println(ans);\n\n  }\n\n}\n```\n","slug":"bj-2839","published":1,"date":"2018-09-17T15:00:00.000Z","updated":"2020-05-05T08:00:03.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afg6000ouv59gyxj4jwg","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yODM5\" title=\"https://www.acmicpc.net/problem/2839\">2839<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>3을 계속 빼다 5의 배수인 경우 5로 전부 나누면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> input = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 입력이 5의 배수가 아닌 경우, 0보다 같거나 클 경우</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(input % <span class=\"number\">5</span> !=<span class=\"number\">0</span> &amp;&amp; input &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 3씩 뺌</span></span><br><span class=\"line\">      input -=<span class=\"number\">3</span>;</span><br><span class=\"line\">      cnt++;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ans = input &lt; <span class=\"number\">0</span> ? -<span class=\"number\">1</span> : cnt + input/<span class=\"number\">5</span>;</span><br><span class=\"line\">    System.out.println(ans);</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yODM5\" title=\"https://www.acmicpc.net/problem/2839\">2839<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>3을 계속 빼다 5의 배수인 경우 5로 전부 나누면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> input = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 입력이 5의 배수가 아닌 경우, 0보다 같거나 클 경우</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(input % <span class=\"number\">5</span> !=<span class=\"number\">0</span> &amp;&amp; input &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 3씩 뺌</span></span><br><span class=\"line\">      input -=<span class=\"number\">3</span>;</span><br><span class=\"line\">      cnt++;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ans = input &lt; <span class=\"number\">0</span> ? -<span class=\"number\">1</span> : cnt + input/<span class=\"number\">5</span>;</span><br><span class=\"line\">    System.out.println(ans);</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/15552] 빠른 A+B","_content":"> Baekjoon Online Judge - [15552](https://www.acmicpc.net/problem/15552)\n\n## Review\n* 입출력 연습하는 문제.\n* BufferedReader를 통해서 입력을 받으면 된다.\n* 출력은 StringBuilder와 BufferedWriter를 각각 사용해서 풀었다.\n\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    StringBuilder sb = new StringBuilder();\n    \n    int n = Integer.parseInt(bf.readLine());\n    int res = 0;\n    \n    for(int i = 0; i < n; i++) {\n      String[] line = bf.readLine().split(\" \");\n      res = Integer.parseInt(line[0]) + Integer.parseInt(line[1]);\n      sb.append(res + \"\\n\");\n    }\n    \n    System.out.println(sb);\n  }\n}\n```\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n    \n    int n = Integer.parseInt(bf.readLine());\n    String res;\n    \n    for(int i = 0; i < n; i++) {\n      String[] line = bf.readLine().split(\" \");\n      res = (Integer.parseInt(line[0]) + Integer.parseInt(line[1])) + \"\\n\";\n      bw.write(res);\n    }\n    bw.flush();\n  }\n}\n```","source":"_posts/2018-09-19-bj-15552.md","raw":"---\ntitle: \"[백준/15552] 빠른 A+B\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [15552](https://www.acmicpc.net/problem/15552)\n\n## Review\n* 입출력 연습하는 문제.\n* BufferedReader를 통해서 입력을 받으면 된다.\n* 출력은 StringBuilder와 BufferedWriter를 각각 사용해서 풀었다.\n\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    StringBuilder sb = new StringBuilder();\n    \n    int n = Integer.parseInt(bf.readLine());\n    int res = 0;\n    \n    for(int i = 0; i < n; i++) {\n      String[] line = bf.readLine().split(\" \");\n      res = Integer.parseInt(line[0]) + Integer.parseInt(line[1]);\n      sb.append(res + \"\\n\");\n    }\n    \n    System.out.println(sb);\n  }\n}\n```\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));\n    \n    int n = Integer.parseInt(bf.readLine());\n    String res;\n    \n    for(int i = 0; i < n; i++) {\n      String[] line = bf.readLine().split(\" \");\n      res = (Integer.parseInt(line[0]) + Integer.parseInt(line[1])) + \"\\n\";\n      bw.write(res);\n    }\n    bw.flush();\n  }\n}\n```","slug":"bj-15552","published":1,"date":"2018-09-18T15:00:00.000Z","updated":"2020-05-05T08:00:03.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afg7000ruv59eawr5138","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xNTU1Mg==\" title=\"https://www.acmicpc.net/problem/15552\">15552<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>입출력 연습하는 문제.</li>\n<li>BufferedReader를 통해서 입력을 받으면 된다.</li>\n<li>출력은 StringBuilder와 BufferedWriter를 각각 사용해서 풀었다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">      String[] line = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      res = Integer.parseInt(line[<span class=\"number\">0</span>]) + Integer.parseInt(line[<span class=\"number\">1</span>]);</span><br><span class=\"line\">      sb.append(res + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(sb);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-JAVA-1\"><a href=\"#Code-JAVA-1\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    BufferedWriter bw = <span class=\"keyword\">new</span> BufferedWriter(<span class=\"keyword\">new</span> OutputStreamWriter(System.out));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    String res;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">      String[] line = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      res = (Integer.parseInt(line[<span class=\"number\">0</span>]) + Integer.parseInt(line[<span class=\"number\">1</span>])) + <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">      bw.write(res);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    bw.flush();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xNTU1Mg==\" title=\"https://www.acmicpc.net/problem/15552\">15552<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>입출력 연습하는 문제.</li>\n<li>BufferedReader를 통해서 입력을 받으면 된다.</li>\n<li>출력은 StringBuilder와 BufferedWriter를 각각 사용해서 풀었다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">      String[] line = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      res = Integer.parseInt(line[<span class=\"number\">0</span>]) + Integer.parseInt(line[<span class=\"number\">1</span>]);</span><br><span class=\"line\">      sb.append(res + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(sb);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-JAVA-1\"><a href=\"#Code-JAVA-1\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    BufferedWriter bw = <span class=\"keyword\">new</span> BufferedWriter(<span class=\"keyword\">new</span> OutputStreamWriter(System.out));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    String res;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">      String[] line = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      res = (Integer.parseInt(line[<span class=\"number\">0</span>]) + Integer.parseInt(line[<span class=\"number\">1</span>])) + <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">      bw.write(res);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    bw.flush();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[JAVA] 프로그래밍 대회에서 사용하는 자바 - 3","_content":"> [백준 강의](https://code.plus/course/3) 정리 - 정렬\n\n* 배열은 Arrays.sort, 콜렉션은 Collections.sort를 사용한다.\n\n# 목차\n1. [오름차순 정렬](#link-1)\n  * [ArrayList를 이용하기](#link-1-1)\n\t* [정수 배열을 이용하기](#link-1-2)\n\n2. [좌표 정렬하기](#link-2)\n  * [Comparable](#link-2-1)\n  * [좌표 정렬하기 문제 풀어보기 - Comparable](#link-2-1-1)\n  * [Comparator](#link-2-2)\n  * [좌표 정렬하기 문제 풀어보기 - Comparator](#link-2-2-1)\n\n3. [좌표 정렬하기 2](#link-3)\n\n## <a id=\"link-1\"></a>1. 오름차순 정렬\n### <a id=\"link-1-1\"></a>1.1 ArrayList를 이용하기\n```java\nimport java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    ArrayList<Integer> a = new ArrayList<Integer>();\n    // n개의 수를 입력받아 저장\n    for (int i=0; i<n; i++) {\n      int temp = sc.nextInt();\n      a.add(temp);\n    }\n\n    // ArrayList에 있는 모든 요소를 오름차순으로 정렬\n    Collections.sort(a);\n\n    //출력\n    for (int x : a) {\n      System.out.println(x);\n    }\n  }\n}\n```\n\n### <a id=\"link-1-2\"></a>1.2 정수 배열을 이용하기\n```java\nimport java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    int[] a = new int[n];\n\n    // 삽입\n    for (int i=0; i<n; i++) {\n      a[i] = sc.nextInt();\n    }\n\n    // 정렬\n    Arrays.sort(a);\n\n    // 출력\n    for (int x : a) {\n      System.out.println(x);\n    }\n  }\n}\n```\n\n## <a id=\"link-2\"></a>2. 좌표 정렬하기\n* (x,y)가 여러 개 있을 때, x가 증가하는 순으로, 같으면 y가 증가하는 순으로 정렬하는 문제.\n* Comparator나 Comparable을 작성해야 한다.\n* Comparable는 compareTo를 구현하는데, 내츄럴한 순서를 정의한다. (예를 들면 문자열은 사진 순)\n* Comparator는 다른 순서로 정렬하고 싶을 때 사용한다. (예를 들면 문자열을 길이 순으로 정렬하고 싶을 때)\n\n### <a id=\"link-2-1\"></a>2.1 Comparable\nCompareTo를 작성할 때는 조심해야 할 것이 세 가지가 있다. CompareTo를 작성할 때는 이 세 가지 조건을 전부 만족해야 한다. 만약 세 가지 중 하나에 위배되는 경우 정렬을 계속하지 않고 프로그램의 실행을 중지하게 된다. (런타임 에러)\n1. sgn(x.compareTo(y)) == -sgn(y.compareTo(x))\n  * 여기서 sgn은 부호를 나타낸다. x를 y를 서로 비교했을 때 부호가 서로 같아야 한다.\n2. x.compareTo(y)>0 && y.compareTo(z)>0) implies x.compareTo(z)>0\n  * x랑 y를 비교했을 때 양수고, y랑 z를 비교했을 때 양수라면 x랑 z를 비교했을 때도 양수가 나와야 한다.\n3. x.compareTo(y)==0 implies that sgn(x.compareTo(z)) == sgn(y.compareTo(z))\n  * x와 y가 같다면, x를 z랑비교한 것, 그리고 y를 z에 비교한 것의 부호가 서로 같아야 한다.\n\n```java\npublic int compareTo(Point that) { \n  if (this.x < that.x) {\n    return -1;\n  } else if (this.x == that.x) {\n    if (this.y < that.y) {  // 작으면\n      return -1;\n    } else if (this.y == that.y) { // 같으면\n      return 0;\n    } else { // 크면\n      return 1;\n    }\n  } else {\n    return 1; \n  }\n}\n```\n\n#### <a id=\"link-2-1-1\"></a>좌표 정렬하기 문제 풀어보기 - Comparable\n\n```java\nimport java.util.*;\nimport java.io.*;\n\n// Comparable implement 하기\nclass Point implements Comparable<Point> {\n  int x, y;\n  Point(int x, int y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  // compareTo 메소드 작성\n  public int compareTo(Point that) {\n    if (this.x < that.x) {\n      return -1;\n    } else if (this.x == that.x) {\n      if (this.y < that.y) {\n        return -1;\n      } else if (this.y == that.y) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else {\n      return 1;\n    }\n  }\n}\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(bf.readLine());\n    Point[] a = new Point[n];\n    for (int i=0; i<n; i++) {\n      String[] temp = bf.readLine().split(\" \");\n      int x = Integer.parseInt(temp[0]);\n      int y = Integer.parseInt(temp[1]);\n\n      // 알아서 정렬이 된다.\n      a[i] = new Point(x, y);\n    }\n    Arrays.sort(a);\n    StringBuilder sb = new StringBuilder();\n    for (Point p : a) {\n      sb.append(p.x + \" \" + p.y + \"\\n\");\n    }\n    System.out.print(sb);\n  }\n}\n```\n\n### <a id=\"link-2-2\"></a>2.2 Comparator\n두 번째 인자로 어떻게 compare할지를 나타내는 함수를 넣어놓으면 된다.\n```java\nArrays.sort(a, new Comparator<Point>() {\n  public int compare(Point p1, Point p2) {\n    return p1.compareTo(p2);\n  }\n});\n```\n\n#### <a id=\"link-2-2-1\"></a>좌표 정렬하기 문제 풀어보기 - Comparator\n```java\nimport java.util.*;\nimport java.io.*;\nclass Point implements Comparable<Point> {\n  int x, y;\n  Point(int x, int y) {\n    this.x = x;\n    this.y = y;\n  }\n  public int compareTo(Point that) {\n    if (this.x < that.x) {\n      return -1;\n    } else if (this.x == that.x) {\n      if (this.y < that.y) {\n        return -1;\n      } else if (this.y == that.y) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else {\n      return 1;\n    }\n  }\n}\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(bf.readLine());\n    Point[] a = new Point[n];\n    for (int i=0; i<n; i++) {\n      String[] temp = bf.readLine().split(\" \");\n      int x = Integer.parseInt(temp[0]);\n      int y = Integer.parseInt(temp[1]);\n      a[i] = new Point(x, y);\n    }\n\n    // sort메소드에 어떻게 정렬할 건지를 두 번째 인자로 넣어주면 된다.\n    Arrays.sort(a, new Comparator<Point>() {\n      public int compare(Point p1, Point p2) {\n        return p1.compareTo(p2);\n      }\n    });\n    StringBuilder sb = new StringBuilder();\n    for (Point p : a) {\n      sb.append(p.x + \" \" + p.y + \"\\n\");\n    }\n    System.out.print(sb);\n  }\n}\n```\n\n## <a id=\"link-3\"></a>3. 좌표 정렬하기 2\n* (x,y)가 여러 개 있을 때, y가 증가하는 순으로, 같으면 x가 증가하는 순으로 정렬하는 문제.\n* Comparator를 사용해야 의미적으로 올바른 구현을 할 수 있다.\n\n```java\nimport java.util.*;\nimport java.io.*;\nclass Point implements Comparable<Point> {\n  int x, y;\n  Point(int x, int y) {\n    this.x = x;\n    this.y = y;\n  }\n  public int compareTo(Point that) {\n    if (this.x < that.x) {\n      return -1;\n    } else if (this.x == that.x) {\n        if (this.y < that.y) {\n          return -1;\n        } else if (this.y == that.y) {\n          return 0;\n        } else {\n          return 1;\n        }\n    } else {\n      return 1;\n    }\n  }\n}\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(bf.readLine());\n    Point[] a = new Point[n];\n    for (int i=0; i<n; i++) {\n      String[] temp = bf.readLine().split(\" \");\n      int x = Integer.parseInt(temp[0]);\n      int y = Integer.parseInt(temp[1]);\n      a[i] = new Point(x, y);\n    }\n    Arrays.sort(a, new Comparator<Point>() {\n      public int compare(Point p1, Point p2) {\n        if (p1.y < p2.y) {\n          return -1;\n        } else if (p1.y == p2.y) {\n          if (p1.x < p2.x) {\n            return -1;\n          } else if (p1.x == p2.x) {\n            return 0;\n          } else {\n            return 1;\n          }\n        } else {\n          return 1;\n        }\n      }\n    });\n    StringBuilder sb = new StringBuilder();\n    for (Point p : a) {\n      sb.append(p.x + \" \" + p.y + \"\\n\");\n    }\n    System.out.print(sb);\n  }\n}\n```","source":"_posts/2018-09-19-java-plang-3.md","raw":"---\ntitle: \"[JAVA] 프로그래밍 대회에서 사용하는 자바 - 3\"\ntags: [java, study]\ncategories: JAVA\n---\n> [백준 강의](https://code.plus/course/3) 정리 - 정렬\n\n* 배열은 Arrays.sort, 콜렉션은 Collections.sort를 사용한다.\n\n# 목차\n1. [오름차순 정렬](#link-1)\n  * [ArrayList를 이용하기](#link-1-1)\n\t* [정수 배열을 이용하기](#link-1-2)\n\n2. [좌표 정렬하기](#link-2)\n  * [Comparable](#link-2-1)\n  * [좌표 정렬하기 문제 풀어보기 - Comparable](#link-2-1-1)\n  * [Comparator](#link-2-2)\n  * [좌표 정렬하기 문제 풀어보기 - Comparator](#link-2-2-1)\n\n3. [좌표 정렬하기 2](#link-3)\n\n## <a id=\"link-1\"></a>1. 오름차순 정렬\n### <a id=\"link-1-1\"></a>1.1 ArrayList를 이용하기\n```java\nimport java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    ArrayList<Integer> a = new ArrayList<Integer>();\n    // n개의 수를 입력받아 저장\n    for (int i=0; i<n; i++) {\n      int temp = sc.nextInt();\n      a.add(temp);\n    }\n\n    // ArrayList에 있는 모든 요소를 오름차순으로 정렬\n    Collections.sort(a);\n\n    //출력\n    for (int x : a) {\n      System.out.println(x);\n    }\n  }\n}\n```\n\n### <a id=\"link-1-2\"></a>1.2 정수 배열을 이용하기\n```java\nimport java.util.*;\npublic class Main {\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    int[] a = new int[n];\n\n    // 삽입\n    for (int i=0; i<n; i++) {\n      a[i] = sc.nextInt();\n    }\n\n    // 정렬\n    Arrays.sort(a);\n\n    // 출력\n    for (int x : a) {\n      System.out.println(x);\n    }\n  }\n}\n```\n\n## <a id=\"link-2\"></a>2. 좌표 정렬하기\n* (x,y)가 여러 개 있을 때, x가 증가하는 순으로, 같으면 y가 증가하는 순으로 정렬하는 문제.\n* Comparator나 Comparable을 작성해야 한다.\n* Comparable는 compareTo를 구현하는데, 내츄럴한 순서를 정의한다. (예를 들면 문자열은 사진 순)\n* Comparator는 다른 순서로 정렬하고 싶을 때 사용한다. (예를 들면 문자열을 길이 순으로 정렬하고 싶을 때)\n\n### <a id=\"link-2-1\"></a>2.1 Comparable\nCompareTo를 작성할 때는 조심해야 할 것이 세 가지가 있다. CompareTo를 작성할 때는 이 세 가지 조건을 전부 만족해야 한다. 만약 세 가지 중 하나에 위배되는 경우 정렬을 계속하지 않고 프로그램의 실행을 중지하게 된다. (런타임 에러)\n1. sgn(x.compareTo(y)) == -sgn(y.compareTo(x))\n  * 여기서 sgn은 부호를 나타낸다. x를 y를 서로 비교했을 때 부호가 서로 같아야 한다.\n2. x.compareTo(y)>0 && y.compareTo(z)>0) implies x.compareTo(z)>0\n  * x랑 y를 비교했을 때 양수고, y랑 z를 비교했을 때 양수라면 x랑 z를 비교했을 때도 양수가 나와야 한다.\n3. x.compareTo(y)==0 implies that sgn(x.compareTo(z)) == sgn(y.compareTo(z))\n  * x와 y가 같다면, x를 z랑비교한 것, 그리고 y를 z에 비교한 것의 부호가 서로 같아야 한다.\n\n```java\npublic int compareTo(Point that) { \n  if (this.x < that.x) {\n    return -1;\n  } else if (this.x == that.x) {\n    if (this.y < that.y) {  // 작으면\n      return -1;\n    } else if (this.y == that.y) { // 같으면\n      return 0;\n    } else { // 크면\n      return 1;\n    }\n  } else {\n    return 1; \n  }\n}\n```\n\n#### <a id=\"link-2-1-1\"></a>좌표 정렬하기 문제 풀어보기 - Comparable\n\n```java\nimport java.util.*;\nimport java.io.*;\n\n// Comparable implement 하기\nclass Point implements Comparable<Point> {\n  int x, y;\n  Point(int x, int y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  // compareTo 메소드 작성\n  public int compareTo(Point that) {\n    if (this.x < that.x) {\n      return -1;\n    } else if (this.x == that.x) {\n      if (this.y < that.y) {\n        return -1;\n      } else if (this.y == that.y) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else {\n      return 1;\n    }\n  }\n}\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(bf.readLine());\n    Point[] a = new Point[n];\n    for (int i=0; i<n; i++) {\n      String[] temp = bf.readLine().split(\" \");\n      int x = Integer.parseInt(temp[0]);\n      int y = Integer.parseInt(temp[1]);\n\n      // 알아서 정렬이 된다.\n      a[i] = new Point(x, y);\n    }\n    Arrays.sort(a);\n    StringBuilder sb = new StringBuilder();\n    for (Point p : a) {\n      sb.append(p.x + \" \" + p.y + \"\\n\");\n    }\n    System.out.print(sb);\n  }\n}\n```\n\n### <a id=\"link-2-2\"></a>2.2 Comparator\n두 번째 인자로 어떻게 compare할지를 나타내는 함수를 넣어놓으면 된다.\n```java\nArrays.sort(a, new Comparator<Point>() {\n  public int compare(Point p1, Point p2) {\n    return p1.compareTo(p2);\n  }\n});\n```\n\n#### <a id=\"link-2-2-1\"></a>좌표 정렬하기 문제 풀어보기 - Comparator\n```java\nimport java.util.*;\nimport java.io.*;\nclass Point implements Comparable<Point> {\n  int x, y;\n  Point(int x, int y) {\n    this.x = x;\n    this.y = y;\n  }\n  public int compareTo(Point that) {\n    if (this.x < that.x) {\n      return -1;\n    } else if (this.x == that.x) {\n      if (this.y < that.y) {\n        return -1;\n      } else if (this.y == that.y) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else {\n      return 1;\n    }\n  }\n}\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(bf.readLine());\n    Point[] a = new Point[n];\n    for (int i=0; i<n; i++) {\n      String[] temp = bf.readLine().split(\" \");\n      int x = Integer.parseInt(temp[0]);\n      int y = Integer.parseInt(temp[1]);\n      a[i] = new Point(x, y);\n    }\n\n    // sort메소드에 어떻게 정렬할 건지를 두 번째 인자로 넣어주면 된다.\n    Arrays.sort(a, new Comparator<Point>() {\n      public int compare(Point p1, Point p2) {\n        return p1.compareTo(p2);\n      }\n    });\n    StringBuilder sb = new StringBuilder();\n    for (Point p : a) {\n      sb.append(p.x + \" \" + p.y + \"\\n\");\n    }\n    System.out.print(sb);\n  }\n}\n```\n\n## <a id=\"link-3\"></a>3. 좌표 정렬하기 2\n* (x,y)가 여러 개 있을 때, y가 증가하는 순으로, 같으면 x가 증가하는 순으로 정렬하는 문제.\n* Comparator를 사용해야 의미적으로 올바른 구현을 할 수 있다.\n\n```java\nimport java.util.*;\nimport java.io.*;\nclass Point implements Comparable<Point> {\n  int x, y;\n  Point(int x, int y) {\n    this.x = x;\n    this.y = y;\n  }\n  public int compareTo(Point that) {\n    if (this.x < that.x) {\n      return -1;\n    } else if (this.x == that.x) {\n        if (this.y < that.y) {\n          return -1;\n        } else if (this.y == that.y) {\n          return 0;\n        } else {\n          return 1;\n        }\n    } else {\n      return 1;\n    }\n  }\n}\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(bf.readLine());\n    Point[] a = new Point[n];\n    for (int i=0; i<n; i++) {\n      String[] temp = bf.readLine().split(\" \");\n      int x = Integer.parseInt(temp[0]);\n      int y = Integer.parseInt(temp[1]);\n      a[i] = new Point(x, y);\n    }\n    Arrays.sort(a, new Comparator<Point>() {\n      public int compare(Point p1, Point p2) {\n        if (p1.y < p2.y) {\n          return -1;\n        } else if (p1.y == p2.y) {\n          if (p1.x < p2.x) {\n            return -1;\n          } else if (p1.x == p2.x) {\n            return 0;\n          } else {\n            return 1;\n          }\n        } else {\n          return 1;\n        }\n      }\n    });\n    StringBuilder sb = new StringBuilder();\n    for (Point p : a) {\n      sb.append(p.x + \" \" + p.y + \"\\n\");\n    }\n    System.out.print(sb);\n  }\n}\n```","slug":"java-plang-3","published":1,"date":"2018-09-18T15:00:00.000Z","updated":"2020-05-05T08:00:03.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afg8000vuv59e5459ku1","content":"<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnBsdXMvY291cnNlLzM=\" title=\"https://code.plus/course/3\">백준 강의<i class=\"fa fa-external-link\"></i></span> 정리 - 정렬</p>\n</blockquote>\n<ul>\n<li>배열은 Arrays.sort, 콜렉션은 Collections.sort를 사용한다.</li>\n</ul>\n<h1 id=\"목차\"><a href=\"#목차\" class=\"headerlink\" title=\"목차\"></a>목차</h1><ol>\n<li><p><a href=\"#link-1\">오름차순 정렬</a></p>\n<ul>\n<li><a href=\"#link-1-1\">ArrayList를 이용하기</a><ul>\n<li><a href=\"#link-1-2\">정수 배열을 이용하기</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><a href=\"#link-2\">좌표 정렬하기</a></p>\n<ul>\n<li><a href=\"#link-2-1\">Comparable</a></li>\n<li><a href=\"#link-2-1-1\">좌표 정렬하기 문제 풀어보기 - Comparable</a></li>\n<li><a href=\"#link-2-2\">Comparator</a></li>\n<li><a href=\"#link-2-2-1\">좌표 정렬하기 문제 풀어보기 - Comparator</a></li>\n</ul>\n</li>\n<li><p><a href=\"#link-3\">좌표 정렬하기 2</a></p>\n</li>\n</ol>\n<h2 id=\"1-오름차순-정렬\"><a href=\"#1-오름차순-정렬\" class=\"headerlink\" title=\"1. 오름차순 정렬\"></a><a id=\"link-1\"></a>1. 오름차순 정렬</h2><h3 id=\"1-1-ArrayList를-이용하기\"><a href=\"#1-1-ArrayList를-이용하기\" class=\"headerlink\" title=\"1.1 ArrayList를 이용하기\"></a><a id=\"link-1-1\"></a>1.1 ArrayList를 이용하기</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    ArrayList&lt;Integer&gt; a = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"comment\">// n개의 수를 입력받아 저장</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> temp = sc.nextInt();</span><br><span class=\"line\">      a.add(temp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ArrayList에 있는 모든 요소를 오름차순으로 정렬</span></span><br><span class=\"line\">    Collections.sort(a);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//출력</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : a) &#123;</span><br><span class=\"line\">      System.out.println(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-정수-배열을-이용하기\"><a href=\"#1-2-정수-배열을-이용하기\" class=\"headerlink\" title=\"1.2 정수 배열을 이용하기\"></a><a id=\"link-1-2\"></a>1.2 정수 배열을 이용하기</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 삽입</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">      a[i] = sc.nextInt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 정렬</span></span><br><span class=\"line\">    Arrays.sort(a);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 출력</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : a) &#123;</span><br><span class=\"line\">      System.out.println(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-좌표-정렬하기\"><a href=\"#2-좌표-정렬하기\" class=\"headerlink\" title=\"2. 좌표 정렬하기\"></a><a id=\"link-2\"></a>2. 좌표 정렬하기</h2><ul>\n<li>(x,y)가 여러 개 있을 때, x가 증가하는 순으로, 같으면 y가 증가하는 순으로 정렬하는 문제.</li>\n<li>Comparator나 Comparable을 작성해야 한다.</li>\n<li>Comparable는 compareTo를 구현하는데, 내츄럴한 순서를 정의한다. (예를 들면 문자열은 사진 순)</li>\n<li>Comparator는 다른 순서로 정렬하고 싶을 때 사용한다. (예를 들면 문자열을 길이 순으로 정렬하고 싶을 때)</li>\n</ul>\n<h3 id=\"2-1-Comparable\"><a href=\"#2-1-Comparable\" class=\"headerlink\" title=\"2.1 Comparable\"></a><a id=\"link-2-1\"></a>2.1 Comparable</h3><p>CompareTo를 작성할 때는 조심해야 할 것이 세 가지가 있다. CompareTo를 작성할 때는 이 세 가지 조건을 전부 만족해야 한다. 만약 세 가지 중 하나에 위배되는 경우 정렬을 계속하지 않고 프로그램의 실행을 중지하게 된다. (런타임 에러)</p>\n<ol>\n<li>sgn(x.compareTo(y)) == -sgn(y.compareTo(x))<ul>\n<li>여기서 sgn은 부호를 나타낸다. x를 y를 서로 비교했을 때 부호가 서로 같아야 한다.</li>\n</ul>\n</li>\n<li>x.compareTo(y)&gt;0 &amp;&amp; y.compareTo(z)&gt;0) implies x.compareTo(z)&gt;0<ul>\n<li>x랑 y를 비교했을 때 양수고, y랑 z를 비교했을 때 양수라면 x랑 z를 비교했을 때도 양수가 나와야 한다.</li>\n</ul>\n</li>\n<li>x.compareTo(y)==0 implies that sgn(x.compareTo(z)) == sgn(y.compareTo(z))<ul>\n<li>x와 y가 같다면, x를 z랑비교한 것, 그리고 y를 z에 비교한 것의 부호가 서로 같아야 한다.</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Point that)</span> </span>&#123; </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x &lt; that.x) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x == that.x) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y &lt; that.y) &#123;  <span class=\"comment\">// 작으면</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y == that.y) &#123; <span class=\"comment\">// 같으면</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// 크면</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>; </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"좌표-정렬하기-문제-풀어보기-Comparable\"><a href=\"#좌표-정렬하기-문제-풀어보기-Comparable\" class=\"headerlink\" title=\"좌표 정렬하기 문제 풀어보기 - Comparable\"></a><a id=\"link-2-1-1\"></a>좌표 정렬하기 문제 풀어보기 - Comparable</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Comparable implement 하기</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Point</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparable</span>&lt;<span class=\"title\">Point</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> x, y;</span><br><span class=\"line\">  Point(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.x = x;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.y = y;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// compareTo 메소드 작성</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Point that)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x &lt; that.x) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x == that.x) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y &lt; that.y) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y == that.y) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    Point[] a = <span class=\"keyword\">new</span> Point[n];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">      String[] temp = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      <span class=\"keyword\">int</span> x = Integer.parseInt(temp[<span class=\"number\">0</span>]);</span><br><span class=\"line\">      <span class=\"keyword\">int</span> y = Integer.parseInt(temp[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 알아서 정렬이 된다.</span></span><br><span class=\"line\">      a[i] = <span class=\"keyword\">new</span> Point(x, y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Arrays.sort(a);</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Point p : a) &#123;</span><br><span class=\"line\">      sb.append(p.x + <span class=\"string\">\" \"</span> + p.y + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.print(sb);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-Comparator\"><a href=\"#2-2-Comparator\" class=\"headerlink\" title=\"2.2 Comparator\"></a><a id=\"link-2-2\"></a>2.2 Comparator</h3><p>두 번째 인자로 어떻게 compare할지를 나타내는 함수를 넣어놓으면 된다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Arrays.sort(a, <span class=\"keyword\">new</span> Comparator&lt;Point&gt;() &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Point p1, Point p2)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p1.compareTo(p2);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"좌표-정렬하기-문제-풀어보기-Comparator\"><a href=\"#좌표-정렬하기-문제-풀어보기-Comparator\" class=\"headerlink\" title=\"좌표 정렬하기 문제 풀어보기 - Comparator\"></a><a id=\"link-2-2-1\"></a>좌표 정렬하기 문제 풀어보기 - Comparator</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Point</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparable</span>&lt;<span class=\"title\">Point</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> x, y;</span><br><span class=\"line\">  Point(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.x = x;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.y = y;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Point that)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x &lt; that.x) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x == that.x) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y &lt; that.y) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y == that.y) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    Point[] a = <span class=\"keyword\">new</span> Point[n];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">      String[] temp = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      <span class=\"keyword\">int</span> x = Integer.parseInt(temp[<span class=\"number\">0</span>]);</span><br><span class=\"line\">      <span class=\"keyword\">int</span> y = Integer.parseInt(temp[<span class=\"number\">1</span>]);</span><br><span class=\"line\">      a[i] = <span class=\"keyword\">new</span> Point(x, y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// sort메소드에 어떻게 정렬할 건지를 두 번째 인자로 넣어주면 된다.</span></span><br><span class=\"line\">    Arrays.sort(a, <span class=\"keyword\">new</span> Comparator&lt;Point&gt;() &#123;</span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Point p1, Point p2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> p1.compareTo(p2);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Point p : a) &#123;</span><br><span class=\"line\">      sb.append(p.x + <span class=\"string\">\" \"</span> + p.y + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.print(sb);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-좌표-정렬하기-2\"><a href=\"#3-좌표-정렬하기-2\" class=\"headerlink\" title=\"3. 좌표 정렬하기 2\"></a><a id=\"link-3\"></a>3. 좌표 정렬하기 2</h2><ul>\n<li>(x,y)가 여러 개 있을 때, y가 증가하는 순으로, 같으면 x가 증가하는 순으로 정렬하는 문제.</li>\n<li>Comparator를 사용해야 의미적으로 올바른 구현을 할 수 있다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Point</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparable</span>&lt;<span class=\"title\">Point</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> x, y;</span><br><span class=\"line\">  Point(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.x = x;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.y = y;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Point that)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x &lt; that.x) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x == that.x) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y &lt; that.y) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y == that.y) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    Point[] a = <span class=\"keyword\">new</span> Point[n];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">      String[] temp = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      <span class=\"keyword\">int</span> x = Integer.parseInt(temp[<span class=\"number\">0</span>]);</span><br><span class=\"line\">      <span class=\"keyword\">int</span> y = Integer.parseInt(temp[<span class=\"number\">1</span>]);</span><br><span class=\"line\">      a[i] = <span class=\"keyword\">new</span> Point(x, y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Arrays.sort(a, <span class=\"keyword\">new</span> Comparator&lt;Point&gt;() &#123;</span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Point p1, Point p2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p1.y &lt; p2.y) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (p1.y == p2.y) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (p1.x &lt; p2.x) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (p1.x == p2.x) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Point p : a) &#123;</span><br><span class=\"line\">      sb.append(p.x + <span class=\"string\">\" \"</span> + p.y + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.print(sb);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnBsdXMvY291cnNlLzM=\" title=\"https://code.plus/course/3\">백준 강의<i class=\"fa fa-external-link\"></i></span> 정리 - 정렬</p>\n</blockquote>\n<ul>\n<li>배열은 Arrays.sort, 콜렉션은 Collections.sort를 사용한다.</li>\n</ul>\n<h1 id=\"목차\"><a href=\"#목차\" class=\"headerlink\" title=\"목차\"></a>목차</h1><ol>\n<li><p><a href=\"#link-1\">오름차순 정렬</a></p>\n<ul>\n<li><a href=\"#link-1-1\">ArrayList를 이용하기</a><ul>\n<li><a href=\"#link-1-2\">정수 배열을 이용하기</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><a href=\"#link-2\">좌표 정렬하기</a></p>\n<ul>\n<li><a href=\"#link-2-1\">Comparable</a></li>\n<li><a href=\"#link-2-1-1\">좌표 정렬하기 문제 풀어보기 - Comparable</a></li>\n<li><a href=\"#link-2-2\">Comparator</a></li>\n<li><a href=\"#link-2-2-1\">좌표 정렬하기 문제 풀어보기 - Comparator</a></li>\n</ul>\n</li>\n<li><p><a href=\"#link-3\">좌표 정렬하기 2</a></p>\n</li>\n</ol>\n<h2 id=\"1-오름차순-정렬\"><a href=\"#1-오름차순-정렬\" class=\"headerlink\" title=\"1. 오름차순 정렬\"></a><a id=\"link-1\"></a>1. 오름차순 정렬</h2><h3 id=\"1-1-ArrayList를-이용하기\"><a href=\"#1-1-ArrayList를-이용하기\" class=\"headerlink\" title=\"1.1 ArrayList를 이용하기\"></a><a id=\"link-1-1\"></a>1.1 ArrayList를 이용하기</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    ArrayList&lt;Integer&gt; a = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"comment\">// n개의 수를 입력받아 저장</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> temp = sc.nextInt();</span><br><span class=\"line\">      a.add(temp);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ArrayList에 있는 모든 요소를 오름차순으로 정렬</span></span><br><span class=\"line\">    Collections.sort(a);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//출력</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : a) &#123;</span><br><span class=\"line\">      System.out.println(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"1-2-정수-배열을-이용하기\"><a href=\"#1-2-정수-배열을-이용하기\" class=\"headerlink\" title=\"1.2 정수 배열을 이용하기\"></a><a id=\"link-1-2\"></a>1.2 정수 배열을 이용하기</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 삽입</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">      a[i] = sc.nextInt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 정렬</span></span><br><span class=\"line\">    Arrays.sort(a);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 출력</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : a) &#123;</span><br><span class=\"line\">      System.out.println(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-좌표-정렬하기\"><a href=\"#2-좌표-정렬하기\" class=\"headerlink\" title=\"2. 좌표 정렬하기\"></a><a id=\"link-2\"></a>2. 좌표 정렬하기</h2><ul>\n<li>(x,y)가 여러 개 있을 때, x가 증가하는 순으로, 같으면 y가 증가하는 순으로 정렬하는 문제.</li>\n<li>Comparator나 Comparable을 작성해야 한다.</li>\n<li>Comparable는 compareTo를 구현하는데, 내츄럴한 순서를 정의한다. (예를 들면 문자열은 사진 순)</li>\n<li>Comparator는 다른 순서로 정렬하고 싶을 때 사용한다. (예를 들면 문자열을 길이 순으로 정렬하고 싶을 때)</li>\n</ul>\n<h3 id=\"2-1-Comparable\"><a href=\"#2-1-Comparable\" class=\"headerlink\" title=\"2.1 Comparable\"></a><a id=\"link-2-1\"></a>2.1 Comparable</h3><p>CompareTo를 작성할 때는 조심해야 할 것이 세 가지가 있다. CompareTo를 작성할 때는 이 세 가지 조건을 전부 만족해야 한다. 만약 세 가지 중 하나에 위배되는 경우 정렬을 계속하지 않고 프로그램의 실행을 중지하게 된다. (런타임 에러)</p>\n<ol>\n<li>sgn(x.compareTo(y)) == -sgn(y.compareTo(x))<ul>\n<li>여기서 sgn은 부호를 나타낸다. x를 y를 서로 비교했을 때 부호가 서로 같아야 한다.</li>\n</ul>\n</li>\n<li>x.compareTo(y)&gt;0 &amp;&amp; y.compareTo(z)&gt;0) implies x.compareTo(z)&gt;0<ul>\n<li>x랑 y를 비교했을 때 양수고, y랑 z를 비교했을 때 양수라면 x랑 z를 비교했을 때도 양수가 나와야 한다.</li>\n</ul>\n</li>\n<li>x.compareTo(y)==0 implies that sgn(x.compareTo(z)) == sgn(y.compareTo(z))<ul>\n<li>x와 y가 같다면, x를 z랑비교한 것, 그리고 y를 z에 비교한 것의 부호가 서로 같아야 한다.</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Point that)</span> </span>&#123; </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x &lt; that.x) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x == that.x) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y &lt; that.y) &#123;  <span class=\"comment\">// 작으면</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y == that.y) &#123; <span class=\"comment\">// 같으면</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// 크면</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>; </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"좌표-정렬하기-문제-풀어보기-Comparable\"><a href=\"#좌표-정렬하기-문제-풀어보기-Comparable\" class=\"headerlink\" title=\"좌표 정렬하기 문제 풀어보기 - Comparable\"></a><a id=\"link-2-1-1\"></a>좌표 정렬하기 문제 풀어보기 - Comparable</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Comparable implement 하기</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Point</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparable</span>&lt;<span class=\"title\">Point</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> x, y;</span><br><span class=\"line\">  Point(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.x = x;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.y = y;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// compareTo 메소드 작성</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Point that)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x &lt; that.x) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x == that.x) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y &lt; that.y) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y == that.y) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    Point[] a = <span class=\"keyword\">new</span> Point[n];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">      String[] temp = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      <span class=\"keyword\">int</span> x = Integer.parseInt(temp[<span class=\"number\">0</span>]);</span><br><span class=\"line\">      <span class=\"keyword\">int</span> y = Integer.parseInt(temp[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 알아서 정렬이 된다.</span></span><br><span class=\"line\">      a[i] = <span class=\"keyword\">new</span> Point(x, y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Arrays.sort(a);</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Point p : a) &#123;</span><br><span class=\"line\">      sb.append(p.x + <span class=\"string\">\" \"</span> + p.y + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.print(sb);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-Comparator\"><a href=\"#2-2-Comparator\" class=\"headerlink\" title=\"2.2 Comparator\"></a><a id=\"link-2-2\"></a>2.2 Comparator</h3><p>두 번째 인자로 어떻게 compare할지를 나타내는 함수를 넣어놓으면 된다.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Arrays.sort(a, <span class=\"keyword\">new</span> Comparator&lt;Point&gt;() &#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Point p1, Point p2)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p1.compareTo(p2);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"좌표-정렬하기-문제-풀어보기-Comparator\"><a href=\"#좌표-정렬하기-문제-풀어보기-Comparator\" class=\"headerlink\" title=\"좌표 정렬하기 문제 풀어보기 - Comparator\"></a><a id=\"link-2-2-1\"></a>좌표 정렬하기 문제 풀어보기 - Comparator</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Point</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparable</span>&lt;<span class=\"title\">Point</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> x, y;</span><br><span class=\"line\">  Point(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.x = x;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.y = y;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Point that)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x &lt; that.x) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x == that.x) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y &lt; that.y) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y == that.y) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    Point[] a = <span class=\"keyword\">new</span> Point[n];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">      String[] temp = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      <span class=\"keyword\">int</span> x = Integer.parseInt(temp[<span class=\"number\">0</span>]);</span><br><span class=\"line\">      <span class=\"keyword\">int</span> y = Integer.parseInt(temp[<span class=\"number\">1</span>]);</span><br><span class=\"line\">      a[i] = <span class=\"keyword\">new</span> Point(x, y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// sort메소드에 어떻게 정렬할 건지를 두 번째 인자로 넣어주면 된다.</span></span><br><span class=\"line\">    Arrays.sort(a, <span class=\"keyword\">new</span> Comparator&lt;Point&gt;() &#123;</span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Point p1, Point p2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> p1.compareTo(p2);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Point p : a) &#123;</span><br><span class=\"line\">      sb.append(p.x + <span class=\"string\">\" \"</span> + p.y + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.print(sb);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-좌표-정렬하기-2\"><a href=\"#3-좌표-정렬하기-2\" class=\"headerlink\" title=\"3. 좌표 정렬하기 2\"></a><a id=\"link-3\"></a>3. 좌표 정렬하기 2</h2><ul>\n<li>(x,y)가 여러 개 있을 때, y가 증가하는 순으로, 같으면 x가 증가하는 순으로 정렬하는 문제.</li>\n<li>Comparator를 사용해야 의미적으로 올바른 구현을 할 수 있다.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Point</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparable</span>&lt;<span class=\"title\">Point</span>&gt; </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> x, y;</span><br><span class=\"line\">  Point(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.x = x;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.y = y;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Point that)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x &lt; that.x) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.x == that.x) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y &lt; that.y) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.y == that.y) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    Point[] a = <span class=\"keyword\">new</span> Point[n];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">      String[] temp = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      <span class=\"keyword\">int</span> x = Integer.parseInt(temp[<span class=\"number\">0</span>]);</span><br><span class=\"line\">      <span class=\"keyword\">int</span> y = Integer.parseInt(temp[<span class=\"number\">1</span>]);</span><br><span class=\"line\">      a[i] = <span class=\"keyword\">new</span> Point(x, y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Arrays.sort(a, <span class=\"keyword\">new</span> Comparator&lt;Point&gt;() &#123;</span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Point p1, Point p2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p1.y &lt; p2.y) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (p1.y == p2.y) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (p1.x &lt; p2.x) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (p1.x == p2.x) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Point p : a) &#123;</span><br><span class=\"line\">      sb.append(p.x + <span class=\"string\">\" \"</span> + p.y + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.print(sb);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/1406] 에디터","_content":"> Baekjoon Online Judge - [1406](https://www.acmicpc.net/problem/1406)\n\n## Review\n* 스택 2개로 풀었다.\n* L: stackA -> stackB로 옮김\n* P: StackA.push()\n* B: StackA.Pop()\n* D: stackB -> StackA로 옮김\n* 요런 식으로 풀면 된다.\n* 아직 자바로 입출력 받고 문자열 처리하는 게 어렵다. 수련이 더 필요함.\n\n## Code (JAVA)\n```java\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n  public static void main(String args[]) throws IOException {\n   \n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    StringBuilder sb = new StringBuilder();\n    \n    Stack<String> stackA = new Stack<String>();\n    Stack<String> stackB = new Stack<String>();\n    \n    String word = bf.readLine();\n    int n = Integer.parseInt(bf.readLine());\n    \n    for(int i = 0; i < word.length(); i++) {\n      stackA.push(word.charAt(i)+\"\");\n    }\n    \n    while (n-->0) {\n      String[] input = bf.readLine().split(\" \");\n      if(input[0].equals(\"L\")) {\n        if(!stackA.empty()) {\n          stackB.push(stackA.pop());\n        }\n      } else if(input[0].equals(\"D\")) {\n        if(!stackB.empty()) {\n          stackA.push(stackB.pop());\n        }\n      } else if(input[0].equals(\"B\")) {\n        if(!stackA.empty()) {\n          stackA.pop();\n        }\n      } else if(input[0].equals(\"P\")) {\n        stackA.push(input[1].charAt(0)+\"\");\n      }\n    }\n    \n    while(!stackB.empty()) {\n      stackA.push(stackB.pop());\n    }\n    \n    while(!stackA.empty()) {\n      sb.append(stackA.pop());\n    }\n    \n    System.out.println(sb.reverse());\n  }\n}\n```","source":"_posts/2018-09-20-bj-1406.md","raw":"---\ntitle: \"[백준/1406] 에디터\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [1406](https://www.acmicpc.net/problem/1406)\n\n## Review\n* 스택 2개로 풀었다.\n* L: stackA -> stackB로 옮김\n* P: StackA.push()\n* B: StackA.Pop()\n* D: stackB -> StackA로 옮김\n* 요런 식으로 풀면 된다.\n* 아직 자바로 입출력 받고 문자열 처리하는 게 어렵다. 수련이 더 필요함.\n\n## Code (JAVA)\n```java\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n  public static void main(String args[]) throws IOException {\n   \n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    StringBuilder sb = new StringBuilder();\n    \n    Stack<String> stackA = new Stack<String>();\n    Stack<String> stackB = new Stack<String>();\n    \n    String word = bf.readLine();\n    int n = Integer.parseInt(bf.readLine());\n    \n    for(int i = 0; i < word.length(); i++) {\n      stackA.push(word.charAt(i)+\"\");\n    }\n    \n    while (n-->0) {\n      String[] input = bf.readLine().split(\" \");\n      if(input[0].equals(\"L\")) {\n        if(!stackA.empty()) {\n          stackB.push(stackA.pop());\n        }\n      } else if(input[0].equals(\"D\")) {\n        if(!stackB.empty()) {\n          stackA.push(stackB.pop());\n        }\n      } else if(input[0].equals(\"B\")) {\n        if(!stackA.empty()) {\n          stackA.pop();\n        }\n      } else if(input[0].equals(\"P\")) {\n        stackA.push(input[1].charAt(0)+\"\");\n      }\n    }\n    \n    while(!stackB.empty()) {\n      stackA.push(stackB.pop());\n    }\n    \n    while(!stackA.empty()) {\n      sb.append(stackA.pop());\n    }\n    \n    System.out.println(sb.reverse());\n  }\n}\n```","slug":"bj-1406","published":1,"date":"2018-09-19T15:00:00.000Z","updated":"2020-05-05T08:00:03.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afg9000zuv5906eabepq","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xNDA2\" title=\"https://www.acmicpc.net/problem/1406\">1406<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>스택 2개로 풀었다.</li>\n<li>L: stackA -&gt; stackB로 옮김</li>\n<li>P: StackA.push()</li>\n<li>B: StackA.Pop()</li>\n<li>D: stackB -&gt; StackA로 옮김</li>\n<li>요런 식으로 풀면 된다.</li>\n<li>아직 자바로 입출력 받고 문자열 처리하는 게 어렵다. 수련이 더 필요함.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    </span><br><span class=\"line\">    Stack&lt;String&gt; stackA = <span class=\"keyword\">new</span> Stack&lt;String&gt;();</span><br><span class=\"line\">    Stack&lt;String&gt; stackB = <span class=\"keyword\">new</span> Stack&lt;String&gt;();</span><br><span class=\"line\">    </span><br><span class=\"line\">    String word = bf.readLine();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; word.length(); i++) &#123;</span><br><span class=\"line\">      stackA.push(word.charAt(i)+<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n--&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      String[] input = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"L\"</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!stackA.empty()) &#123;</span><br><span class=\"line\">          stackB.push(stackA.pop());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"D\"</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!stackB.empty()) &#123;</span><br><span class=\"line\">          stackA.push(stackB.pop());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"B\"</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!stackA.empty()) &#123;</span><br><span class=\"line\">          stackA.pop();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"P\"</span>)) &#123;</span><br><span class=\"line\">        stackA.push(input[<span class=\"number\">1</span>].charAt(<span class=\"number\">0</span>)+<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!stackB.empty()) &#123;</span><br><span class=\"line\">      stackA.push(stackB.pop());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!stackA.empty()) &#123;</span><br><span class=\"line\">      sb.append(stackA.pop());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(sb.reverse());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xNDA2\" title=\"https://www.acmicpc.net/problem/1406\">1406<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>스택 2개로 풀었다.</li>\n<li>L: stackA -&gt; stackB로 옮김</li>\n<li>P: StackA.push()</li>\n<li>B: StackA.Pop()</li>\n<li>D: stackB -&gt; StackA로 옮김</li>\n<li>요런 식으로 풀면 된다.</li>\n<li>아직 자바로 입출력 받고 문자열 처리하는 게 어렵다. 수련이 더 필요함.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">   </span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    </span><br><span class=\"line\">    Stack&lt;String&gt; stackA = <span class=\"keyword\">new</span> Stack&lt;String&gt;();</span><br><span class=\"line\">    Stack&lt;String&gt; stackB = <span class=\"keyword\">new</span> Stack&lt;String&gt;();</span><br><span class=\"line\">    </span><br><span class=\"line\">    String word = bf.readLine();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; word.length(); i++) &#123;</span><br><span class=\"line\">      stackA.push(word.charAt(i)+<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n--&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      String[] input = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"L\"</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!stackA.empty()) &#123;</span><br><span class=\"line\">          stackB.push(stackA.pop());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"D\"</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!stackB.empty()) &#123;</span><br><span class=\"line\">          stackA.push(stackB.pop());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"B\"</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!stackA.empty()) &#123;</span><br><span class=\"line\">          stackA.pop();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"P\"</span>)) &#123;</span><br><span class=\"line\">        stackA.push(input[<span class=\"number\">1</span>].charAt(<span class=\"number\">0</span>)+<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!stackB.empty()) &#123;</span><br><span class=\"line\">      stackA.push(stackB.pop());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!stackA.empty()) &#123;</span><br><span class=\"line\">      sb.append(stackA.pop());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(sb.reverse());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/10845] 큐","_content":"> Baekjoon Online Judge - [10845](https://www.acmicpc.net/problem/10845)\n\n## Review\n* 제출하면서 맞왜틀이 된 문제.\n* 한 시간동안 헤매서 답을 풀었다.\n* 이유는 출력시 자료형이 달라서 그런 거였다. object로 return했는데 자꾸 틀리는 바람에 int로 죄다 바꿔서 출력하니까 성공.\n* 몰랐던 나는 예외처리 잘못한 줄 알고 엉뚱한 거 계속 고치고 있었다. 진짜 에바...\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    \n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    StringBuilder sb = new StringBuilder();\n    \n    int n = Integer.parseInt(bf.readLine());\n    Queue queue = new Queue(n);\n    \n    while(n-->0) {\n      String[] input = bf.readLine().split(\" \");\n      \n      if(input[0].equals(\"push\")) {\n        queue.push(Integer.parseInt(input[1]));\n      } else if(input[0].equals(\"pop\")) {\n        sb.append(queue.pop() + \"\\n\");\n      } else if(input[0].equals(\"size\")) {\n        sb.append(queue.size() + \"\\n\");\n      } else if(input[0].equals(\"empty\")) {\n        sb.append(queue.empty() + \"\\n\");\n      } else if(input[0].equals(\"front\")) {\n        sb.append(queue.front() + \"\\n\");\n      } else if(input[0].equals(\"back\")) {\n        sb.append(queue.back() + \"\\n\");\n      }\n    }\n   System.out.println(sb);\n  }\n  \n  static class Queue {\n    private int[] array;\n    private int rear;\n    private int item;\n    \n    public Queue(int size) {\n      rear = -1;\n      array = new int[size];\n    }\n    \n    public void push(int item) {\n      array[++rear] = item;\n    }\n    \n    public int pop() {\n      if (rear==-1) {\n        return -1;\n      } else {\n        item = array[0];\n        for (int i = 0; i < rear; i++) {\n          array[i] = array[i+1];\n        }\n        rear--;\n        return item;\n      }\n    }\n    \n    public int size() {\n      return rear+1;\n    }\n    \n    public int empty() {\n      if(rear==-1) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    \n    public int front() {\n      if(rear==-1) {\n        return -1;\n      }\n      return array[0];\n    }\n    \n    public int back() {\n      if(rear==-1) {\n        return -1;\n      }\n      return array[rear];\n    }\n  }\n}\n```","source":"_posts/2018-09-21-bj-10845.md","raw":"---\ntitle: \"[백준/10845] 큐\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [10845](https://www.acmicpc.net/problem/10845)\n\n## Review\n* 제출하면서 맞왜틀이 된 문제.\n* 한 시간동안 헤매서 답을 풀었다.\n* 이유는 출력시 자료형이 달라서 그런 거였다. object로 return했는데 자꾸 틀리는 바람에 int로 죄다 바꿔서 출력하니까 성공.\n* 몰랐던 나는 예외처리 잘못한 줄 알고 엉뚱한 거 계속 고치고 있었다. 진짜 에바...\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    \n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    StringBuilder sb = new StringBuilder();\n    \n    int n = Integer.parseInt(bf.readLine());\n    Queue queue = new Queue(n);\n    \n    while(n-->0) {\n      String[] input = bf.readLine().split(\" \");\n      \n      if(input[0].equals(\"push\")) {\n        queue.push(Integer.parseInt(input[1]));\n      } else if(input[0].equals(\"pop\")) {\n        sb.append(queue.pop() + \"\\n\");\n      } else if(input[0].equals(\"size\")) {\n        sb.append(queue.size() + \"\\n\");\n      } else if(input[0].equals(\"empty\")) {\n        sb.append(queue.empty() + \"\\n\");\n      } else if(input[0].equals(\"front\")) {\n        sb.append(queue.front() + \"\\n\");\n      } else if(input[0].equals(\"back\")) {\n        sb.append(queue.back() + \"\\n\");\n      }\n    }\n   System.out.println(sb);\n  }\n  \n  static class Queue {\n    private int[] array;\n    private int rear;\n    private int item;\n    \n    public Queue(int size) {\n      rear = -1;\n      array = new int[size];\n    }\n    \n    public void push(int item) {\n      array[++rear] = item;\n    }\n    \n    public int pop() {\n      if (rear==-1) {\n        return -1;\n      } else {\n        item = array[0];\n        for (int i = 0; i < rear; i++) {\n          array[i] = array[i+1];\n        }\n        rear--;\n        return item;\n      }\n    }\n    \n    public int size() {\n      return rear+1;\n    }\n    \n    public int empty() {\n      if(rear==-1) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    \n    public int front() {\n      if(rear==-1) {\n        return -1;\n      }\n      return array[0];\n    }\n    \n    public int back() {\n      if(rear==-1) {\n        return -1;\n      }\n      return array[rear];\n    }\n  }\n}\n```","slug":"bj-10845","published":1,"date":"2018-09-20T15:00:00.000Z","updated":"2020-05-05T08:00:03.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afga0013uv590wg04z9k","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDg0NQ==\" title=\"https://www.acmicpc.net/problem/10845\">10845<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>제출하면서 맞왜틀이 된 문제.</li>\n<li>한 시간동안 헤매서 답을 풀었다.</li>\n<li>이유는 출력시 자료형이 달라서 그런 거였다. object로 return했는데 자꾸 틀리는 바람에 int로 죄다 바꿔서 출력하니까 성공.</li>\n<li>몰랐던 나는 예외처리 잘못한 줄 알고 엉뚱한 거 계속 고치고 있었다. 진짜 에바…</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    Queue queue = <span class=\"keyword\">new</span> Queue(n);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      String[] input = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"push\"</span>)) &#123;</span><br><span class=\"line\">        queue.push(Integer.parseInt(input[<span class=\"number\">1</span>]));</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"pop\"</span>)) &#123;</span><br><span class=\"line\">        sb.append(queue.pop() + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"size\"</span>)) &#123;</span><br><span class=\"line\">        sb.append(queue.size() + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"empty\"</span>)) &#123;</span><br><span class=\"line\">        sb.append(queue.empty() + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"front\"</span>)) &#123;</span><br><span class=\"line\">        sb.append(queue.front() + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"back\"</span>)) &#123;</span><br><span class=\"line\">        sb.append(queue.back() + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   System.out.println(sb);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Queue</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] array;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> rear;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> item;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Queue</span><span class=\"params\">(<span class=\"keyword\">int</span> size)</span> </span>&#123;</span><br><span class=\"line\">      rear = -<span class=\"number\">1</span>;</span><br><span class=\"line\">      array = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[size];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(<span class=\"keyword\">int</span> item)</span> </span>&#123;</span><br><span class=\"line\">      array[++rear] = item;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">pop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        item = array[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; rear; i++) &#123;</span><br><span class=\"line\">          array[i] = array[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        rear--;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> item;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> rear+<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">empty</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">front</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> array[<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">back</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> array[rear];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDg0NQ==\" title=\"https://www.acmicpc.net/problem/10845\">10845<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>제출하면서 맞왜틀이 된 문제.</li>\n<li>한 시간동안 헤매서 답을 풀었다.</li>\n<li>이유는 출력시 자료형이 달라서 그런 거였다. object로 return했는데 자꾸 틀리는 바람에 int로 죄다 바꿔서 출력하니까 성공.</li>\n<li>몰랐던 나는 예외처리 잘못한 줄 알고 엉뚱한 거 계속 고치고 있었다. 진짜 에바…</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    Queue queue = <span class=\"keyword\">new</span> Queue(n);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      String[] input = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"push\"</span>)) &#123;</span><br><span class=\"line\">        queue.push(Integer.parseInt(input[<span class=\"number\">1</span>]));</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"pop\"</span>)) &#123;</span><br><span class=\"line\">        sb.append(queue.pop() + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"size\"</span>)) &#123;</span><br><span class=\"line\">        sb.append(queue.size() + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"empty\"</span>)) &#123;</span><br><span class=\"line\">        sb.append(queue.empty() + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"front\"</span>)) &#123;</span><br><span class=\"line\">        sb.append(queue.front() + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(input[<span class=\"number\">0</span>].equals(<span class=\"string\">\"back\"</span>)) &#123;</span><br><span class=\"line\">        sb.append(queue.back() + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   System.out.println(sb);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Queue</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] array;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> rear;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> item;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Queue</span><span class=\"params\">(<span class=\"keyword\">int</span> size)</span> </span>&#123;</span><br><span class=\"line\">      rear = -<span class=\"number\">1</span>;</span><br><span class=\"line\">      array = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[size];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(<span class=\"keyword\">int</span> item)</span> </span>&#123;</span><br><span class=\"line\">      array[++rear] = item;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">pop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        item = array[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; rear; i++) &#123;</span><br><span class=\"line\">          array[i] = array[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        rear--;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> item;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> rear+<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">empty</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">front</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> array[<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">back</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> array[rear];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/1158] 조세퍼스 문제","_content":"> Baekjoon Online Judge - [1158](https://www.acmicpc.net/problem/1158)\n\n## Review\n* 일단 큐 하나 만들고, m-1만큼 dequeue한 걸 다시 enqueue한 다음, 제일 앞에 있는 데이터를 dequeue하면 되는 문제.\n* 또 출력 형식 때문에 삽질함... ㅜ ㅜ\n\n## Code (JAVA)\n```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    StringBuilder sb = new StringBuilder();\n    \n    String[] line = bf.readLine().split(\" \");\n    \n    int n = Integer.parseInt(line[0]);\n    int m = Integer.parseInt(line[1]);\n    \n    Queue<Integer> queue = new LinkedList<Integer>();\n    \n    for (int i = 1; i<=n; i++) {\n      queue.offer(i);\n    }\n    while(n-->0) {\n      for(int i = 0; i < (m-1); i++) {\n        queue.offer(queue.poll());\n      }\n      sb.append(queue.poll() + \", \");\n      \n    }\n    System.out.print(\"<\" + sb.toString().substring(0,sb.length()-2) + \">\");\n  }\n}\n```","source":"_posts/2018-09-21-bj-1158.md","raw":"---\ntitle: \"[백준/1158] 조세퍼스 문제\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [1158](https://www.acmicpc.net/problem/1158)\n\n## Review\n* 일단 큐 하나 만들고, m-1만큼 dequeue한 걸 다시 enqueue한 다음, 제일 앞에 있는 데이터를 dequeue하면 되는 문제.\n* 또 출력 형식 때문에 삽질함... ㅜ ㅜ\n\n## Code (JAVA)\n```java\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n  public static void main(String args[]) throws IOException {\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    StringBuilder sb = new StringBuilder();\n    \n    String[] line = bf.readLine().split(\" \");\n    \n    int n = Integer.parseInt(line[0]);\n    int m = Integer.parseInt(line[1]);\n    \n    Queue<Integer> queue = new LinkedList<Integer>();\n    \n    for (int i = 1; i<=n; i++) {\n      queue.offer(i);\n    }\n    while(n-->0) {\n      for(int i = 0; i < (m-1); i++) {\n        queue.offer(queue.poll());\n      }\n      sb.append(queue.poll() + \", \");\n      \n    }\n    System.out.print(\"<\" + sb.toString().substring(0,sb.length()-2) + \">\");\n  }\n}\n```","slug":"bj-1158","published":1,"date":"2018-09-20T15:00:00.000Z","updated":"2020-05-05T08:00:03.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgb0016uv59dkr9h3se","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTU4\" title=\"https://www.acmicpc.net/problem/1158\">1158<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>일단 큐 하나 만들고, m-1만큼 dequeue한 걸 다시 enqueue한 다음, 제일 앞에 있는 데이터를 dequeue하면 되는 문제.</li>\n<li>또 출력 형식 때문에 삽질함… ㅜ ㅜ</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    </span><br><span class=\"line\">    String[] line = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(line[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m = Integer.parseInt(line[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    Queue&lt;Integer&gt; queue = <span class=\"keyword\">new</span> LinkedList&lt;Integer&gt;();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i&lt;=n; i++) &#123;</span><br><span class=\"line\">      queue.offer(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; (m-<span class=\"number\">1</span>); i++) &#123;</span><br><span class=\"line\">        queue.offer(queue.poll());</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      sb.append(queue.poll() + <span class=\"string\">\", \"</span>);</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.print(<span class=\"string\">\"&lt;\"</span> + sb.toString().substring(<span class=\"number\">0</span>,sb.length()-<span class=\"number\">2</span>) + <span class=\"string\">\"&gt;\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTU4\" title=\"https://www.acmicpc.net/problem/1158\">1158<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>일단 큐 하나 만들고, m-1만큼 dequeue한 걸 다시 enqueue한 다음, 제일 앞에 있는 데이터를 dequeue하면 되는 문제.</li>\n<li>또 출력 형식 때문에 삽질함… ㅜ ㅜ</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">    </span><br><span class=\"line\">    String[] line = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(line[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m = Integer.parseInt(line[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    Queue&lt;Integer&gt; queue = <span class=\"keyword\">new</span> LinkedList&lt;Integer&gt;();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i&lt;=n; i++) &#123;</span><br><span class=\"line\">      queue.offer(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--&gt;<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; (m-<span class=\"number\">1</span>); i++) &#123;</span><br><span class=\"line\">        queue.offer(queue.poll());</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      sb.append(queue.poll() + <span class=\"string\">\", \"</span>);</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.print(<span class=\"string\">\"&lt;\"</span> + sb.toString().substring(<span class=\"number\">0</span>,sb.length()-<span class=\"number\">2</span>) + <span class=\"string\">\"&gt;\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[JAVA] 프로그래밍 대회에서 사용하는 자바 - 4","_content":"> [백준 강의](https://code.plus/course/3) 정리 - BigInteger\n\n# 목차\n1. [1. BigInteger](#link-1)\n2. [2. 기본 사용 방법](#link-2)\n3. [3. 여러가지 사칙 연산](#link-3)\n4. [4. 입력 받기](#link-4)\n5. [5. 같은 값인지 판단하기](#link-5)\n6. [6. 예시1 - 큰 수 A+B](#link-6)\n7. [7. 예시1 - a^b](#link-7)\n\n## <a id=\"link-1\"></a>1. BigInteger\n\n* 큰 정수를 나타낼 때 사용하는 클래스\n* `java.math.*;` 에 들어있음.\n* 자바에서만 존재하는 자료구조이다.\n\n## <a id=\"link-2\"></a>2. 기본 사용 방법\n\n```java\nBigInteger a = new BigInteger(\"10000\");\nBigInteger b = new BigInteger(\"1000\");\n// a+b와 같은 연산이 되지않기 때문에 덧셈은 아래와 같이 처리\nBigInteger c = a.add(b);\nSystem.out.println(\"a = \" + a);\nSystem.out.println(\"b = \" + b);\nSystem.out.println(\"c = \" + c);\n```\n\n## <a id=\"link-3\"></a>3. 여러가지 사칙 연산\n\n```java\nSystem.out.println(\"a+b = \" + a.add(b)); //덧셈\nSystem.out.println(\"a-b = \" + a.subtract(b)); //뺄셈\nSystem.out.println(\"a*b = \" + a.multiply(b)); //곱하기\nSystem.out.println(\"a/b = \" + a.divide(b)); //나누기\nSystem.out.println(\"a%b = \" + a.remainder(b)); //나머지\nSystem.out.println(\"gcd(a,b) = \" + a.gcd(b)); //최대공약수\nSystem.out.println(\"-a = \" + a.negate()); //부호 변경\nSystem.out.println(\"a^10 = \" + a.pow(10)); //제곱\n\n// 0, 1, 10은 따로 만들 필요 없이 바로 사용할 수 있음\nSystem.out.println(\"ZERO = \" + BigInteger.ZERO);\nSystem.out.println(\"ONE = \" + BigInteger.ONE);\nSystem.out.println(\"TEN = \" + BigInteger.TEN);\n```\n\n## <a id=\"link-4\"></a>4. 입력 받기\n\n```java\nBigInteger a = sc.nextBigInteger();\nBigInteger b = sc.nextBigInteger();\nint c = a.compareTo(b);\nif (c < 0) { // 음수\n  System.out.println(\"<\");\n} else if (c == 0) { // 0\n  System.out.println(\"==\");\n} else { // 크다\n  System.out.println(\">\");\n}\nSystem.out.println(\"compareTo = \" + c);\n```\n\n## <a id=\"link-5\"></a>5. 같은 값인지 판단하기\n\n```java\nboolean e = a.equals(b);\nif (e) {\n  System.out.println(\"==\");\n} else {\n  System.out.println(\"!=\");\n}\nSystem.out.println(\"equals = \" + e);\n```\n\n## <a id=\"link-6\"></a>6. 예시1 - [큰 수 A+B](https://www.acmicpc.net/problem/10757)\n\n```java\nimport java.math.*;\nimport java.util.*;\npublic class Main{\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    BigInteger a, b;\n    a = sc.nextBigInteger();\n    b = sc.nextBigInteger();\n    System.out.println(a.add(b));\n  }\n}\n```\n\n## <a id=\"link-7\"></a>7. 예시2 - [a^b](https://www.acmicpc.net/problem/10827)\n* 여기서 a는 실수가 된다.\n* 실수 a와 정수 b가 주어졌을 때 어떻게 정확하게 할까?\n* BigDecimal을 사용하면 된다.\n* toString()을 사용하면 정확한 값을 출력할 수 없다. toPlainString()을 사용하자.\n\n```java\nimport java.math.*;\nimport java.util.*;\npublic class Main{\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    BigDecimal a = sc.nextBigDecimal();\n    int b = sc.nextInt();\n    BigDecimal c = a.pow(b);\n    System.out.println(c.toPlainString());\n  }\n}\n```","source":"_posts/2018-09-21-java-plang-4.md","raw":"---\ntitle: \"[JAVA] 프로그래밍 대회에서 사용하는 자바 - 4\"\ntags: [java, study]\ncategories: JAVA\n---\n> [백준 강의](https://code.plus/course/3) 정리 - BigInteger\n\n# 목차\n1. [1. BigInteger](#link-1)\n2. [2. 기본 사용 방법](#link-2)\n3. [3. 여러가지 사칙 연산](#link-3)\n4. [4. 입력 받기](#link-4)\n5. [5. 같은 값인지 판단하기](#link-5)\n6. [6. 예시1 - 큰 수 A+B](#link-6)\n7. [7. 예시1 - a^b](#link-7)\n\n## <a id=\"link-1\"></a>1. BigInteger\n\n* 큰 정수를 나타낼 때 사용하는 클래스\n* `java.math.*;` 에 들어있음.\n* 자바에서만 존재하는 자료구조이다.\n\n## <a id=\"link-2\"></a>2. 기본 사용 방법\n\n```java\nBigInteger a = new BigInteger(\"10000\");\nBigInteger b = new BigInteger(\"1000\");\n// a+b와 같은 연산이 되지않기 때문에 덧셈은 아래와 같이 처리\nBigInteger c = a.add(b);\nSystem.out.println(\"a = \" + a);\nSystem.out.println(\"b = \" + b);\nSystem.out.println(\"c = \" + c);\n```\n\n## <a id=\"link-3\"></a>3. 여러가지 사칙 연산\n\n```java\nSystem.out.println(\"a+b = \" + a.add(b)); //덧셈\nSystem.out.println(\"a-b = \" + a.subtract(b)); //뺄셈\nSystem.out.println(\"a*b = \" + a.multiply(b)); //곱하기\nSystem.out.println(\"a/b = \" + a.divide(b)); //나누기\nSystem.out.println(\"a%b = \" + a.remainder(b)); //나머지\nSystem.out.println(\"gcd(a,b) = \" + a.gcd(b)); //최대공약수\nSystem.out.println(\"-a = \" + a.negate()); //부호 변경\nSystem.out.println(\"a^10 = \" + a.pow(10)); //제곱\n\n// 0, 1, 10은 따로 만들 필요 없이 바로 사용할 수 있음\nSystem.out.println(\"ZERO = \" + BigInteger.ZERO);\nSystem.out.println(\"ONE = \" + BigInteger.ONE);\nSystem.out.println(\"TEN = \" + BigInteger.TEN);\n```\n\n## <a id=\"link-4\"></a>4. 입력 받기\n\n```java\nBigInteger a = sc.nextBigInteger();\nBigInteger b = sc.nextBigInteger();\nint c = a.compareTo(b);\nif (c < 0) { // 음수\n  System.out.println(\"<\");\n} else if (c == 0) { // 0\n  System.out.println(\"==\");\n} else { // 크다\n  System.out.println(\">\");\n}\nSystem.out.println(\"compareTo = \" + c);\n```\n\n## <a id=\"link-5\"></a>5. 같은 값인지 판단하기\n\n```java\nboolean e = a.equals(b);\nif (e) {\n  System.out.println(\"==\");\n} else {\n  System.out.println(\"!=\");\n}\nSystem.out.println(\"equals = \" + e);\n```\n\n## <a id=\"link-6\"></a>6. 예시1 - [큰 수 A+B](https://www.acmicpc.net/problem/10757)\n\n```java\nimport java.math.*;\nimport java.util.*;\npublic class Main{\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    BigInteger a, b;\n    a = sc.nextBigInteger();\n    b = sc.nextBigInteger();\n    System.out.println(a.add(b));\n  }\n}\n```\n\n## <a id=\"link-7\"></a>7. 예시2 - [a^b](https://www.acmicpc.net/problem/10827)\n* 여기서 a는 실수가 된다.\n* 실수 a와 정수 b가 주어졌을 때 어떻게 정확하게 할까?\n* BigDecimal을 사용하면 된다.\n* toString()을 사용하면 정확한 값을 출력할 수 없다. toPlainString()을 사용하자.\n\n```java\nimport java.math.*;\nimport java.util.*;\npublic class Main{\n  public static void main(String args[]){\n    Scanner sc = new Scanner(System.in);\n    BigDecimal a = sc.nextBigDecimal();\n    int b = sc.nextInt();\n    BigDecimal c = a.pow(b);\n    System.out.println(c.toPlainString());\n  }\n}\n```","slug":"java-plang-4","published":1,"date":"2018-09-20T15:00:00.000Z","updated":"2020-05-05T08:00:03.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgc001auv59bxpn0qe4","content":"<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnBsdXMvY291cnNlLzM=\" title=\"https://code.plus/course/3\">백준 강의<i class=\"fa fa-external-link\"></i></span> 정리 - BigInteger</p>\n</blockquote>\n<h1 id=\"목차\"><a href=\"#목차\" class=\"headerlink\" title=\"목차\"></a>목차</h1><ol>\n<li><a href=\"#link-1\">1. BigInteger</a></li>\n<li><a href=\"#link-2\">2. 기본 사용 방법</a></li>\n<li><a href=\"#link-3\">3. 여러가지 사칙 연산</a></li>\n<li><a href=\"#link-4\">4. 입력 받기</a></li>\n<li><a href=\"#link-5\">5. 같은 값인지 판단하기</a></li>\n<li><a href=\"#link-6\">6. 예시1 - 큰 수 A+B</a></li>\n<li><a href=\"#link-7\">7. 예시1 - a^b</a></li>\n</ol>\n<h2 id=\"1-BigInteger\"><a href=\"#1-BigInteger\" class=\"headerlink\" title=\"1. BigInteger\"></a><a id=\"link-1\"></a>1. BigInteger</h2><ul>\n<li>큰 정수를 나타낼 때 사용하는 클래스</li>\n<li><code>java.math.*;</code> 에 들어있음.</li>\n<li>자바에서만 존재하는 자료구조이다.</li>\n</ul>\n<h2 id=\"2-기본-사용-방법\"><a href=\"#2-기본-사용-방법\" class=\"headerlink\" title=\"2. 기본 사용 방법\"></a><a id=\"link-2\"></a>2. 기본 사용 방법</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BigInteger a = <span class=\"keyword\">new</span> BigInteger(<span class=\"string\">\"10000\"</span>);</span><br><span class=\"line\">BigInteger b = <span class=\"keyword\">new</span> BigInteger(<span class=\"string\">\"1000\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// a+b와 같은 연산이 되지않기 때문에 덧셈은 아래와 같이 처리</span></span><br><span class=\"line\">BigInteger c = a.add(b);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"a = \"</span> + a);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"b = \"</span> + b);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"c = \"</span> + c);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-여러가지-사칙-연산\"><a href=\"#3-여러가지-사칙-연산\" class=\"headerlink\" title=\"3. 여러가지 사칙 연산\"></a><a id=\"link-3\"></a>3. 여러가지 사칙 연산</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(<span class=\"string\">\"a+b = \"</span> + a.add(b)); <span class=\"comment\">//덧셈</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"a-b = \"</span> + a.subtract(b)); <span class=\"comment\">//뺄셈</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"a*b = \"</span> + a.multiply(b)); <span class=\"comment\">//곱하기</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"a/b = \"</span> + a.divide(b)); <span class=\"comment\">//나누기</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"a%b = \"</span> + a.remainder(b)); <span class=\"comment\">//나머지</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"gcd(a,b) = \"</span> + a.gcd(b)); <span class=\"comment\">//최대공약수</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"-a = \"</span> + a.negate()); <span class=\"comment\">//부호 변경</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"a^10 = \"</span> + a.pow(<span class=\"number\">10</span>)); <span class=\"comment\">//제곱</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 0, 1, 10은 따로 만들 필요 없이 바로 사용할 수 있음</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"ZERO = \"</span> + BigInteger.ZERO);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"ONE = \"</span> + BigInteger.ONE);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"TEN = \"</span> + BigInteger.TEN);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-입력-받기\"><a href=\"#4-입력-받기\" class=\"headerlink\" title=\"4. 입력 받기\"></a><a id=\"link-4\"></a>4. 입력 받기</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BigInteger a = sc.nextBigInteger();</span><br><span class=\"line\">BigInteger b = sc.nextBigInteger();</span><br><span class=\"line\"><span class=\"keyword\">int</span> c = a.compareTo(b);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (c &lt; <span class=\"number\">0</span>) &#123; <span class=\"comment\">// 음수</span></span><br><span class=\"line\">  System.out.println(<span class=\"string\">\"&lt;\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (c == <span class=\"number\">0</span>) &#123; <span class=\"comment\">// 0</span></span><br><span class=\"line\">  System.out.println(<span class=\"string\">\"==\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// 크다</span></span><br><span class=\"line\">  System.out.println(<span class=\"string\">\"&gt;\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"compareTo = \"</span> + c);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-같은-값인지-판단하기\"><a href=\"#5-같은-값인지-판단하기\" class=\"headerlink\" title=\"5. 같은 값인지 판단하기\"></a><a id=\"link-5\"></a>5. 같은 값인지 판단하기</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">boolean</span> e = a.equals(b);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (e) &#123;</span><br><span class=\"line\">  System.out.println(<span class=\"string\">\"==\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  System.out.println(<span class=\"string\">\"!=\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"equals = \"</span> + e);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-예시1-큰-수-A-B\"><a href=\"#6-예시1-큰-수-A-B\" class=\"headerlink\" title=\"6. 예시1 - 큰 수 A+B\"></a><a id=\"link-6\"></a>6. 예시1 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDc1Nw==\" title=\"https://www.acmicpc.net/problem/10757\">큰 수 A+B<i class=\"fa fa-external-link\"></i></span></h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    BigInteger a, b;</span><br><span class=\"line\">    a = sc.nextBigInteger();</span><br><span class=\"line\">    b = sc.nextBigInteger();</span><br><span class=\"line\">    System.out.println(a.add(b));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-예시2-a-b\"><a href=\"#7-예시2-a-b\" class=\"headerlink\" title=\"7. 예시2 - a^b\"></a><a id=\"link-7\"></a>7. 예시2 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDgyNw==\" title=\"https://www.acmicpc.net/problem/10827\">a^b<i class=\"fa fa-external-link\"></i></span></h2><ul>\n<li>여기서 a는 실수가 된다.</li>\n<li>실수 a와 정수 b가 주어졌을 때 어떻게 정확하게 할까?</li>\n<li>BigDecimal을 사용하면 된다.</li>\n<li>toString()을 사용하면 정확한 값을 출력할 수 없다. toPlainString()을 사용하자.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    BigDecimal a = sc.nextBigDecimal();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> b = sc.nextInt();</span><br><span class=\"line\">    BigDecimal c = a.pow(b);</span><br><span class=\"line\">    System.out.println(c.toPlainString());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnBsdXMvY291cnNlLzM=\" title=\"https://code.plus/course/3\">백준 강의<i class=\"fa fa-external-link\"></i></span> 정리 - BigInteger</p>\n</blockquote>\n<h1 id=\"목차\"><a href=\"#목차\" class=\"headerlink\" title=\"목차\"></a>목차</h1><ol>\n<li><a href=\"#link-1\">1. BigInteger</a></li>\n<li><a href=\"#link-2\">2. 기본 사용 방법</a></li>\n<li><a href=\"#link-3\">3. 여러가지 사칙 연산</a></li>\n<li><a href=\"#link-4\">4. 입력 받기</a></li>\n<li><a href=\"#link-5\">5. 같은 값인지 판단하기</a></li>\n<li><a href=\"#link-6\">6. 예시1 - 큰 수 A+B</a></li>\n<li><a href=\"#link-7\">7. 예시1 - a^b</a></li>\n</ol>\n<h2 id=\"1-BigInteger\"><a href=\"#1-BigInteger\" class=\"headerlink\" title=\"1. BigInteger\"></a><a id=\"link-1\"></a>1. BigInteger</h2><ul>\n<li>큰 정수를 나타낼 때 사용하는 클래스</li>\n<li><code>java.math.*;</code> 에 들어있음.</li>\n<li>자바에서만 존재하는 자료구조이다.</li>\n</ul>\n<h2 id=\"2-기본-사용-방법\"><a href=\"#2-기본-사용-방법\" class=\"headerlink\" title=\"2. 기본 사용 방법\"></a><a id=\"link-2\"></a>2. 기본 사용 방법</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BigInteger a = <span class=\"keyword\">new</span> BigInteger(<span class=\"string\">\"10000\"</span>);</span><br><span class=\"line\">BigInteger b = <span class=\"keyword\">new</span> BigInteger(<span class=\"string\">\"1000\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// a+b와 같은 연산이 되지않기 때문에 덧셈은 아래와 같이 처리</span></span><br><span class=\"line\">BigInteger c = a.add(b);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"a = \"</span> + a);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"b = \"</span> + b);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"c = \"</span> + c);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-여러가지-사칙-연산\"><a href=\"#3-여러가지-사칙-연산\" class=\"headerlink\" title=\"3. 여러가지 사칙 연산\"></a><a id=\"link-3\"></a>3. 여러가지 사칙 연산</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(<span class=\"string\">\"a+b = \"</span> + a.add(b)); <span class=\"comment\">//덧셈</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"a-b = \"</span> + a.subtract(b)); <span class=\"comment\">//뺄셈</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"a*b = \"</span> + a.multiply(b)); <span class=\"comment\">//곱하기</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"a/b = \"</span> + a.divide(b)); <span class=\"comment\">//나누기</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"a%b = \"</span> + a.remainder(b)); <span class=\"comment\">//나머지</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"gcd(a,b) = \"</span> + a.gcd(b)); <span class=\"comment\">//최대공약수</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"-a = \"</span> + a.negate()); <span class=\"comment\">//부호 변경</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"a^10 = \"</span> + a.pow(<span class=\"number\">10</span>)); <span class=\"comment\">//제곱</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 0, 1, 10은 따로 만들 필요 없이 바로 사용할 수 있음</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"ZERO = \"</span> + BigInteger.ZERO);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"ONE = \"</span> + BigInteger.ONE);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"TEN = \"</span> + BigInteger.TEN);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-입력-받기\"><a href=\"#4-입력-받기\" class=\"headerlink\" title=\"4. 입력 받기\"></a><a id=\"link-4\"></a>4. 입력 받기</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BigInteger a = sc.nextBigInteger();</span><br><span class=\"line\">BigInteger b = sc.nextBigInteger();</span><br><span class=\"line\"><span class=\"keyword\">int</span> c = a.compareTo(b);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (c &lt; <span class=\"number\">0</span>) &#123; <span class=\"comment\">// 음수</span></span><br><span class=\"line\">  System.out.println(<span class=\"string\">\"&lt;\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (c == <span class=\"number\">0</span>) &#123; <span class=\"comment\">// 0</span></span><br><span class=\"line\">  System.out.println(<span class=\"string\">\"==\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// 크다</span></span><br><span class=\"line\">  System.out.println(<span class=\"string\">\"&gt;\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"compareTo = \"</span> + c);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-같은-값인지-판단하기\"><a href=\"#5-같은-값인지-판단하기\" class=\"headerlink\" title=\"5. 같은 값인지 판단하기\"></a><a id=\"link-5\"></a>5. 같은 값인지 판단하기</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">boolean</span> e = a.equals(b);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (e) &#123;</span><br><span class=\"line\">  System.out.println(<span class=\"string\">\"==\"</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  System.out.println(<span class=\"string\">\"!=\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"equals = \"</span> + e);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-예시1-큰-수-A-B\"><a href=\"#6-예시1-큰-수-A-B\" class=\"headerlink\" title=\"6. 예시1 - 큰 수 A+B\"></a><a id=\"link-6\"></a>6. 예시1 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDc1Nw==\" title=\"https://www.acmicpc.net/problem/10757\">큰 수 A+B<i class=\"fa fa-external-link\"></i></span></h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    BigInteger a, b;</span><br><span class=\"line\">    a = sc.nextBigInteger();</span><br><span class=\"line\">    b = sc.nextBigInteger();</span><br><span class=\"line\">    System.out.println(a.add(b));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-예시2-a-b\"><a href=\"#7-예시2-a-b\" class=\"headerlink\" title=\"7. 예시2 - a^b\"></a><a id=\"link-7\"></a>7. 예시2 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDgyNw==\" title=\"https://www.acmicpc.net/problem/10827\">a^b<i class=\"fa fa-external-link\"></i></span></h2><ul>\n<li>여기서 a는 실수가 된다.</li>\n<li>실수 a와 정수 b가 주어졌을 때 어떻게 정확하게 할까?</li>\n<li>BigDecimal을 사용하면 된다.</li>\n<li>toString()을 사용하면 정확한 값을 출력할 수 없다. toPlainString()을 사용하자.</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.math.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    BigDecimal a = sc.nextBigDecimal();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> b = sc.nextInt();</span><br><span class=\"line\">    BigDecimal c = a.pow(b);</span><br><span class=\"line\">    System.out.println(c.toPlainString());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/1978] 소수 찾기","_content":"> Baekjoon Online Judge - [1978](https://www.acmicpc.net/problem/1978)\n\n## Review\n* 1과 자기 자신으로만 나누어지는 수를 카운트해서 출력하면 되는 문제.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint N = sc.nextInt();\n\t\t\n\t\tint input;\n\t\tint res=0;\n\t\tint mok1, mok2;\n\t\t\n\t\tfor (int i=0; i<N; i++) {\n\t\t\tmok2=0;\n\t\t\tinput = sc.nextInt();\n\t\t\tfor(mok1=1; mok1<=input; mok1++) {\n\t\t\t\tif(input%mok1==0) mok2++;\n\t\t\t}\n\t\t\tif(mok2==2) res++;\n\t\t}\n\t\t\n\t\tSystem.out.println(res);\n\t}\n}\n```","source":"_posts/2018-09-22-bj-1978.md","raw":"---\ntitle: \"[백준/1978] 소수 찾기\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [1978](https://www.acmicpc.net/problem/1978)\n\n## Review\n* 1과 자기 자신으로만 나누어지는 수를 카운트해서 출력하면 되는 문제.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\tint N = sc.nextInt();\n\t\t\n\t\tint input;\n\t\tint res=0;\n\t\tint mok1, mok2;\n\t\t\n\t\tfor (int i=0; i<N; i++) {\n\t\t\tmok2=0;\n\t\t\tinput = sc.nextInt();\n\t\t\tfor(mok1=1; mok1<=input; mok1++) {\n\t\t\t\tif(input%mok1==0) mok2++;\n\t\t\t}\n\t\t\tif(mok2==2) res++;\n\t\t}\n\t\t\n\t\tSystem.out.println(res);\n\t}\n}\n```","slug":"bj-1978","published":1,"date":"2018-09-21T15:00:00.000Z","updated":"2020-05-05T08:00:03.854Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgd001duv59e2r5edpc","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xOTc4\" title=\"https://www.acmicpc.net/problem/1978\">1978<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>1과 자기 자신으로만 나누어지는 수를 카운트해서 출력하면 되는 문제.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> N = sc.nextInt();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> input;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> mok1, mok2;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;N; i++) &#123;</span><br><span class=\"line\">\t\t\tmok2=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\tinput = sc.nextInt();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(mok1=<span class=\"number\">1</span>; mok1&lt;=input; mok1++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(input%mok1==<span class=\"number\">0</span>) mok2++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(mok2==<span class=\"number\">2</span>) res++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(res);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xOTc4\" title=\"https://www.acmicpc.net/problem/1978\">1978<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>1과 자기 자신으로만 나누어지는 수를 카운트해서 출력하면 되는 문제.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tScanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> N = sc.nextInt();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> input;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> mok1, mok2;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;N; i++) &#123;</span><br><span class=\"line\">\t\t\tmok2=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\tinput = sc.nextInt();</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(mok1=<span class=\"number\">1</span>; mok1&lt;=input; mok1++) &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(input%mok1==<span class=\"number\">0</span>) mok2++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(mok2==<span class=\"number\">2</span>) res++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(res);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/10808] 알파벳 개수","_content":"> Baekjoon Online Judge - [10808](https://www.acmicpc.net/problem/10808)\n\n## Review\n* 배열 하나 만들고 아스키코드상 a를 배열 인덱스 0으로 만든 다음 해당 문자의 배열값을 증가시키면 되는 문제.\n\n## Code (JAVA)\n```java\nimport java.util.Scanner;\n\npublic class Main {\n  public static void main(String args[]){\n    \n    Scanner sc = new Scanner(System.in);\n    String input = sc.next();\n    \n    int[] abc = new int[26];\n    \n    for(int i = 0; i < input.length(); i++) {\n      abc[input.charAt(i) - 'a']++;\n    }\n    \n    for(int i = 0; i < abc.length; i++) {\n      System.out.print(abc[i] + \" \");\n    }\n    \n    sc.close();\n  }\n}\n```","source":"_posts/2018-09-24-bj-10808.md","raw":"---\ntitle: \"[백준/10808] 알파벳 개수\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [10808](https://www.acmicpc.net/problem/10808)\n\n## Review\n* 배열 하나 만들고 아스키코드상 a를 배열 인덱스 0으로 만든 다음 해당 문자의 배열값을 증가시키면 되는 문제.\n\n## Code (JAVA)\n```java\nimport java.util.Scanner;\n\npublic class Main {\n  public static void main(String args[]){\n    \n    Scanner sc = new Scanner(System.in);\n    String input = sc.next();\n    \n    int[] abc = new int[26];\n    \n    for(int i = 0; i < input.length(); i++) {\n      abc[input.charAt(i) - 'a']++;\n    }\n    \n    for(int i = 0; i < abc.length; i++) {\n      System.out.print(abc[i] + \" \");\n    }\n    \n    sc.close();\n  }\n}\n```","slug":"bj-10808","published":1,"date":"2018-09-23T15:00:00.000Z","updated":"2020-05-05T08:00:03.854Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afge001huv590bvubq9r","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDgwOA==\" title=\"https://www.acmicpc.net/problem/10808\">10808<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>배열 하나 만들고 아스키코드상 a를 배열 인덱스 0으로 만든 다음 해당 문자의 배열값을 증가시키면 되는 문제.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    String input = sc.next();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] abc = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">26</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; input.length(); i++) &#123;</span><br><span class=\"line\">      abc[input.charAt(i) - <span class=\"string\">'a'</span>]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; abc.length; i++) &#123;</span><br><span class=\"line\">      System.out.print(abc[i] + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDgwOA==\" title=\"https://www.acmicpc.net/problem/10808\">10808<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>배열 하나 만들고 아스키코드상 a를 배열 인덱스 0으로 만든 다음 해당 문자의 배열값을 증가시키면 되는 문제.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    String input = sc.next();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] abc = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">26</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; input.length(); i++) &#123;</span><br><span class=\"line\">      abc[input.charAt(i) - <span class=\"string\">'a'</span>]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; abc.length; i++) &#123;</span><br><span class=\"line\">      System.out.print(abc[i] + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/10809] 알파벳 찾기","_content":"> Baekjoon Online Judge - [10809](https://www.acmicpc.net/problem/10809)\n\n## Review\n* 배열의 값이 -1일때만 배열의 값을 바꿔주면 된다.\n\n## Code (JAVA)\n```java\nimport java.util.Scanner;\n\npublic class Main {\n  public static void main(String args[]){\n    \n    Scanner sc = new Scanner(System.in);\n    String input = sc.next();\n    \n    int[] abc = new int[26];\n    \n    for(int i = 0; i < abc.length; i++) {\n      abc[i] = -1;\n    }\n    \n    for(int i = 0; i < input.length(); i++) {\n      if(abc[input.charAt(i) - 'a'] == -1) {\n        abc[input.charAt(i) - 'a'] = i;\n      } \n    }\n    \n    for(int i = 0; i < abc.length; i++) {\n      System.out.print(abc[i] + \" \");\n    }\n    \n    sc.close();\n  }\n}\n```","source":"_posts/2018-09-24-bj-10809.md","raw":"---\ntitle: \"[백준/10809] 알파벳 찾기\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [10809](https://www.acmicpc.net/problem/10809)\n\n## Review\n* 배열의 값이 -1일때만 배열의 값을 바꿔주면 된다.\n\n## Code (JAVA)\n```java\nimport java.util.Scanner;\n\npublic class Main {\n  public static void main(String args[]){\n    \n    Scanner sc = new Scanner(System.in);\n    String input = sc.next();\n    \n    int[] abc = new int[26];\n    \n    for(int i = 0; i < abc.length; i++) {\n      abc[i] = -1;\n    }\n    \n    for(int i = 0; i < input.length(); i++) {\n      if(abc[input.charAt(i) - 'a'] == -1) {\n        abc[input.charAt(i) - 'a'] = i;\n      } \n    }\n    \n    for(int i = 0; i < abc.length; i++) {\n      System.out.print(abc[i] + \" \");\n    }\n    \n    sc.close();\n  }\n}\n```","slug":"bj-10809","published":1,"date":"2018-09-23T15:00:00.000Z","updated":"2020-05-05T08:00:03.854Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afge001kuv59f4yy7glk","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDgwOQ==\" title=\"https://www.acmicpc.net/problem/10809\">10809<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>배열의 값이 -1일때만 배열의 값을 바꿔주면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    String input = sc.next();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] abc = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">26</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; abc.length; i++) &#123;</span><br><span class=\"line\">      abc[i] = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; input.length(); i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(abc[input.charAt(i) - <span class=\"string\">'a'</span>] == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        abc[input.charAt(i) - <span class=\"string\">'a'</span>] = i;</span><br><span class=\"line\">      &#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; abc.length; i++) &#123;</span><br><span class=\"line\">      System.out.print(abc[i] + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDgwOQ==\" title=\"https://www.acmicpc.net/problem/10809\">10809<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>배열의 값이 -1일때만 배열의 값을 바꿔주면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    String input = sc.next();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] abc = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">26</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; abc.length; i++) &#123;</span><br><span class=\"line\">      abc[i] = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; input.length(); i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(abc[input.charAt(i) - <span class=\"string\">'a'</span>] == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        abc[input.charAt(i) - <span class=\"string\">'a'</span>] = i;</span><br><span class=\"line\">      &#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; abc.length; i++) &#123;</span><br><span class=\"line\">      System.out.print(abc[i] + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/10866] 덱","_content":"> Baekjoon Online Judge - [10866](https://www.acmicpc.net/problem/10866)\n\n## Review\n* 이전에 풀었던 큐 문제를 수정해서 푼 문제.\n* 맞게 푼 것 같은데 push_back()을 여러 번 반복할 때 제대로 출력이 되지 않음.\n* 뭐 놓친 거 있나 싶어서 구글링 했는데 맞게 짠 것 같아서 당황... ㅡㅡ;;\n* 맞왜틀의 늪에 빠져 이것저것 고쳐봤는데 알고 보니 또 입출력 문제였음.\n* Scanner 사용하니 제대로 출력이 된다.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n  public static void main(String args[]){\n    \n    Scanner sc=new Scanner(System.in);\n    int n=sc.nextInt();\n    Deque deque = new Deque(n);\n    for(int i=0;i<n;i++){\n        String s=sc.next();\n        if(s.equals(\"push_front\")){\n            int tmp=sc.nextInt();\n            deque.push_front(tmp);\n        }\n        else if(s.equals(\"push_back\")){\n            int tmp=sc.nextInt();\n            deque.push_back(tmp);\n        }\n        else if(s.equals(\"pop_front\"))\n          System.out.println(deque.pop_front());\n        else if(s.equals(\"pop_back\"))\n          System.out.println(deque.pop_back());\n        else if(s.equals(\"size\"))\n          System.out.println(deque.size());\n        else if(s.equals(\"empty\"))\n          System.out.println(deque.empty());\n        else if(s.equals(\"front\"))\n          System.out.println(deque.front());\n        else if(s.equals(\"back\"))\n          System.out.println(deque.back());\n    }\n    \n    sc.close();\n  }\n  \n  static class Deque {\n    private int[] array;\n    private int rear;\n    private int item;\n    \n    public Deque(int size) {\n      rear = -1;\n      array = new int[size];\n    }\n    \n    public void push_front(int item) {\n      rear++;\n      for(int i = rear; i > 0; i--) {\n        array[i] = array[i-1];\n      }\n      array[0] = item;\n    }\n    \n    public void push_back(int item) {\n      rear++;\n      array[rear] = item;\n    }\n    \n    public int pop_front() {\n      if (rear==-1) {\n        return -1;\n      } else {\n        item = array[0];\n        for (int i = 0; i < rear; i++) {\n          array[i] = array[i+1];\n        }\n        rear--;\n        return item;\n      }\n    }\n    \n    public int pop_back() {\n      if (rear==-1) {\n        return -1;\n      } else {\n        item = array[rear];\n        rear--;\n        return item;\n      }\n    }\n    \n    public int size() {\n      return rear+1;\n    }\n    \n    public int empty() {\n      if(rear==-1) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    \n    public int front() {\n      if(rear==-1) {\n        return -1;\n      }\n      return array[0];\n    }\n    \n    public int back() {\n      if(rear==-1) {\n        return -1;\n      }\n      return array[rear];\n    }\n  }\n}\n```","source":"_posts/2018-09-23-bj-10866.md","raw":"---\ntitle: \"[백준/10866] 덱\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [10866](https://www.acmicpc.net/problem/10866)\n\n## Review\n* 이전에 풀었던 큐 문제를 수정해서 푼 문제.\n* 맞게 푼 것 같은데 push_back()을 여러 번 반복할 때 제대로 출력이 되지 않음.\n* 뭐 놓친 거 있나 싶어서 구글링 했는데 맞게 짠 것 같아서 당황... ㅡㅡ;;\n* 맞왜틀의 늪에 빠져 이것저것 고쳐봤는데 알고 보니 또 입출력 문제였음.\n* Scanner 사용하니 제대로 출력이 된다.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n  public static void main(String args[]){\n    \n    Scanner sc=new Scanner(System.in);\n    int n=sc.nextInt();\n    Deque deque = new Deque(n);\n    for(int i=0;i<n;i++){\n        String s=sc.next();\n        if(s.equals(\"push_front\")){\n            int tmp=sc.nextInt();\n            deque.push_front(tmp);\n        }\n        else if(s.equals(\"push_back\")){\n            int tmp=sc.nextInt();\n            deque.push_back(tmp);\n        }\n        else if(s.equals(\"pop_front\"))\n          System.out.println(deque.pop_front());\n        else if(s.equals(\"pop_back\"))\n          System.out.println(deque.pop_back());\n        else if(s.equals(\"size\"))\n          System.out.println(deque.size());\n        else if(s.equals(\"empty\"))\n          System.out.println(deque.empty());\n        else if(s.equals(\"front\"))\n          System.out.println(deque.front());\n        else if(s.equals(\"back\"))\n          System.out.println(deque.back());\n    }\n    \n    sc.close();\n  }\n  \n  static class Deque {\n    private int[] array;\n    private int rear;\n    private int item;\n    \n    public Deque(int size) {\n      rear = -1;\n      array = new int[size];\n    }\n    \n    public void push_front(int item) {\n      rear++;\n      for(int i = rear; i > 0; i--) {\n        array[i] = array[i-1];\n      }\n      array[0] = item;\n    }\n    \n    public void push_back(int item) {\n      rear++;\n      array[rear] = item;\n    }\n    \n    public int pop_front() {\n      if (rear==-1) {\n        return -1;\n      } else {\n        item = array[0];\n        for (int i = 0; i < rear; i++) {\n          array[i] = array[i+1];\n        }\n        rear--;\n        return item;\n      }\n    }\n    \n    public int pop_back() {\n      if (rear==-1) {\n        return -1;\n      } else {\n        item = array[rear];\n        rear--;\n        return item;\n      }\n    }\n    \n    public int size() {\n      return rear+1;\n    }\n    \n    public int empty() {\n      if(rear==-1) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    \n    public int front() {\n      if(rear==-1) {\n        return -1;\n      }\n      return array[0];\n    }\n    \n    public int back() {\n      if(rear==-1) {\n        return -1;\n      }\n      return array[rear];\n    }\n  }\n}\n```","slug":"bj-10866","published":1,"date":"2018-09-22T15:00:00.000Z","updated":"2020-05-05T08:00:03.854Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgf001ouv59abr1ci23","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDg2Ng==\" title=\"https://www.acmicpc.net/problem/10866\">10866<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>이전에 풀었던 큐 문제를 수정해서 푼 문제.</li>\n<li>맞게 푼 것 같은데 push_back()을 여러 번 반복할 때 제대로 출력이 되지 않음.</li>\n<li>뭐 놓친 거 있나 싶어서 구글링 했는데 맞게 짠 것 같아서 당황… ㅡㅡ;;</li>\n<li>맞왜틀의 늪에 빠져 이것저것 고쳐봤는데 알고 보니 또 입출력 문제였음.</li>\n<li>Scanner 사용하니 제대로 출력이 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Scanner sc=<span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n=sc.nextInt();</span><br><span class=\"line\">    Deque deque = <span class=\"keyword\">new</span> Deque(n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        String s=sc.next();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"push_front\"</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmp=sc.nextInt();</span><br><span class=\"line\">            deque.push_front(tmp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"push_back\"</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmp=sc.nextInt();</span><br><span class=\"line\">            deque.push_back(tmp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"pop_front\"</span>))</span><br><span class=\"line\">          System.out.println(deque.pop_front());</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"pop_back\"</span>))</span><br><span class=\"line\">          System.out.println(deque.pop_back());</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"size\"</span>))</span><br><span class=\"line\">          System.out.println(deque.size());</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"empty\"</span>))</span><br><span class=\"line\">          System.out.println(deque.empty());</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"front\"</span>))</span><br><span class=\"line\">          System.out.println(deque.front());</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"back\"</span>))</span><br><span class=\"line\">          System.out.println(deque.back());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Deque</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] array;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> rear;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> item;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Deque</span><span class=\"params\">(<span class=\"keyword\">int</span> size)</span> </span>&#123;</span><br><span class=\"line\">      rear = -<span class=\"number\">1</span>;</span><br><span class=\"line\">      array = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[size];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push_front</span><span class=\"params\">(<span class=\"keyword\">int</span> item)</span> </span>&#123;</span><br><span class=\"line\">      rear++;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = rear; i &gt; <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        array[i] = array[i-<span class=\"number\">1</span>];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      array[<span class=\"number\">0</span>] = item;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push_back</span><span class=\"params\">(<span class=\"keyword\">int</span> item)</span> </span>&#123;</span><br><span class=\"line\">      rear++;</span><br><span class=\"line\">      array[rear] = item;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">pop_front</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        item = array[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; rear; i++) &#123;</span><br><span class=\"line\">          array[i] = array[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        rear--;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> item;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">pop_back</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        item = array[rear];</span><br><span class=\"line\">        rear--;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> item;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> rear+<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">empty</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">front</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> array[<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">back</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> array[rear];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDg2Ng==\" title=\"https://www.acmicpc.net/problem/10866\">10866<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>이전에 풀었던 큐 문제를 수정해서 푼 문제.</li>\n<li>맞게 푼 것 같은데 push_back()을 여러 번 반복할 때 제대로 출력이 되지 않음.</li>\n<li>뭐 놓친 거 있나 싶어서 구글링 했는데 맞게 짠 것 같아서 당황… ㅡㅡ;;</li>\n<li>맞왜틀의 늪에 빠져 이것저것 고쳐봤는데 알고 보니 또 입출력 문제였음.</li>\n<li>Scanner 사용하니 제대로 출력이 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Scanner sc=<span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n=sc.nextInt();</span><br><span class=\"line\">    Deque deque = <span class=\"keyword\">new</span> Deque(n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        String s=sc.next();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"push_front\"</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmp=sc.nextInt();</span><br><span class=\"line\">            deque.push_front(tmp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"push_back\"</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmp=sc.nextInt();</span><br><span class=\"line\">            deque.push_back(tmp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"pop_front\"</span>))</span><br><span class=\"line\">          System.out.println(deque.pop_front());</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"pop_back\"</span>))</span><br><span class=\"line\">          System.out.println(deque.pop_back());</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"size\"</span>))</span><br><span class=\"line\">          System.out.println(deque.size());</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"empty\"</span>))</span><br><span class=\"line\">          System.out.println(deque.empty());</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"front\"</span>))</span><br><span class=\"line\">          System.out.println(deque.front());</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s.equals(<span class=\"string\">\"back\"</span>))</span><br><span class=\"line\">          System.out.println(deque.back());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Deque</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span>[] array;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> rear;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> item;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Deque</span><span class=\"params\">(<span class=\"keyword\">int</span> size)</span> </span>&#123;</span><br><span class=\"line\">      rear = -<span class=\"number\">1</span>;</span><br><span class=\"line\">      array = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[size];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push_front</span><span class=\"params\">(<span class=\"keyword\">int</span> item)</span> </span>&#123;</span><br><span class=\"line\">      rear++;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = rear; i &gt; <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        array[i] = array[i-<span class=\"number\">1</span>];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      array[<span class=\"number\">0</span>] = item;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push_back</span><span class=\"params\">(<span class=\"keyword\">int</span> item)</span> </span>&#123;</span><br><span class=\"line\">      rear++;</span><br><span class=\"line\">      array[rear] = item;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">pop_front</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        item = array[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; rear; i++) &#123;</span><br><span class=\"line\">          array[i] = array[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        rear--;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> item;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">pop_back</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        item = array[rear];</span><br><span class=\"line\">        rear--;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> item;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">size</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> rear+<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">empty</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">front</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> array[<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">back</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(rear==-<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> array[rear];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/10820] 문자열 분석","_content":"> Baekjoon Online Judge - [10820](https://www.acmicpc.net/problem/10820)\n\n## Review\n* 문자열 갯수가 정해지지 않아 입력 받기가 어려웠던 문제.\n* `hasNextLine()` 하나 배웠다.\n\n## Code (JAVA)\n```java\nimport java.util.Scanner;\n\npublic class Main {\n  public static void main(String args[]){\n    \n    Scanner sc = new Scanner(System.in);\n    String input;\n    int upper;\n    int lower;\n    int num;\n    int space;\n \n    while(sc.hasNextLine()) {\n      upper = 0; lower = 0; num = 0; space = 0;\n      input = sc.nextLine();\n      \n      for(int i = 0; i < input.length(); i++) {\n        int c = (int)input.charAt(i);\n        if(c>= 97 && c <=122) {\n          lower++;\n        } else if(c>= 65 && c <=90) {\n          upper++;\n        } else if(c>= 48 && c <=57 ) {\n          num++;\n        } else if(c==32) {\n          space++;\n        }\n       }\n       \n       System.out.println(lower + \" \" + upper + \" \" + num + \" \" + space);\n     }\n    \n    sc.close();\n    }\n    \n}\n```","source":"_posts/2018-09-24-bj-10820.md","raw":"---\ntitle: \"[백준/10820] 문자열 분석\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [10820](https://www.acmicpc.net/problem/10820)\n\n## Review\n* 문자열 갯수가 정해지지 않아 입력 받기가 어려웠던 문제.\n* `hasNextLine()` 하나 배웠다.\n\n## Code (JAVA)\n```java\nimport java.util.Scanner;\n\npublic class Main {\n  public static void main(String args[]){\n    \n    Scanner sc = new Scanner(System.in);\n    String input;\n    int upper;\n    int lower;\n    int num;\n    int space;\n \n    while(sc.hasNextLine()) {\n      upper = 0; lower = 0; num = 0; space = 0;\n      input = sc.nextLine();\n      \n      for(int i = 0; i < input.length(); i++) {\n        int c = (int)input.charAt(i);\n        if(c>= 97 && c <=122) {\n          lower++;\n        } else if(c>= 65 && c <=90) {\n          upper++;\n        } else if(c>= 48 && c <=57 ) {\n          num++;\n        } else if(c==32) {\n          space++;\n        }\n       }\n       \n       System.out.println(lower + \" \" + upper + \" \" + num + \" \" + space);\n     }\n    \n    sc.close();\n    }\n    \n}\n```","slug":"bj-10820","published":1,"date":"2018-09-23T15:00:00.000Z","updated":"2020-05-05T08:00:03.854Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgh001ruv59cm3sclmw","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDgyMA==\" title=\"https://www.acmicpc.net/problem/10820\">10820<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>문자열 갯수가 정해지지 않아 입력 받기가 어려웠던 문제.</li>\n<li><code>hasNextLine()</code> 하나 배웠다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    String input;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> upper;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> lower;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> num;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> space;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(sc.hasNextLine()) &#123;</span><br><span class=\"line\">      upper = <span class=\"number\">0</span>; lower = <span class=\"number\">0</span>; num = <span class=\"number\">0</span>; space = <span class=\"number\">0</span>;</span><br><span class=\"line\">      input = sc.nextLine();</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; input.length(); i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> c = (<span class=\"keyword\">int</span>)input.charAt(i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c&gt;= <span class=\"number\">97</span> &amp;&amp; c &lt;=<span class=\"number\">122</span>) &#123;</span><br><span class=\"line\">          lower++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c&gt;= <span class=\"number\">65</span> &amp;&amp; c &lt;=<span class=\"number\">90</span>) &#123;</span><br><span class=\"line\">          upper++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c&gt;= <span class=\"number\">48</span> &amp;&amp; c &lt;=<span class=\"number\">57</span> ) &#123;</span><br><span class=\"line\">          num++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c==<span class=\"number\">32</span>) &#123;</span><br><span class=\"line\">          space++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       </span><br><span class=\"line\">       System.out.println(lower + <span class=\"string\">\" \"</span> + upper + <span class=\"string\">\" \"</span> + num + <span class=\"string\">\" \"</span> + space);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDgyMA==\" title=\"https://www.acmicpc.net/problem/10820\">10820<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>문자열 갯수가 정해지지 않아 입력 받기가 어려웠던 문제.</li>\n<li><code>hasNextLine()</code> 하나 배웠다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    String input;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> upper;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> lower;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> num;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> space;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(sc.hasNextLine()) &#123;</span><br><span class=\"line\">      upper = <span class=\"number\">0</span>; lower = <span class=\"number\">0</span>; num = <span class=\"number\">0</span>; space = <span class=\"number\">0</span>;</span><br><span class=\"line\">      input = sc.nextLine();</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; input.length(); i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> c = (<span class=\"keyword\">int</span>)input.charAt(i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(c&gt;= <span class=\"number\">97</span> &amp;&amp; c &lt;=<span class=\"number\">122</span>) &#123;</span><br><span class=\"line\">          lower++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c&gt;= <span class=\"number\">65</span> &amp;&amp; c &lt;=<span class=\"number\">90</span>) &#123;</span><br><span class=\"line\">          upper++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c&gt;= <span class=\"number\">48</span> &amp;&amp; c &lt;=<span class=\"number\">57</span> ) &#123;</span><br><span class=\"line\">          num++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(c==<span class=\"number\">32</span>) &#123;</span><br><span class=\"line\">          space++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       </span><br><span class=\"line\">       System.out.println(lower + <span class=\"string\">\" \"</span> + upper + <span class=\"string\">\" \"</span> + num + <span class=\"string\">\" \"</span> + space);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/10824] 네 수","_content":"> Baekjoon Online Judge - [10824](https://www.acmicpc.net/problem/10824)\n\n## Review\n* 백준 강의에서 한 번 나왔던 문제다.\n* 입력 조건 안 보면 런타임 에러 나오기 딱 좋음.\n* 엄청 쉬운 문제이지만 입력 범위 때문에 long으로 형변환을 해서 출력을 해야하는 함정을 가지고 있음.\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  public static void main(String args[]) throws IOException{\n    \n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    String[] line = bf.readLine().split(\" \");\n    \n    String a = line[0] + line[1];\n    String b = line[2] + line[3];\n    \n    long ans = Long.valueOf(a) + Long.valueOf(b);\n    System.out.println(ans);\n  }\n    \n}\n```","source":"_posts/2018-09-27-bj-10824.md","raw":"---\ntitle: \"[백준/10824] 네 수\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [10824](https://www.acmicpc.net/problem/10824)\n\n## Review\n* 백준 강의에서 한 번 나왔던 문제다.\n* 입력 조건 안 보면 런타임 에러 나오기 딱 좋음.\n* 엄청 쉬운 문제이지만 입력 범위 때문에 long으로 형변환을 해서 출력을 해야하는 함정을 가지고 있음.\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  public static void main(String args[]) throws IOException{\n    \n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    String[] line = bf.readLine().split(\" \");\n    \n    String a = line[0] + line[1];\n    String b = line[2] + line[3];\n    \n    long ans = Long.valueOf(a) + Long.valueOf(b);\n    System.out.println(ans);\n  }\n    \n}\n```","slug":"bj-10824","published":1,"date":"2018-09-26T15:00:00.000Z","updated":"2020-05-05T08:00:03.854Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgi001vuv59715vah55","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDgyNA==\" title=\"https://www.acmicpc.net/problem/10824\">10824<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>백준 강의에서 한 번 나왔던 문제다.</li>\n<li>입력 조건 안 보면 런타임 에러 나오기 딱 좋음.</li>\n<li>엄청 쉬운 문제이지만 입력 범위 때문에 long으로 형변환을 해서 출력을 해야하는 함정을 가지고 있음.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    String[] line = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    String a = line[<span class=\"number\">0</span>] + line[<span class=\"number\">1</span>];</span><br><span class=\"line\">    String b = line[<span class=\"number\">2</span>] + line[<span class=\"number\">3</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">long</span> ans = Long.valueOf(a) + Long.valueOf(b);</span><br><span class=\"line\">    System.out.println(ans);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDgyNA==\" title=\"https://www.acmicpc.net/problem/10824\">10824<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>백준 강의에서 한 번 나왔던 문제다.</li>\n<li>입력 조건 안 보면 런타임 에러 나오기 딱 좋음.</li>\n<li>엄청 쉬운 문제이지만 입력 범위 때문에 long으로 형변환을 해서 출력을 해야하는 함정을 가지고 있음.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    String[] line = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    String a = line[<span class=\"number\">0</span>] + line[<span class=\"number\">1</span>];</span><br><span class=\"line\">    String b = line[<span class=\"number\">2</span>] + line[<span class=\"number\">3</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">long</span> ans = Long.valueOf(a) + Long.valueOf(b);</span><br><span class=\"line\">    System.out.println(ans);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/11655] ROT 13","_content":"\n> Baekjoon Online Judge - [11655](https://www.acmicpc.net/problem/11655)\n\n## Review\n\n- 알파벳은 총 26자니 절반을 딱 나누어 A부터 M까지는 13을 더해주고, N부터 Z까지는 13을 빼주면 되는 문제임.\n\n## Code (JAVA)\n\n```java\nimport java.util.Scanner;\n\npublic class Main {\n  public static void main(String args[]){\n\n    Scanner sc = new Scanner(System.in);\n    String input = sc.nextLine();\n\n    char arr[]=input.toCharArray();\n\n    for(int i = 0; i < input.length(); i++) {\n     if(arr[i]>='a' && arr[i]<='m') {\n       arr[i] += 13;\n     } else if(arr[i]>='n' && arr[i]<='z'){\n       arr[i] -= 13;\n     } else if(arr[i]>='A' && arr[i]<='M') {\n       arr[i] += 13;\n     } else if(arr[i]>='N' && arr[i]<='Z') {\n       arr[i] -= 13;\n     }\n    }\n      System.out.println(arr);\n    }\n\n}\n```\n","source":"_posts/2018-09-27-bj-11655.md","raw":"---\ntitle: \"[백준/11655] ROT 13\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [11655](https://www.acmicpc.net/problem/11655)\n\n## Review\n\n- 알파벳은 총 26자니 절반을 딱 나누어 A부터 M까지는 13을 더해주고, N부터 Z까지는 13을 빼주면 되는 문제임.\n\n## Code (JAVA)\n\n```java\nimport java.util.Scanner;\n\npublic class Main {\n  public static void main(String args[]){\n\n    Scanner sc = new Scanner(System.in);\n    String input = sc.nextLine();\n\n    char arr[]=input.toCharArray();\n\n    for(int i = 0; i < input.length(); i++) {\n     if(arr[i]>='a' && arr[i]<='m') {\n       arr[i] += 13;\n     } else if(arr[i]>='n' && arr[i]<='z'){\n       arr[i] -= 13;\n     } else if(arr[i]>='A' && arr[i]<='M') {\n       arr[i] += 13;\n     } else if(arr[i]>='N' && arr[i]<='Z') {\n       arr[i] -= 13;\n     }\n    }\n      System.out.println(arr);\n    }\n\n}\n```\n","slug":"bj-11655","published":1,"date":"2018-09-26T15:00:00.000Z","updated":"2020-05-05T08:00:03.855Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgj001yuv59db00eqx2","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTY1NQ==\" title=\"https://www.acmicpc.net/problem/11655\">11655<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>알파벳은 총 26자니 절반을 딱 나누어 A부터 M까지는 13을 더해주고, N부터 Z까지는 13을 빼주면 되는 문제임.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    String input = sc.nextLine();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> arr[]=input.toCharArray();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; input.length(); i++) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(arr[i]&gt;=<span class=\"string\">'a'</span> &amp;&amp; arr[i]&lt;=<span class=\"string\">'m'</span>) &#123;</span><br><span class=\"line\">       arr[i] += <span class=\"number\">13</span>;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(arr[i]&gt;=<span class=\"string\">'n'</span> &amp;&amp; arr[i]&lt;=<span class=\"string\">'z'</span>)&#123;</span><br><span class=\"line\">       arr[i] -= <span class=\"number\">13</span>;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(arr[i]&gt;=<span class=\"string\">'A'</span> &amp;&amp; arr[i]&lt;=<span class=\"string\">'M'</span>) &#123;</span><br><span class=\"line\">       arr[i] += <span class=\"number\">13</span>;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(arr[i]&gt;=<span class=\"string\">'N'</span> &amp;&amp; arr[i]&lt;=<span class=\"string\">'Z'</span>) &#123;</span><br><span class=\"line\">       arr[i] -= <span class=\"number\">13</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">      System.out.println(arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTY1NQ==\" title=\"https://www.acmicpc.net/problem/11655\">11655<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>알파벳은 총 26자니 절반을 딱 나누어 A부터 M까지는 13을 더해주고, N부터 Z까지는 13을 빼주면 되는 문제임.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    String input = sc.nextLine();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> arr[]=input.toCharArray();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; input.length(); i++) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(arr[i]&gt;=<span class=\"string\">'a'</span> &amp;&amp; arr[i]&lt;=<span class=\"string\">'m'</span>) &#123;</span><br><span class=\"line\">       arr[i] += <span class=\"number\">13</span>;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(arr[i]&gt;=<span class=\"string\">'n'</span> &amp;&amp; arr[i]&lt;=<span class=\"string\">'z'</span>)&#123;</span><br><span class=\"line\">       arr[i] -= <span class=\"number\">13</span>;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(arr[i]&gt;=<span class=\"string\">'A'</span> &amp;&amp; arr[i]&lt;=<span class=\"string\">'M'</span>) &#123;</span><br><span class=\"line\">       arr[i] += <span class=\"number\">13</span>;</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(arr[i]&gt;=<span class=\"string\">'N'</span> &amp;&amp; arr[i]&lt;=<span class=\"string\">'Z'</span>) &#123;</span><br><span class=\"line\">       arr[i] -= <span class=\"number\">13</span>;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">      System.out.println(arr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/2747] 피보나치 수","_content":"> Baekjoon Online Judge - [2747](https://www.acmicpc.net/problem/2747)\n\n## Review\n* 본격 DP 들어가기 전에 한번 풀어본 문제.\n* 메모이제이션으로 풀었는데도 시간 초과가 떠서 당황하게 만들었던 문제다.\n* 알고 보니 내 코드에 문제가 있는 거였음. 역시 컴파일러는 거짓말을 안 한다... ㅜ\n* 일단 전역으로 배열 선언한 다음 메인 함수에서 초기화를 해준다.\n* 이때 입력값보다 1을 더해서 배열의 크기를 정해주어야 한다.\n* 예를 들어 0부터 10까지의 피보나치 수열을 구한다면, 배열의 크기는 0~10까지인 총 11이 되어야 하기 때문이다.\n* 그리고 피보나치 수열을 구하는 함수에서 배열에 값을 넣어주면 된다.\n* 나는 배열을 지역 변수로 선언했다가 시간 초과를 보았다... ㅡㅡ;;\n* 사실 1003 문제 풀고 싶었는데... 온갖 삽질로 시간 초과만 보다가 결국 풀지 못했다.\n* 1003은 다음 기회에... 꼭 플고 만다.\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  static int[] memo;\n  public static int fibonacci(int n) {\n    \n\n    if (n <= 1) {\n      memo[n] = n;\n      return n;\n    } else if (memo[n] != 0) {\n      return memo[n];\n    } else {\n      return memo[n] = fibonacci(n-1) + fibonacci(n-2);\n    }\n  }\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int input = Integer.parseInt(bf.readLine());\n    memo = new int[input + 1];\n    System.out.println(fibonacci(input));\n  }\n  \n}\n```","source":"_posts/2018-09-28-bj-2747.md","raw":"---\ntitle: \"[백준/2747] 피보나치 수\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [2747](https://www.acmicpc.net/problem/2747)\n\n## Review\n* 본격 DP 들어가기 전에 한번 풀어본 문제.\n* 메모이제이션으로 풀었는데도 시간 초과가 떠서 당황하게 만들었던 문제다.\n* 알고 보니 내 코드에 문제가 있는 거였음. 역시 컴파일러는 거짓말을 안 한다... ㅜ\n* 일단 전역으로 배열 선언한 다음 메인 함수에서 초기화를 해준다.\n* 이때 입력값보다 1을 더해서 배열의 크기를 정해주어야 한다.\n* 예를 들어 0부터 10까지의 피보나치 수열을 구한다면, 배열의 크기는 0~10까지인 총 11이 되어야 하기 때문이다.\n* 그리고 피보나치 수열을 구하는 함수에서 배열에 값을 넣어주면 된다.\n* 나는 배열을 지역 변수로 선언했다가 시간 초과를 보았다... ㅡㅡ;;\n* 사실 1003 문제 풀고 싶었는데... 온갖 삽질로 시간 초과만 보다가 결국 풀지 못했다.\n* 1003은 다음 기회에... 꼭 플고 만다.\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  static int[] memo;\n  public static int fibonacci(int n) {\n    \n\n    if (n <= 1) {\n      memo[n] = n;\n      return n;\n    } else if (memo[n] != 0) {\n      return memo[n];\n    } else {\n      return memo[n] = fibonacci(n-1) + fibonacci(n-2);\n    }\n  }\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int input = Integer.parseInt(bf.readLine());\n    memo = new int[input + 1];\n    System.out.println(fibonacci(input));\n  }\n  \n}\n```","slug":"bj-2747","published":1,"date":"2018-09-27T15:00:00.000Z","updated":"2020-05-05T08:00:03.855Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgk0022uv59h29y99lg","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNzQ3\" title=\"https://www.acmicpc.net/problem/2747\">2747<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>본격 DP 들어가기 전에 한번 풀어본 문제.</li>\n<li>메모이제이션으로 풀었는데도 시간 초과가 떠서 당황하게 만들었던 문제다.</li>\n<li>알고 보니 내 코드에 문제가 있는 거였음. 역시 컴파일러는 거짓말을 안 한다… ㅜ</li>\n<li>일단 전역으로 배열 선언한 다음 메인 함수에서 초기화를 해준다.</li>\n<li>이때 입력값보다 1을 더해서 배열의 크기를 정해주어야 한다.</li>\n<li>예를 들어 0부터 10까지의 피보나치 수열을 구한다면, 배열의 크기는 0~10까지인 총 11이 되어야 하기 때문이다.</li>\n<li>그리고 피보나치 수열을 구하는 함수에서 배열에 값을 넣어주면 된다.</li>\n<li>나는 배열을 지역 변수로 선언했다가 시간 초과를 보았다… ㅡㅡ;;</li>\n<li>사실 1003 문제 풀고 싶었는데… 온갖 삽질로 시간 초과만 보다가 결국 풀지 못했다.</li>\n<li>1003은 다음 기회에… 꼭 플고 만다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[] memo;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">fibonacci</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      memo[n] = n;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (memo[n] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n] = fibonacci(n-<span class=\"number\">1</span>) + fibonacci(n-<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> input = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    memo = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[input + <span class=\"number\">1</span>];</span><br><span class=\"line\">    System.out.println(fibonacci(input));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNzQ3\" title=\"https://www.acmicpc.net/problem/2747\">2747<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>본격 DP 들어가기 전에 한번 풀어본 문제.</li>\n<li>메모이제이션으로 풀었는데도 시간 초과가 떠서 당황하게 만들었던 문제다.</li>\n<li>알고 보니 내 코드에 문제가 있는 거였음. 역시 컴파일러는 거짓말을 안 한다… ㅜ</li>\n<li>일단 전역으로 배열 선언한 다음 메인 함수에서 초기화를 해준다.</li>\n<li>이때 입력값보다 1을 더해서 배열의 크기를 정해주어야 한다.</li>\n<li>예를 들어 0부터 10까지의 피보나치 수열을 구한다면, 배열의 크기는 0~10까지인 총 11이 되어야 하기 때문이다.</li>\n<li>그리고 피보나치 수열을 구하는 함수에서 배열에 값을 넣어주면 된다.</li>\n<li>나는 배열을 지역 변수로 선언했다가 시간 초과를 보았다… ㅡㅡ;;</li>\n<li>사실 1003 문제 풀고 싶었는데… 온갖 삽질로 시간 초과만 보다가 결국 풀지 못했다.</li>\n<li>1003은 다음 기회에… 꼭 플고 만다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[] memo;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">fibonacci</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      memo[n] = n;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (memo[n] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n] = fibonacci(n-<span class=\"number\">1</span>) + fibonacci(n-<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> input = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    memo = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[input + <span class=\"number\">1</span>];</span><br><span class=\"line\">    System.out.println(fibonacci(input));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/11656] 접미사 배열","_content":"> Baekjoon Online Judge - [11656](https://www.acmicpc.net/problem/11656)\n\n## Review\n* 문자열 하나씩 잘라 ArrayList에 넣은 다음에 Collections.sort()로 정렬하면 된다.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n  public static void main(String args[]) {\n    \n    Scanner sc = new Scanner(System.in);\n  \n    String input = sc.nextLine();\n    ArrayList<String> arr = new ArrayList<String>();\n    \n    for(int i = 0; i < input.length(); i++) {\n      arr.add(input.substring(i, input.length()));\n    }\n    \n    Collections.sort(arr);\n    \n    for (String i : arr) {\n      System.out.println(i);\n    }\n    \n  }\n    \n}\n```","source":"_posts/2018-09-27-bj-11656.md","raw":"---\ntitle: \"[백준/11656] 접미사 배열\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [11656](https://www.acmicpc.net/problem/11656)\n\n## Review\n* 문자열 하나씩 잘라 ArrayList에 넣은 다음에 Collections.sort()로 정렬하면 된다.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n  public static void main(String args[]) {\n    \n    Scanner sc = new Scanner(System.in);\n  \n    String input = sc.nextLine();\n    ArrayList<String> arr = new ArrayList<String>();\n    \n    for(int i = 0; i < input.length(); i++) {\n      arr.add(input.substring(i, input.length()));\n    }\n    \n    Collections.sort(arr);\n    \n    for (String i : arr) {\n      System.out.println(i);\n    }\n    \n  }\n    \n}\n```","slug":"bj-11656","published":1,"date":"2018-09-26T15:00:00.000Z","updated":"2020-05-05T08:00:03.855Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgl0025uv59g4t817b0","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTY1Ng==\" title=\"https://www.acmicpc.net/problem/11656\">11656<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>문자열 하나씩 잘라 ArrayList에 넣은 다음에 Collections.sort()로 정렬하면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">  </span><br><span class=\"line\">    String input = sc.nextLine();</span><br><span class=\"line\">    ArrayList&lt;String&gt; arr = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; input.length(); i++) &#123;</span><br><span class=\"line\">      arr.add(input.substring(i, input.length()));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Collections.sort(arr);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (String i : arr) &#123;</span><br><span class=\"line\">      System.out.println(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTY1Ng==\" title=\"https://www.acmicpc.net/problem/11656\">11656<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>문자열 하나씩 잘라 ArrayList에 넣은 다음에 Collections.sort()로 정렬하면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">  </span><br><span class=\"line\">    String input = sc.nextLine();</span><br><span class=\"line\">    ArrayList&lt;String&gt; arr = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; input.length(); i++) &#123;</span><br><span class=\"line\">      arr.add(input.substring(i, input.length()));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Collections.sort(arr);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (String i : arr) &#123;</span><br><span class=\"line\">      System.out.println(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/9095] 1, 2, 3 더하기","_content":"\n> Baekjoon Online Judge - [9095](https://www.acmicpc.net/problem/9095)\n\n## Review\n\n- 각 앞자리 수에 1,2,3이 나올 경우를 생각하면 된다. 예를 들어 숫자 4는 3을 만들었을 때의 경우의 수, 2를 만들었을 때의 경우의 수, 1을 만들었을 때의 경우의 수를 전부 추가하면 된다.\n  ![example](/images/bj-9095/example.png)\n- 점화식으로 나타내면 이렇다. **A[n] = A[n-3] + A[n-2] + A[n-1]**\n\n## Code (JAVA)\n\n```java\nimport java.util.*;\n\npublic class Main {\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int[] arr = new int[11];\n    int T, n;\n\n    arr[1] = 1;\n    arr[2] = 2;\n    arr[3] = 4;\n\n    T = sc.nextInt();\n\n    for(int i = 0; i < T; i++) {\n      n = sc.nextInt();\n      for(int j = 4; j<=n; j++) {\n        arr[j] = arr[j-1] + arr[j-2] + arr[j-3];\n      }\n      System.out.println(arr[n]);\n    }\n    sc.close();\n  }\n}\n```\n","source":"_posts/2018-10-01-bj-9095.md","raw":"---\ntitle: \"[백준/9095] 1, 2, 3 더하기\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [9095](https://www.acmicpc.net/problem/9095)\n\n## Review\n\n- 각 앞자리 수에 1,2,3이 나올 경우를 생각하면 된다. 예를 들어 숫자 4는 3을 만들었을 때의 경우의 수, 2를 만들었을 때의 경우의 수, 1을 만들었을 때의 경우의 수를 전부 추가하면 된다.\n  ![example](/images/bj-9095/example.png)\n- 점화식으로 나타내면 이렇다. **A[n] = A[n-3] + A[n-2] + A[n-1]**\n\n## Code (JAVA)\n\n```java\nimport java.util.*;\n\npublic class Main {\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int[] arr = new int[11];\n    int T, n;\n\n    arr[1] = 1;\n    arr[2] = 2;\n    arr[3] = 4;\n\n    T = sc.nextInt();\n\n    for(int i = 0; i < T; i++) {\n      n = sc.nextInt();\n      for(int j = 4; j<=n; j++) {\n        arr[j] = arr[j-1] + arr[j-2] + arr[j-3];\n      }\n      System.out.println(arr[n]);\n    }\n    sc.close();\n  }\n}\n```\n","slug":"bj-9095","published":1,"date":"2018-09-30T15:00:00.000Z","updated":"2020-05-05T08:00:03.855Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgl0029uv59hkcz29vw","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS85MDk1\" title=\"https://www.acmicpc.net/problem/9095\">9095<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>각 앞자리 수에 1,2,3이 나올 경우를 생각하면 된다. 예를 들어 숫자 4는 3을 만들었을 때의 경우의 수, 2를 만들었을 때의 경우의 수, 1을 만들었을 때의 경우의 수를 전부 추가하면 된다.<br><img src=\"/images/bj-9095/example.png\" alt=\"example\"></li>\n<li>점화식으로 나타내면 이렇다. <strong>A[n] = A[n-3] + A[n-2] + A[n-1]</strong></li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">11</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T, n;</span><br><span class=\"line\"></span><br><span class=\"line\">    arr[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    arr[<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">    arr[<span class=\"number\">3</span>] = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    T = sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; T; i++) &#123;</span><br><span class=\"line\">      n = sc.nextInt();</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">4</span>; j&lt;=n; j++) &#123;</span><br><span class=\"line\">        arr[j] = arr[j-<span class=\"number\">1</span>] + arr[j-<span class=\"number\">2</span>] + arr[j-<span class=\"number\">3</span>];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println(arr[n]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS85MDk1\" title=\"https://www.acmicpc.net/problem/9095\">9095<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>각 앞자리 수에 1,2,3이 나올 경우를 생각하면 된다. 예를 들어 숫자 4는 3을 만들었을 때의 경우의 수, 2를 만들었을 때의 경우의 수, 1을 만들었을 때의 경우의 수를 전부 추가하면 된다.<br><img src=\"/images/bj-9095/example.png\" alt=\"example\"></li>\n<li>점화식으로 나타내면 이렇다. <strong>A[n] = A[n-3] + A[n-2] + A[n-1]</strong></li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">11</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T, n;</span><br><span class=\"line\"></span><br><span class=\"line\">    arr[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    arr[<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">    arr[<span class=\"number\">3</span>] = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    T = sc.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; T; i++) &#123;</span><br><span class=\"line\">      n = sc.nextInt();</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">4</span>; j&lt;=n; j++) &#123;</span><br><span class=\"line\">        arr[j] = arr[j-<span class=\"number\">1</span>] + arr[j-<span class=\"number\">2</span>] + arr[j-<span class=\"number\">3</span>];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println(arr[n]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/1463] 1로 만들기","_content":"> Baekjoon Online Judge - [1463](https://www.acmicpc.net/problem/1463)\n\n## Review\n\n| 인덱스 | 횟수 |\n| :--- | :--- |\n| 1 | 0 |\n| 2 | 1 |\n| 3 | 1 |\n\n위 테이블을 보면, 1은 만들 필요가 없으니까 0, 2와 3은 2로 3으로 나누어 떨어지고, 몫이 1이 나오니까 횟수가 1이다. 그렇다면 4부터는 어떻게 구할까?\n\n| 인덱스 | 횟수 |\n| 4 | 3, 1 또는 2, 1 |\n\n4를 1로 만드는 최솟값을 구해야 하는 경우, 4를 1로 뺐을 때 3이 되고, 3의 값은 1이므로 총 두 번이 된다. 하지만 4를 2로 나누는 경우 몫이 2가 되는데, 2의 값은 1이므로 3으로 나누었을 때와 마찬가지로 총 두 번이 된다. 이러나저러나 4를 1로 만드는 최솟값은 2가 되는 것이다.\n\n| 인덱스 | 횟수 |\n| 5 | 4, 3, 1 또는 4, 2, 1 |\n\n다시 5를 예로 들자면, 5는 3이나 2로 나누어 떨어지지 않으므로 **무조건 1을 빼고 시작**해야 한다. 5-1=4인데, 4의 횟수는 아까 구한 2이다. 따라서 5의 최솟값은 **4의 연산 횟수(2) + 빼기 연산(1) = 3**이 된다.\n\n이렇게 10까지 반복하면 아래와 같은 테이블이 만들어지게 된다.\n\n| 인덱스 | 횟수 |\n| :--- | :--- |\n| 1 | 0 |\n| 2 | 1 |\n| 3 | 1 |\n| 4 | 3, 1 또는 2, 1 |\n| 5 | 4, 3, 1 |\n| 6 | 3, 1 또는 2, 1 |\n| 7 | 6, 3, 1 |\n| 8 | 4, 3, 1 |\n| 9 | 3, 1 |\n| 10 | 9, 3, 1 |\n\n각 인덱스의 최솟값을 담은 배열을 A라고 했을 때, 점화식은 다음과 같다.\n\n* 1을 뺐을 때: `A[n - 1] + 1`\n* n % 2 == 0일 때: `A[n / 2 == 0] + 1`\n* n % 3 == 0일 때: `A[n / 3 == 0] + 1`\n\n횟수를 계산해야 하기 때문에 1을 더한다. 각 케이스의 값을 비교해 최소값을 찾아내서 A[n] 배열에 넣어주면 된다.\n\n## Code (JAVA) - Bottom-up\n\n```java\nimport java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    int[] arr = new int[n + 1];\n    arr[0] = arr[1] = 0;\n\n    for(int i = 2; i <= n; i++) {\n      arr[i] = arr[i - 1] + 1;\n\n      if(i % 2 == 0 && arr[i] > arr[i / 2] + 1) {\n        arr[i] = arr[i / 2] + 1;\n      }\n\n      if(i % 3 == 0 && arr[i] > arr[i / 3] + 1) {\n        arr[i] = arr[i / 3] + 1;\n      }\n\n    }\n    System.out.println(arr[n]);\n    sc.close();\n  }\n}\n```\n\n## Code (JAVA) - Top-down\n\n```java\nimport java.io.*;\n\npublic class Main {\n  \n  static int[] dp;\n  \n  public static int dp(int n) {\n    if(n <= 1) {\n      return 0;\n    } else if(dp[n] != 0) {\n      return dp[n];\n    } else {\n      dp[n] = dp(n - 1) + 1;\n      if(n % 3 == 0 && dp[n] > dp(n / 3) + 1) {\n        dp[n] = dp(n / 3) + 1;\n      }\n      if(n % 2 == 0 && dp[n] > dp(n / 2) + 1) {\n        dp[n] = dp(n / 2) + 1;\n      }\n\n    }\n    return dp[n];\n  }\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(br.readLine());\n    dp = new int[N + 1];\n    System.out.println(dp(N));\n\n  }\n}\n```\n\n## Code (Javascript)\n\n* 역시 백준에서 자바스크립트 입력은... 노우...\n\n```js\nvar fs = require('fs');\nvar input = fs.readFileSync('/dev/stdin').toString().split(\"\\n\");\nvar X = parseInt(input[0]);\n\n// 1부터 3까지의 값을 미리 넣어준다.\n// 편의를 위해 인덱스는 1부터 시작한다\nlet dp = [0, 0, 1, 1];\n\nfor (let i = 4; i <= X; i++) {\n  // -1을 뺄 때, 2로 나눌 때, 3으로 나눌 때의 값을 비교해 최소값을 알아냄\n  // -1을 했을 때\n  dp[i] = dp[i - 1] + 1;\n  // 3으로 나누어 떨어지는 수일 때\n  if (i % 3 === 0) dp[i] = Math.min(dp[i], dp[i / 3] + 1);\n  // 2로 나누어 떨어지는 수일 때\n  if (i % 2 === 0) dp[i] = Math.min(dp[i], dp[i / 2] + 1);\n}\n\nconsole.log(dp[X])\n```\n","source":"_posts/2018-10-04-bj-1463.md","raw":"---\ntitle: \"[백준/1463] 1로 만들기\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [1463](https://www.acmicpc.net/problem/1463)\n\n## Review\n\n| 인덱스 | 횟수 |\n| :--- | :--- |\n| 1 | 0 |\n| 2 | 1 |\n| 3 | 1 |\n\n위 테이블을 보면, 1은 만들 필요가 없으니까 0, 2와 3은 2로 3으로 나누어 떨어지고, 몫이 1이 나오니까 횟수가 1이다. 그렇다면 4부터는 어떻게 구할까?\n\n| 인덱스 | 횟수 |\n| 4 | 3, 1 또는 2, 1 |\n\n4를 1로 만드는 최솟값을 구해야 하는 경우, 4를 1로 뺐을 때 3이 되고, 3의 값은 1이므로 총 두 번이 된다. 하지만 4를 2로 나누는 경우 몫이 2가 되는데, 2의 값은 1이므로 3으로 나누었을 때와 마찬가지로 총 두 번이 된다. 이러나저러나 4를 1로 만드는 최솟값은 2가 되는 것이다.\n\n| 인덱스 | 횟수 |\n| 5 | 4, 3, 1 또는 4, 2, 1 |\n\n다시 5를 예로 들자면, 5는 3이나 2로 나누어 떨어지지 않으므로 **무조건 1을 빼고 시작**해야 한다. 5-1=4인데, 4의 횟수는 아까 구한 2이다. 따라서 5의 최솟값은 **4의 연산 횟수(2) + 빼기 연산(1) = 3**이 된다.\n\n이렇게 10까지 반복하면 아래와 같은 테이블이 만들어지게 된다.\n\n| 인덱스 | 횟수 |\n| :--- | :--- |\n| 1 | 0 |\n| 2 | 1 |\n| 3 | 1 |\n| 4 | 3, 1 또는 2, 1 |\n| 5 | 4, 3, 1 |\n| 6 | 3, 1 또는 2, 1 |\n| 7 | 6, 3, 1 |\n| 8 | 4, 3, 1 |\n| 9 | 3, 1 |\n| 10 | 9, 3, 1 |\n\n각 인덱스의 최솟값을 담은 배열을 A라고 했을 때, 점화식은 다음과 같다.\n\n* 1을 뺐을 때: `A[n - 1] + 1`\n* n % 2 == 0일 때: `A[n / 2 == 0] + 1`\n* n % 3 == 0일 때: `A[n / 3 == 0] + 1`\n\n횟수를 계산해야 하기 때문에 1을 더한다. 각 케이스의 값을 비교해 최소값을 찾아내서 A[n] 배열에 넣어주면 된다.\n\n## Code (JAVA) - Bottom-up\n\n```java\nimport java.util.*;\n\npublic class Main {\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    int n = sc.nextInt();\n    int[] arr = new int[n + 1];\n    arr[0] = arr[1] = 0;\n\n    for(int i = 2; i <= n; i++) {\n      arr[i] = arr[i - 1] + 1;\n\n      if(i % 2 == 0 && arr[i] > arr[i / 2] + 1) {\n        arr[i] = arr[i / 2] + 1;\n      }\n\n      if(i % 3 == 0 && arr[i] > arr[i / 3] + 1) {\n        arr[i] = arr[i / 3] + 1;\n      }\n\n    }\n    System.out.println(arr[n]);\n    sc.close();\n  }\n}\n```\n\n## Code (JAVA) - Top-down\n\n```java\nimport java.io.*;\n\npublic class Main {\n  \n  static int[] dp;\n  \n  public static int dp(int n) {\n    if(n <= 1) {\n      return 0;\n    } else if(dp[n] != 0) {\n      return dp[n];\n    } else {\n      dp[n] = dp(n - 1) + 1;\n      if(n % 3 == 0 && dp[n] > dp(n / 3) + 1) {\n        dp[n] = dp(n / 3) + 1;\n      }\n      if(n % 2 == 0 && dp[n] > dp(n / 2) + 1) {\n        dp[n] = dp(n / 2) + 1;\n      }\n\n    }\n    return dp[n];\n  }\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(br.readLine());\n    dp = new int[N + 1];\n    System.out.println(dp(N));\n\n  }\n}\n```\n\n## Code (Javascript)\n\n* 역시 백준에서 자바스크립트 입력은... 노우...\n\n```js\nvar fs = require('fs');\nvar input = fs.readFileSync('/dev/stdin').toString().split(\"\\n\");\nvar X = parseInt(input[0]);\n\n// 1부터 3까지의 값을 미리 넣어준다.\n// 편의를 위해 인덱스는 1부터 시작한다\nlet dp = [0, 0, 1, 1];\n\nfor (let i = 4; i <= X; i++) {\n  // -1을 뺄 때, 2로 나눌 때, 3으로 나눌 때의 값을 비교해 최소값을 알아냄\n  // -1을 했을 때\n  dp[i] = dp[i - 1] + 1;\n  // 3으로 나누어 떨어지는 수일 때\n  if (i % 3 === 0) dp[i] = Math.min(dp[i], dp[i / 3] + 1);\n  // 2로 나누어 떨어지는 수일 때\n  if (i % 2 === 0) dp[i] = Math.min(dp[i], dp[i / 2] + 1);\n}\n\nconsole.log(dp[X])\n```\n","slug":"bj-1463","published":1,"date":"2018-10-03T15:00:00.000Z","updated":"2020-05-05T08:00:03.855Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgm002cuv596ngp2jhx","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xNDYz\" title=\"https://www.acmicpc.net/problem/1463\">1463<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><table>\n<thead>\n<tr>\n<th align=\"left\">인덱스</th>\n<th align=\"left\">횟수</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\">1</td>\n</tr>\n</tbody></table>\n<p>위 테이블을 보면, 1은 만들 필요가 없으니까 0, 2와 3은 2로 3으로 나누어 떨어지고, 몫이 1이 나오니까 횟수가 1이다. 그렇다면 4부터는 어떻게 구할까?</p>\n<p>| 인덱스 | 횟수 |<br>| 4 | 3, 1 또는 2, 1 |</p>\n<p>4를 1로 만드는 최솟값을 구해야 하는 경우, 4를 1로 뺐을 때 3이 되고, 3의 값은 1이므로 총 두 번이 된다. 하지만 4를 2로 나누는 경우 몫이 2가 되는데, 2의 값은 1이므로 3으로 나누었을 때와 마찬가지로 총 두 번이 된다. 이러나저러나 4를 1로 만드는 최솟값은 2가 되는 것이다.</p>\n<p>| 인덱스 | 횟수 |<br>| 5 | 4, 3, 1 또는 4, 2, 1 |</p>\n<p>다시 5를 예로 들자면, 5는 3이나 2로 나누어 떨어지지 않으므로 <strong>무조건 1을 빼고 시작</strong>해야 한다. 5-1=4인데, 4의 횟수는 아까 구한 2이다. 따라서 5의 최솟값은 <strong>4의 연산 횟수(2) + 빼기 연산(1) = 3</strong>이 된다.</p>\n<p>이렇게 10까지 반복하면 아래와 같은 테이블이 만들어지게 된다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">인덱스</th>\n<th align=\"left\">횟수</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"left\">3, 1 또는 2, 1</td>\n</tr>\n<tr>\n<td align=\"left\">5</td>\n<td align=\"left\">4, 3, 1</td>\n</tr>\n<tr>\n<td align=\"left\">6</td>\n<td align=\"left\">3, 1 또는 2, 1</td>\n</tr>\n<tr>\n<td align=\"left\">7</td>\n<td align=\"left\">6, 3, 1</td>\n</tr>\n<tr>\n<td align=\"left\">8</td>\n<td align=\"left\">4, 3, 1</td>\n</tr>\n<tr>\n<td align=\"left\">9</td>\n<td align=\"left\">3, 1</td>\n</tr>\n<tr>\n<td align=\"left\">10</td>\n<td align=\"left\">9, 3, 1</td>\n</tr>\n</tbody></table>\n<p>각 인덱스의 최솟값을 담은 배열을 A라고 했을 때, 점화식은 다음과 같다.</p>\n<ul>\n<li>1을 뺐을 때: <code>A[n - 1] + 1</code></li>\n<li>n % 2 == 0일 때: <code>A[n / 2 == 0] + 1</code></li>\n<li>n % 3 == 0일 때: <code>A[n / 3 == 0] + 1</code></li>\n</ul>\n<p>횟수를 계산해야 하기 때문에 1을 더한다. 각 케이스의 값을 비교해 최소값을 찾아내서 A[n] 배열에 넣어주면 된다.</p>\n<h2 id=\"Code-JAVA-Bottom-up\"><a href=\"#Code-JAVA-Bottom-up\" class=\"headerlink\" title=\"Code (JAVA) - Bottom-up\"></a>Code (JAVA) - Bottom-up</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\">    arr[<span class=\"number\">0</span>] = arr[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      arr[i] = arr[i - <span class=\"number\">1</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(i % <span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; arr[i] &gt; arr[i / <span class=\"number\">2</span>] + <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        arr[i] = arr[i / <span class=\"number\">2</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(i % <span class=\"number\">3</span> == <span class=\"number\">0</span> &amp;&amp; arr[i] &gt; arr[i / <span class=\"number\">3</span>] + <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        arr[i] = arr[i / <span class=\"number\">3</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(arr[n]);</span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-JAVA-Top-down\"><a href=\"#Code-JAVA-Top-down\" class=\"headerlink\" title=\"Code (JAVA) - Top-down\"></a>Code (JAVA) - Top-down</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[] dp;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">dp</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(dp[n] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      dp[n] = dp(n - <span class=\"number\">1</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(n % <span class=\"number\">3</span> == <span class=\"number\">0</span> &amp;&amp; dp[n] &gt; dp(n / <span class=\"number\">3</span>) + <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        dp[n] = dp(n / <span class=\"number\">3</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(n % <span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; dp[n] &gt; dp(n / <span class=\"number\">2</span>) + <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        dp[n] = dp(n / <span class=\"number\">2</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(br.readLine());</span><br><span class=\"line\">    dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    System.out.println(dp(N));</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-Javascript\"><a href=\"#Code-Javascript\" class=\"headerlink\" title=\"Code (Javascript)\"></a>Code (Javascript)</h2><ul>\n<li>역시 백준에서 자바스크립트 입력은… 노우…</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> input = fs.readFileSync(<span class=\"string\">'/dev/stdin'</span>).toString().split(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> X = <span class=\"built_in\">parseInt</span>(input[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1부터 3까지의 값을 미리 넣어준다.</span></span><br><span class=\"line\"><span class=\"comment\">// 편의를 위해 인덱스는 1부터 시작한다</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> dp = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">4</span>; i &lt;= X; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// -1을 뺄 때, 2로 나눌 때, 3으로 나눌 때의 값을 비교해 최소값을 알아냄</span></span><br><span class=\"line\">  <span class=\"comment\">// -1을 했을 때</span></span><br><span class=\"line\">  dp[i] = dp[i - <span class=\"number\">1</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 3으로 나누어 떨어지는 수일 때</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i % <span class=\"number\">3</span> === <span class=\"number\">0</span>) dp[i] = <span class=\"built_in\">Math</span>.min(dp[i], dp[i / <span class=\"number\">3</span>] + <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 2로 나누어 떨어지는 수일 때</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> === <span class=\"number\">0</span>) dp[i] = <span class=\"built_in\">Math</span>.min(dp[i], dp[i / <span class=\"number\">2</span>] + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dp[X])</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xNDYz\" title=\"https://www.acmicpc.net/problem/1463\">1463<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><table>\n<thead>\n<tr>\n<th align=\"left\">인덱스</th>\n<th align=\"left\">횟수</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\">1</td>\n</tr>\n</tbody></table>\n<p>위 테이블을 보면, 1은 만들 필요가 없으니까 0, 2와 3은 2로 3으로 나누어 떨어지고, 몫이 1이 나오니까 횟수가 1이다. 그렇다면 4부터는 어떻게 구할까?</p>\n<p>| 인덱스 | 횟수 |<br>| 4 | 3, 1 또는 2, 1 |</p>\n<p>4를 1로 만드는 최솟값을 구해야 하는 경우, 4를 1로 뺐을 때 3이 되고, 3의 값은 1이므로 총 두 번이 된다. 하지만 4를 2로 나누는 경우 몫이 2가 되는데, 2의 값은 1이므로 3으로 나누었을 때와 마찬가지로 총 두 번이 된다. 이러나저러나 4를 1로 만드는 최솟값은 2가 되는 것이다.</p>\n<p>| 인덱스 | 횟수 |<br>| 5 | 4, 3, 1 또는 4, 2, 1 |</p>\n<p>다시 5를 예로 들자면, 5는 3이나 2로 나누어 떨어지지 않으므로 <strong>무조건 1을 빼고 시작</strong>해야 한다. 5-1=4인데, 4의 횟수는 아까 구한 2이다. 따라서 5의 최솟값은 <strong>4의 연산 횟수(2) + 빼기 연산(1) = 3</strong>이 된다.</p>\n<p>이렇게 10까지 반복하면 아래와 같은 테이블이 만들어지게 된다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">인덱스</th>\n<th align=\"left\">횟수</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">1</td>\n<td align=\"left\">0</td>\n</tr>\n<tr>\n<td align=\"left\">2</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\">3</td>\n<td align=\"left\">1</td>\n</tr>\n<tr>\n<td align=\"left\">4</td>\n<td align=\"left\">3, 1 또는 2, 1</td>\n</tr>\n<tr>\n<td align=\"left\">5</td>\n<td align=\"left\">4, 3, 1</td>\n</tr>\n<tr>\n<td align=\"left\">6</td>\n<td align=\"left\">3, 1 또는 2, 1</td>\n</tr>\n<tr>\n<td align=\"left\">7</td>\n<td align=\"left\">6, 3, 1</td>\n</tr>\n<tr>\n<td align=\"left\">8</td>\n<td align=\"left\">4, 3, 1</td>\n</tr>\n<tr>\n<td align=\"left\">9</td>\n<td align=\"left\">3, 1</td>\n</tr>\n<tr>\n<td align=\"left\">10</td>\n<td align=\"left\">9, 3, 1</td>\n</tr>\n</tbody></table>\n<p>각 인덱스의 최솟값을 담은 배열을 A라고 했을 때, 점화식은 다음과 같다.</p>\n<ul>\n<li>1을 뺐을 때: <code>A[n - 1] + 1</code></li>\n<li>n % 2 == 0일 때: <code>A[n / 2 == 0] + 1</code></li>\n<li>n % 3 == 0일 때: <code>A[n / 3 == 0] + 1</code></li>\n</ul>\n<p>횟수를 계산해야 하기 때문에 1을 더한다. 각 케이스의 값을 비교해 최소값을 찾아내서 A[n] 배열에 넣어주면 된다.</p>\n<h2 id=\"Code-JAVA-Bottom-up\"><a href=\"#Code-JAVA-Bottom-up\" class=\"headerlink\" title=\"Code (JAVA) - Bottom-up\"></a>Code (JAVA) - Bottom-up</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\">    arr[<span class=\"number\">0</span>] = arr[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      arr[i] = arr[i - <span class=\"number\">1</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(i % <span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; arr[i] &gt; arr[i / <span class=\"number\">2</span>] + <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        arr[i] = arr[i / <span class=\"number\">2</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(i % <span class=\"number\">3</span> == <span class=\"number\">0</span> &amp;&amp; arr[i] &gt; arr[i / <span class=\"number\">3</span>] + <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        arr[i] = arr[i / <span class=\"number\">3</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(arr[n]);</span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-JAVA-Top-down\"><a href=\"#Code-JAVA-Top-down\" class=\"headerlink\" title=\"Code (JAVA) - Top-down\"></a>Code (JAVA) - Top-down</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[] dp;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">dp</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n &lt;= <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(dp[n] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      dp[n] = dp(n - <span class=\"number\">1</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(n % <span class=\"number\">3</span> == <span class=\"number\">0</span> &amp;&amp; dp[n] &gt; dp(n / <span class=\"number\">3</span>) + <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        dp[n] = dp(n / <span class=\"number\">3</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(n % <span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; dp[n] &gt; dp(n / <span class=\"number\">2</span>) + <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        dp[n] = dp(n / <span class=\"number\">2</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> dp[n];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(br.readLine());</span><br><span class=\"line\">    dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    System.out.println(dp(N));</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-Javascript\"><a href=\"#Code-Javascript\" class=\"headerlink\" title=\"Code (Javascript)\"></a>Code (Javascript)</h2><ul>\n<li>역시 백준에서 자바스크립트 입력은… 노우…</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> input = fs.readFileSync(<span class=\"string\">'/dev/stdin'</span>).toString().split(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> X = <span class=\"built_in\">parseInt</span>(input[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1부터 3까지의 값을 미리 넣어준다.</span></span><br><span class=\"line\"><span class=\"comment\">// 편의를 위해 인덱스는 1부터 시작한다</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> dp = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">4</span>; i &lt;= X; i++) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// -1을 뺄 때, 2로 나눌 때, 3으로 나눌 때의 값을 비교해 최소값을 알아냄</span></span><br><span class=\"line\">  <span class=\"comment\">// -1을 했을 때</span></span><br><span class=\"line\">  dp[i] = dp[i - <span class=\"number\">1</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 3으로 나누어 떨어지는 수일 때</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i % <span class=\"number\">3</span> === <span class=\"number\">0</span>) dp[i] = <span class=\"built_in\">Math</span>.min(dp[i], dp[i / <span class=\"number\">3</span>] + <span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 2로 나누어 떨어지는 수일 때</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i % <span class=\"number\">2</span> === <span class=\"number\">0</span>) dp[i] = <span class=\"built_in\">Math</span>.min(dp[i], dp[i / <span class=\"number\">2</span>] + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(dp[X])</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/11726] 2×n 타일링","_content":"> Baekjoon Online Judge - [11726](https://www.acmicpc.net/problem/11726)\n\n## Review\n* 타일링을 하나하나 그려서 깨달음을 얻은 문제.\n* 전반적인 건 피보나치 수열과 비슷하다.\n* 맨 앞이 1이 될 경우, 2가 될 경우를 전부 계산하면 된다.\n* 점화식은 `A[n] = A[n-1] + A[n-2]`\n* 금방 풀은 줄 알았는데 자꾸 틀렸다고 하길래 보니까 10007로 나눈 나머지를 출력하지 않아서 그런 거였다. 920을 입력할 경우 답이 음수가 나왔는데(오버플로우) 정답에 나누기를 하지 말고 중간에 더할 때부터 나머지 값을 계산했더니 정답이 나왔다.\n* 다른 사람들이 푼 걸 보니까 for문으로 많이 풀었더라... 나는 피보나치 함수 풀었던 거 재활용하느라 함수를 만들어서 풀었다.\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  \n  static long[] memo;\n  \n  public static long tile(int n) {\n    if(n == 1) {\n      memo[1] = 1;\n      return memo[1];\n    } else if(n == 2) {\n      memo[2] = 2;\n      return memo[2];\n    } else if(memo[n] != 0) {\n      return memo[n] %= 10007;\n    } else {\n      memo[n] = tile(n - 1) + tile(n - 2);\n      return memo[n] %= 10007;\n    }\n  }\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int input = Integer.parseInt(bf.readLine());\n    memo = new long[input + 1];\n    System.out.println(tile(input));\n  }\n}\n```","source":"_posts/2018-10-07-bj-11726.md","raw":"---\ntitle: \"[백준/11726] 2×n 타일링\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [11726](https://www.acmicpc.net/problem/11726)\n\n## Review\n* 타일링을 하나하나 그려서 깨달음을 얻은 문제.\n* 전반적인 건 피보나치 수열과 비슷하다.\n* 맨 앞이 1이 될 경우, 2가 될 경우를 전부 계산하면 된다.\n* 점화식은 `A[n] = A[n-1] + A[n-2]`\n* 금방 풀은 줄 알았는데 자꾸 틀렸다고 하길래 보니까 10007로 나눈 나머지를 출력하지 않아서 그런 거였다. 920을 입력할 경우 답이 음수가 나왔는데(오버플로우) 정답에 나누기를 하지 말고 중간에 더할 때부터 나머지 값을 계산했더니 정답이 나왔다.\n* 다른 사람들이 푼 걸 보니까 for문으로 많이 풀었더라... 나는 피보나치 함수 풀었던 거 재활용하느라 함수를 만들어서 풀었다.\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  \n  static long[] memo;\n  \n  public static long tile(int n) {\n    if(n == 1) {\n      memo[1] = 1;\n      return memo[1];\n    } else if(n == 2) {\n      memo[2] = 2;\n      return memo[2];\n    } else if(memo[n] != 0) {\n      return memo[n] %= 10007;\n    } else {\n      memo[n] = tile(n - 1) + tile(n - 2);\n      return memo[n] %= 10007;\n    }\n  }\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int input = Integer.parseInt(bf.readLine());\n    memo = new long[input + 1];\n    System.out.println(tile(input));\n  }\n}\n```","slug":"bj-11726","published":1,"date":"2018-10-06T15:00:00.000Z","updated":"2020-05-05T08:00:03.855Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgn002guv59fgqdaw45","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTcyNg==\" title=\"https://www.acmicpc.net/problem/11726\">11726<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>타일링을 하나하나 그려서 깨달음을 얻은 문제.</li>\n<li>전반적인 건 피보나치 수열과 비슷하다.</li>\n<li>맨 앞이 1이 될 경우, 2가 될 경우를 전부 계산하면 된다.</li>\n<li>점화식은 <code>A[n] = A[n-1] + A[n-2]</code></li>\n<li>금방 풀은 줄 알았는데 자꾸 틀렸다고 하길래 보니까 10007로 나눈 나머지를 출력하지 않아서 그런 거였다. 920을 입력할 경우 답이 음수가 나왔는데(오버플로우) 정답에 나누기를 하지 말고 중간에 더할 때부터 나머지 값을 계산했더니 정답이 나왔다.</li>\n<li>다른 사람들이 푼 걸 보니까 for문으로 많이 풀었더라… 나는 피보나치 함수 풀었던 거 재활용하느라 함수를 만들어서 풀었다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">long</span>[] memo;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">tile</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      memo[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">      memo[<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[<span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(memo[n] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n] %= <span class=\"number\">10007</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      memo[n] = tile(n - <span class=\"number\">1</span>) + tile(n - <span class=\"number\">2</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n] %= <span class=\"number\">10007</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> input = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    memo = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[input + <span class=\"number\">1</span>];</span><br><span class=\"line\">    System.out.println(tile(input));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTcyNg==\" title=\"https://www.acmicpc.net/problem/11726\">11726<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>타일링을 하나하나 그려서 깨달음을 얻은 문제.</li>\n<li>전반적인 건 피보나치 수열과 비슷하다.</li>\n<li>맨 앞이 1이 될 경우, 2가 될 경우를 전부 계산하면 된다.</li>\n<li>점화식은 <code>A[n] = A[n-1] + A[n-2]</code></li>\n<li>금방 풀은 줄 알았는데 자꾸 틀렸다고 하길래 보니까 10007로 나눈 나머지를 출력하지 않아서 그런 거였다. 920을 입력할 경우 답이 음수가 나왔는데(오버플로우) 정답에 나누기를 하지 말고 중간에 더할 때부터 나머지 값을 계산했더니 정답이 나왔다.</li>\n<li>다른 사람들이 푼 걸 보니까 for문으로 많이 풀었더라… 나는 피보나치 함수 풀었던 거 재활용하느라 함수를 만들어서 풀었다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">long</span>[] memo;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">tile</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      memo[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">      memo[<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[<span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(memo[n] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n] %= <span class=\"number\">10007</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      memo[n] = tile(n - <span class=\"number\">1</span>) + tile(n - <span class=\"number\">2</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n] %= <span class=\"number\">10007</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> input = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    memo = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[input + <span class=\"number\">1</span>];</span><br><span class=\"line\">    System.out.println(tile(input));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/1110] 더하기 사이클","_content":"> Baekjoon Online Judge - [1110](https://www.acmicpc.net/problem/1110)\n\n## Review\n* 단순 계산 문제.\n* 처음에는 input을 String으로 받아 charAt으로 자리를 따져가며 풀었는데 내가 너무 어렵게 접근한 거였더라... 역시 머리가 나쁘면 몸이 고생한다.\n* 나머지와 나누기 연산으로 각 자릿수를 구한 다음에 문제가 하라는대로 하면 된다.\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int input = Integer.parseInt(bf.readLine());\n    \n    int number = input;\n    int cnt = 0;\n    \n    do {\n      int left = number / 10;\n      int right = number % 10;\n      int hap = left + right;\n      \n      number = (right * 10) + (hap % 10);\n      cnt++;\n      } while(input != number);\n    \n    System.out.println(cnt);\n  }\n}\n```","source":"_posts/2018-10-10-bj-1110.md","raw":"---\ntitle: \"[백준/1110] 더하기 사이클\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [1110](https://www.acmicpc.net/problem/1110)\n\n## Review\n* 단순 계산 문제.\n* 처음에는 input을 String으로 받아 charAt으로 자리를 따져가며 풀었는데 내가 너무 어렵게 접근한 거였더라... 역시 머리가 나쁘면 몸이 고생한다.\n* 나머지와 나누기 연산으로 각 자릿수를 구한 다음에 문제가 하라는대로 하면 된다.\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int input = Integer.parseInt(bf.readLine());\n    \n    int number = input;\n    int cnt = 0;\n    \n    do {\n      int left = number / 10;\n      int right = number % 10;\n      int hap = left + right;\n      \n      number = (right * 10) + (hap % 10);\n      cnt++;\n      } while(input != number);\n    \n    System.out.println(cnt);\n  }\n}\n```","slug":"bj-1110","published":1,"date":"2018-10-09T15:00:00.000Z","updated":"2020-05-05T08:00:03.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgo002juv59cj2nbvxv","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTEw\" title=\"https://www.acmicpc.net/problem/1110\">1110<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>단순 계산 문제.</li>\n<li>처음에는 input을 String으로 받아 charAt으로 자리를 따져가며 풀었는데 내가 너무 어렵게 접근한 거였더라… 역시 머리가 나쁘면 몸이 고생한다.</li>\n<li>나머지와 나누기 연산으로 각 자릿수를 구한 다음에 문제가 하라는대로 하면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> input = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> number = input;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> left = number / <span class=\"number\">10</span>;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> right = number % <span class=\"number\">10</span>;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> hap = left + right;</span><br><span class=\"line\">      </span><br><span class=\"line\">      number = (right * <span class=\"number\">10</span>) + (hap % <span class=\"number\">10</span>);</span><br><span class=\"line\">      cnt++;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">while</span>(input != number);</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(cnt);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTEw\" title=\"https://www.acmicpc.net/problem/1110\">1110<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>단순 계산 문제.</li>\n<li>처음에는 input을 String으로 받아 charAt으로 자리를 따져가며 풀었는데 내가 너무 어렵게 접근한 거였더라… 역시 머리가 나쁘면 몸이 고생한다.</li>\n<li>나머지와 나누기 연산으로 각 자릿수를 구한 다음에 문제가 하라는대로 하면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> input = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> number = input;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> left = number / <span class=\"number\">10</span>;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> right = number % <span class=\"number\">10</span>;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> hap = left + right;</span><br><span class=\"line\">      </span><br><span class=\"line\">      number = (right * <span class=\"number\">10</span>) + (hap % <span class=\"number\">10</span>);</span><br><span class=\"line\">      cnt++;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">while</span>(input != number);</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(cnt);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[Javascript] this 정리","_content":"\n> 자바스크립트 this 바인딩\n\n자바스크립트의 this는 현재 실행 문맥이다. 여기서 현재 실행 문맥이라는 건 무엇을 뜻할까? 바로 **호출자**를 뜻한다.  \n호출자는 크게 세 가지로 나뉘어진다. 첫 번째는 **객체의 메소드**, 두 번째는 **함수**, 그리고 마지막으로 **생성자 함수**이다. 만약 this가 나온다면 이 세 가지 경우 중 하나이니 누가 호출했는지 보고 this가 어떤 의미를 가지는지를 따져보면 된다. 이를 함수 호출 패턴이라고 하며, 자바스크립트의 this 는 함수 호출 패턴에 따라 this 가 어떤 객체의 this 가 될 지 정해진다. 이를 this 바인딩이라고 한다.  \n바인딩(biding)의 사전적 의미는 묶이다인데, 누가 호출했는지에 따라 this가 호출자에게 묶인다는 의미로 이해하면 그나마 이해하기 쉬워진다.\n\n# 1. this 바인딩의 호출 패턴\n\n- **객체의 메소드**를 호출할 때의 this 바인딩\n- **함수**를 호출할 때의 this 바인딩\n- **생성자 함수**를 호출할 때의 this 바인딩\n\n## 1.1 객체의 메소드 호출할 때 this 바인딩\n\n자신을 호출한 객체에 바인딩이 된다.\n\n```javascript\nvar obj = {\n  sayName: function() {\n    console.log(this.name);\n  }\n};\n\nvar kim = obj;\nkim.name = \"kim\";\nkim.sayName(); // \"kim\"\n\nvar lee = obj;\nlee.name = \"lee\";\nlee.sayName(); // \"lee\"\n```\n\n## 1.2 함수를 호출할 때 this 바인딩\n\n전역 객체(window)에 바인딩이 된다.\n\n```javascript\nvar val = \"Hello\";\n\nvar func = function() {\n  console.log(this.val);\n};\nfunc(); // \"Hello\"\nconsole.log(this.val); // \"Hello\"\nconsole.log(window.val); //  \"Hello\"\nconsole.log(this === window); // true\n```\n\n하지만 함수 호출에서의 this 바인딩은 내부 함수를 호출할 때도 그대로 적용이 된다. 아래 예제를 보면, 결과가 2,3,4 로 나와야 할 것 같지만 그렇게 나오지 않는다. 왜냐면 자바스크립트가 내부 함수 호출 패턴을 정해놓지 않았기 때문에, 내부 함수도 함수 취급을 받아 이러한 결과가 나온 것이다.  \n따라서 함수 호출 패턴 패턴 규칙에 따라 내부 함수의 this 는 전역 객체(window)에 바인딩된다.\n\n```javascript\n// 전역 변수 value 정의\nvar value = 100;\n\n// myObject 객체 생성\nvar myObject = {\n  value: 1,\n  func1: function() {\n    this.value += 1;\n    console.log(\"func1() called. this.value : \" + this.value);\n\n    // func2() 내부 함수\n    func2 = function() {\n      this.value += 1;\n      console.log(\"func2() called. this.value : \" + this.value);\n\n      // func3() 내부 함수\n      func3 = function() {\n        this.value += 1;\n        console.log(\"func3() called. this.value : \" + this.value);\n      };\n\n      func3(); // func3() 내부 함수 호출\n    };\n    func2(); // func2() 내부 함수 호출\n  }\n};\nmyObject.func1(); // func1() 메소드 호출\n```\n\n위와 같은 상황을 피하려면, 부모 함수의 this 를 내부 함수가 접근 가능한 다른 변수에다 저장해야 한다. 보통 this 값을 저장하는 변수의 이름을 that 이라고 짓는다.\n\n```javascript\n// 내부 함수 this 바인딩\nvar value = 100;\n\nvar myObject = {\n  value: 1,\n  func1: function() {\n    var that = this; // 부모 함수의 this를 that으로 저장\n\n    this.value += 1;\n    console.log(\"func1() called. this.value : \" + this.value);\n\n    func2 = function() {\n      that.value += 1;\n      console.log(\"func2() called. this.value : \" + that.value);\n\n      func3 = function() {\n        that.value += 1;\n        console.log(\"func3() called. this.value : \" + that.value);\n      };\n      func3();\n    };\n    func2();\n  }\n};\n\nmyObject.func1(); // func1 메소드 호출\n```\n\n## 1.3 생성자 함수를 호출할 때 this 바인딩\n\nnew 로 생성자 함수를 생성한 객체에 바인딩이 된다.\n\n```javascript\nvar Person = function(name) {\n  this.name = name;\n};\n\nvar kim = new Person(\"kim\");\nconsole.log(kim.name); //kim\n\nvar lee = new Person(\"lee\");\nconsole.log(lee.name); //lee\n```\n","source":"_posts/2018-10-12-js-this.md","raw":"---\ntitle: \"[Javascript] this 정리\"\ntags: [javascript]\ncategories: 자바스크립트\n---\n\n> 자바스크립트 this 바인딩\n\n자바스크립트의 this는 현재 실행 문맥이다. 여기서 현재 실행 문맥이라는 건 무엇을 뜻할까? 바로 **호출자**를 뜻한다.  \n호출자는 크게 세 가지로 나뉘어진다. 첫 번째는 **객체의 메소드**, 두 번째는 **함수**, 그리고 마지막으로 **생성자 함수**이다. 만약 this가 나온다면 이 세 가지 경우 중 하나이니 누가 호출했는지 보고 this가 어떤 의미를 가지는지를 따져보면 된다. 이를 함수 호출 패턴이라고 하며, 자바스크립트의 this 는 함수 호출 패턴에 따라 this 가 어떤 객체의 this 가 될 지 정해진다. 이를 this 바인딩이라고 한다.  \n바인딩(biding)의 사전적 의미는 묶이다인데, 누가 호출했는지에 따라 this가 호출자에게 묶인다는 의미로 이해하면 그나마 이해하기 쉬워진다.\n\n# 1. this 바인딩의 호출 패턴\n\n- **객체의 메소드**를 호출할 때의 this 바인딩\n- **함수**를 호출할 때의 this 바인딩\n- **생성자 함수**를 호출할 때의 this 바인딩\n\n## 1.1 객체의 메소드 호출할 때 this 바인딩\n\n자신을 호출한 객체에 바인딩이 된다.\n\n```javascript\nvar obj = {\n  sayName: function() {\n    console.log(this.name);\n  }\n};\n\nvar kim = obj;\nkim.name = \"kim\";\nkim.sayName(); // \"kim\"\n\nvar lee = obj;\nlee.name = \"lee\";\nlee.sayName(); // \"lee\"\n```\n\n## 1.2 함수를 호출할 때 this 바인딩\n\n전역 객체(window)에 바인딩이 된다.\n\n```javascript\nvar val = \"Hello\";\n\nvar func = function() {\n  console.log(this.val);\n};\nfunc(); // \"Hello\"\nconsole.log(this.val); // \"Hello\"\nconsole.log(window.val); //  \"Hello\"\nconsole.log(this === window); // true\n```\n\n하지만 함수 호출에서의 this 바인딩은 내부 함수를 호출할 때도 그대로 적용이 된다. 아래 예제를 보면, 결과가 2,3,4 로 나와야 할 것 같지만 그렇게 나오지 않는다. 왜냐면 자바스크립트가 내부 함수 호출 패턴을 정해놓지 않았기 때문에, 내부 함수도 함수 취급을 받아 이러한 결과가 나온 것이다.  \n따라서 함수 호출 패턴 패턴 규칙에 따라 내부 함수의 this 는 전역 객체(window)에 바인딩된다.\n\n```javascript\n// 전역 변수 value 정의\nvar value = 100;\n\n// myObject 객체 생성\nvar myObject = {\n  value: 1,\n  func1: function() {\n    this.value += 1;\n    console.log(\"func1() called. this.value : \" + this.value);\n\n    // func2() 내부 함수\n    func2 = function() {\n      this.value += 1;\n      console.log(\"func2() called. this.value : \" + this.value);\n\n      // func3() 내부 함수\n      func3 = function() {\n        this.value += 1;\n        console.log(\"func3() called. this.value : \" + this.value);\n      };\n\n      func3(); // func3() 내부 함수 호출\n    };\n    func2(); // func2() 내부 함수 호출\n  }\n};\nmyObject.func1(); // func1() 메소드 호출\n```\n\n위와 같은 상황을 피하려면, 부모 함수의 this 를 내부 함수가 접근 가능한 다른 변수에다 저장해야 한다. 보통 this 값을 저장하는 변수의 이름을 that 이라고 짓는다.\n\n```javascript\n// 내부 함수 this 바인딩\nvar value = 100;\n\nvar myObject = {\n  value: 1,\n  func1: function() {\n    var that = this; // 부모 함수의 this를 that으로 저장\n\n    this.value += 1;\n    console.log(\"func1() called. this.value : \" + this.value);\n\n    func2 = function() {\n      that.value += 1;\n      console.log(\"func2() called. this.value : \" + that.value);\n\n      func3 = function() {\n        that.value += 1;\n        console.log(\"func3() called. this.value : \" + that.value);\n      };\n      func3();\n    };\n    func2();\n  }\n};\n\nmyObject.func1(); // func1 메소드 호출\n```\n\n## 1.3 생성자 함수를 호출할 때 this 바인딩\n\nnew 로 생성자 함수를 생성한 객체에 바인딩이 된다.\n\n```javascript\nvar Person = function(name) {\n  this.name = name;\n};\n\nvar kim = new Person(\"kim\");\nconsole.log(kim.name); //kim\n\nvar lee = new Person(\"lee\");\nconsole.log(lee.name); //lee\n```\n","slug":"js-this","published":1,"date":"2018-10-11T15:00:00.000Z","updated":"2020-05-05T08:00:03.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgp002nuv593be3ctsn","content":"<blockquote>\n<p>자바스크립트 this 바인딩</p>\n</blockquote>\n<p>자바스크립트의 this는 현재 실행 문맥이다. 여기서 현재 실행 문맥이라는 건 무엇을 뜻할까? 바로 <strong>호출자</strong>를 뜻한다.<br>호출자는 크게 세 가지로 나뉘어진다. 첫 번째는 <strong>객체의 메소드</strong>, 두 번째는 <strong>함수</strong>, 그리고 마지막으로 <strong>생성자 함수</strong>이다. 만약 this가 나온다면 이 세 가지 경우 중 하나이니 누가 호출했는지 보고 this가 어떤 의미를 가지는지를 따져보면 된다. 이를 함수 호출 패턴이라고 하며, 자바스크립트의 this 는 함수 호출 패턴에 따라 this 가 어떤 객체의 this 가 될 지 정해진다. 이를 this 바인딩이라고 한다.<br>바인딩(biding)의 사전적 의미는 묶이다인데, 누가 호출했는지에 따라 this가 호출자에게 묶인다는 의미로 이해하면 그나마 이해하기 쉬워진다.</p>\n<h1 id=\"1-this-바인딩의-호출-패턴\"><a href=\"#1-this-바인딩의-호출-패턴\" class=\"headerlink\" title=\"1. this 바인딩의 호출 패턴\"></a>1. this 바인딩의 호출 패턴</h1><ul>\n<li><strong>객체의 메소드</strong>를 호출할 때의 this 바인딩</li>\n<li><strong>함수</strong>를 호출할 때의 this 바인딩</li>\n<li><strong>생성자 함수</strong>를 호출할 때의 this 바인딩</li>\n</ul>\n<h2 id=\"1-1-객체의-메소드-호출할-때-this-바인딩\"><a href=\"#1-1-객체의-메소드-호출할-때-this-바인딩\" class=\"headerlink\" title=\"1.1 객체의 메소드 호출할 때 this 바인딩\"></a>1.1 객체의 메소드 호출할 때 this 바인딩</h2><p>자신을 호출한 객체에 바인딩이 된다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  sayName: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> kim = obj;</span><br><span class=\"line\">kim.name = <span class=\"string\">\"kim\"</span>;</span><br><span class=\"line\">kim.sayName(); <span class=\"comment\">// \"kim\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> lee = obj;</span><br><span class=\"line\">lee.name = <span class=\"string\">\"lee\"</span>;</span><br><span class=\"line\">lee.sayName(); <span class=\"comment\">// \"lee\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-2-함수를-호출할-때-this-바인딩\"><a href=\"#1-2-함수를-호출할-때-this-바인딩\" class=\"headerlink\" title=\"1.2 함수를 호출할 때 this 바인딩\"></a>1.2 함수를 호출할 때 this 바인딩</h2><p>전역 객체(window)에 바인딩이 된다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> val = <span class=\"string\">\"Hello\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> func = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.val);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">func(); <span class=\"comment\">// \"Hello\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.val); <span class=\"comment\">// \"Hello\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.val); <span class=\"comment\">//  \"Hello\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span> === <span class=\"built_in\">window</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>하지만 함수 호출에서의 this 바인딩은 내부 함수를 호출할 때도 그대로 적용이 된다. 아래 예제를 보면, 결과가 2,3,4 로 나와야 할 것 같지만 그렇게 나오지 않는다. 왜냐면 자바스크립트가 내부 함수 호출 패턴을 정해놓지 않았기 때문에, 내부 함수도 함수 취급을 받아 이러한 결과가 나온 것이다.<br>따라서 함수 호출 패턴 패턴 규칙에 따라 내부 함수의 this 는 전역 객체(window)에 바인딩된다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 전역 변수 value 정의</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> value = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// myObject 객체 생성</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject = &#123;</span><br><span class=\"line\">  value: <span class=\"number\">1</span>,</span><br><span class=\"line\">  func1: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.value += <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"func1() called. this.value : \"</span> + <span class=\"keyword\">this</span>.value);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// func2() 내부 함수</span></span><br><span class=\"line\">    func2 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.value += <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"func2() called. this.value : \"</span> + <span class=\"keyword\">this</span>.value);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// func3() 내부 함수</span></span><br><span class=\"line\">      func3 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.value += <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"func3() called. this.value : \"</span> + <span class=\"keyword\">this</span>.value);</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">      func3(); <span class=\"comment\">// func3() 내부 함수 호출</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    func2(); <span class=\"comment\">// func2() 내부 함수 호출</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">myObject.func1(); <span class=\"comment\">// func1() 메소드 호출</span></span><br></pre></td></tr></table></figure>\n\n<p>위와 같은 상황을 피하려면, 부모 함수의 this 를 내부 함수가 접근 가능한 다른 변수에다 저장해야 한다. 보통 this 값을 저장하는 변수의 이름을 that 이라고 짓는다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 내부 함수 this 바인딩</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> value = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject = &#123;</span><br><span class=\"line\">  value: <span class=\"number\">1</span>,</span><br><span class=\"line\">  func1: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>; <span class=\"comment\">// 부모 함수의 this를 that으로 저장</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.value += <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"func1() called. this.value : \"</span> + <span class=\"keyword\">this</span>.value);</span><br><span class=\"line\"></span><br><span class=\"line\">    func2 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      that.value += <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"func2() called. this.value : \"</span> + that.value);</span><br><span class=\"line\"></span><br><span class=\"line\">      func3 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        that.value += <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"func3() called. this.value : \"</span> + that.value);</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      func3();</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    func2();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">myObject.func1(); <span class=\"comment\">// func1 메소드 호출</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-3-생성자-함수를-호출할-때-this-바인딩\"><a href=\"#1-3-생성자-함수를-호출할-때-this-바인딩\" class=\"headerlink\" title=\"1.3 생성자 함수를 호출할 때 this 바인딩\"></a>1.3 생성자 함수를 호출할 때 this 바인딩</h2><p>new 로 생성자 함수를 생성한 객체에 바인딩이 된다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Person = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> kim = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"kim\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(kim.name); <span class=\"comment\">//kim</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> lee = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"lee\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(lee.name); <span class=\"comment\">//lee</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>자바스크립트 this 바인딩</p>\n</blockquote>\n<p>자바스크립트의 this는 현재 실행 문맥이다. 여기서 현재 실행 문맥이라는 건 무엇을 뜻할까? 바로 <strong>호출자</strong>를 뜻한다.<br>호출자는 크게 세 가지로 나뉘어진다. 첫 번째는 <strong>객체의 메소드</strong>, 두 번째는 <strong>함수</strong>, 그리고 마지막으로 <strong>생성자 함수</strong>이다. 만약 this가 나온다면 이 세 가지 경우 중 하나이니 누가 호출했는지 보고 this가 어떤 의미를 가지는지를 따져보면 된다. 이를 함수 호출 패턴이라고 하며, 자바스크립트의 this 는 함수 호출 패턴에 따라 this 가 어떤 객체의 this 가 될 지 정해진다. 이를 this 바인딩이라고 한다.<br>바인딩(biding)의 사전적 의미는 묶이다인데, 누가 호출했는지에 따라 this가 호출자에게 묶인다는 의미로 이해하면 그나마 이해하기 쉬워진다.</p>\n<h1 id=\"1-this-바인딩의-호출-패턴\"><a href=\"#1-this-바인딩의-호출-패턴\" class=\"headerlink\" title=\"1. this 바인딩의 호출 패턴\"></a>1. this 바인딩의 호출 패턴</h1><ul>\n<li><strong>객체의 메소드</strong>를 호출할 때의 this 바인딩</li>\n<li><strong>함수</strong>를 호출할 때의 this 바인딩</li>\n<li><strong>생성자 함수</strong>를 호출할 때의 this 바인딩</li>\n</ul>\n<h2 id=\"1-1-객체의-메소드-호출할-때-this-바인딩\"><a href=\"#1-1-객체의-메소드-호출할-때-this-바인딩\" class=\"headerlink\" title=\"1.1 객체의 메소드 호출할 때 this 바인딩\"></a>1.1 객체의 메소드 호출할 때 this 바인딩</h2><p>자신을 호출한 객체에 바인딩이 된다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123;</span><br><span class=\"line\">  sayName: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> kim = obj;</span><br><span class=\"line\">kim.name = <span class=\"string\">\"kim\"</span>;</span><br><span class=\"line\">kim.sayName(); <span class=\"comment\">// \"kim\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> lee = obj;</span><br><span class=\"line\">lee.name = <span class=\"string\">\"lee\"</span>;</span><br><span class=\"line\">lee.sayName(); <span class=\"comment\">// \"lee\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-2-함수를-호출할-때-this-바인딩\"><a href=\"#1-2-함수를-호출할-때-this-바인딩\" class=\"headerlink\" title=\"1.2 함수를 호출할 때 this 바인딩\"></a>1.2 함수를 호출할 때 this 바인딩</h2><p>전역 객체(window)에 바인딩이 된다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> val = <span class=\"string\">\"Hello\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> func = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.val);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">func(); <span class=\"comment\">// \"Hello\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.val); <span class=\"comment\">// \"Hello\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>.val); <span class=\"comment\">//  \"Hello\"</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span> === <span class=\"built_in\">window</span>); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p>하지만 함수 호출에서의 this 바인딩은 내부 함수를 호출할 때도 그대로 적용이 된다. 아래 예제를 보면, 결과가 2,3,4 로 나와야 할 것 같지만 그렇게 나오지 않는다. 왜냐면 자바스크립트가 내부 함수 호출 패턴을 정해놓지 않았기 때문에, 내부 함수도 함수 취급을 받아 이러한 결과가 나온 것이다.<br>따라서 함수 호출 패턴 패턴 규칙에 따라 내부 함수의 this 는 전역 객체(window)에 바인딩된다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 전역 변수 value 정의</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> value = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// myObject 객체 생성</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject = &#123;</span><br><span class=\"line\">  value: <span class=\"number\">1</span>,</span><br><span class=\"line\">  func1: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.value += <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"func1() called. this.value : \"</span> + <span class=\"keyword\">this</span>.value);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// func2() 내부 함수</span></span><br><span class=\"line\">    func2 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.value += <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"func2() called. this.value : \"</span> + <span class=\"keyword\">this</span>.value);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// func3() 내부 함수</span></span><br><span class=\"line\">      func3 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.value += <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"func3() called. this.value : \"</span> + <span class=\"keyword\">this</span>.value);</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">      func3(); <span class=\"comment\">// func3() 내부 함수 호출</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    func2(); <span class=\"comment\">// func2() 내부 함수 호출</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">myObject.func1(); <span class=\"comment\">// func1() 메소드 호출</span></span><br></pre></td></tr></table></figure>\n\n<p>위와 같은 상황을 피하려면, 부모 함수의 this 를 내부 함수가 접근 가능한 다른 변수에다 저장해야 한다. 보통 this 값을 저장하는 변수의 이름을 that 이라고 짓는다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 내부 함수 this 바인딩</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> value = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject = &#123;</span><br><span class=\"line\">  value: <span class=\"number\">1</span>,</span><br><span class=\"line\">  func1: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>; <span class=\"comment\">// 부모 함수의 this를 that으로 저장</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.value += <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"func1() called. this.value : \"</span> + <span class=\"keyword\">this</span>.value);</span><br><span class=\"line\"></span><br><span class=\"line\">    func2 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      that.value += <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">\"func2() called. this.value : \"</span> + that.value);</span><br><span class=\"line\"></span><br><span class=\"line\">      func3 = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        that.value += <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"func3() called. this.value : \"</span> + that.value);</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      func3();</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    func2();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">myObject.func1(); <span class=\"comment\">// func1 메소드 호출</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-3-생성자-함수를-호출할-때-this-바인딩\"><a href=\"#1-3-생성자-함수를-호출할-때-this-바인딩\" class=\"headerlink\" title=\"1.3 생성자 함수를 호출할 때 this 바인딩\"></a>1.3 생성자 함수를 호출할 때 this 바인딩</h2><p>new 로 생성자 함수를 생성한 객체에 바인딩이 된다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Person = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> kim = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"kim\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(kim.name); <span class=\"comment\">//kim</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> lee = <span class=\"keyword\">new</span> Person(<span class=\"string\">\"lee\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(lee.name); <span class=\"comment\">//lee</span></span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/11727] 2×n 타일링 2","_content":"\n> Baekjoon Online Judge - [11727](https://www.acmicpc.net/problem/11727)\n\n## Review\n\n- 백준 11726번 문제를 조금만 바꾸면 된다.\n- 2x2 타일이 추가된 것이므로, 그 말인 즉슨 n-2인 경우가 2배가 된다는 것이다.\n- 점화식은 `A[n] = A[n-1] + A[n-2] * 2`\n- 참고로 memo[2]일 경우의 값을 3으로 바꿔주어야 한다. 직사각형이 2x2 크기인 경우의 경우의 수가 3이기 때문.\n\n## Code 1 (JAVA)\n\n```java\nimport java.io.*;\n\npublic class Main {\n\n  static long[] memo;\n\n  public static long tile(int n) {\n    if(n == 1) {\n      memo[1] = 1;\n      return memo[1];\n    } else if(n == 2) {\n      memo[2] = 3;\n      return memo[2];\n    } else if(memo[n] != 0) {\n      return memo[n] %= 10007;\n    } else {\n      memo[n] = tile(n - 1) + tile(n - 2) * 2;\n      return memo[n] %= 10007;\n    }\n  }\n\n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int input = Integer.parseInt(bf.readLine());\n    memo = new long[input + 1];\n    System.out.println(tile(input));\n  }\n}\n```\n\n## Code 2 (JAVA)\n\n```java\nimport java.io.*;\n\npublic class Main {\n\n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int input = Integer.parseInt(bf.readLine());\n    long[] memo;\n\n    memo = new long[1001];\n\n    memo[1] = 1;\n    memo[2] = 3;\n\n    for(int i = 3; i <= input; i++) {\n      memo[i] = (memo[i-1] + memo[i-2] * 2) % 10007;\n    }\n\n    System.out.println(memo[input]);\n  }\n}\n```\n","source":"_posts/2018-10-13-bj-11727.md","raw":"---\ntitle: \"[백준/11727] 2×n 타일링 2\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [11727](https://www.acmicpc.net/problem/11727)\n\n## Review\n\n- 백준 11726번 문제를 조금만 바꾸면 된다.\n- 2x2 타일이 추가된 것이므로, 그 말인 즉슨 n-2인 경우가 2배가 된다는 것이다.\n- 점화식은 `A[n] = A[n-1] + A[n-2] * 2`\n- 참고로 memo[2]일 경우의 값을 3으로 바꿔주어야 한다. 직사각형이 2x2 크기인 경우의 경우의 수가 3이기 때문.\n\n## Code 1 (JAVA)\n\n```java\nimport java.io.*;\n\npublic class Main {\n\n  static long[] memo;\n\n  public static long tile(int n) {\n    if(n == 1) {\n      memo[1] = 1;\n      return memo[1];\n    } else if(n == 2) {\n      memo[2] = 3;\n      return memo[2];\n    } else if(memo[n] != 0) {\n      return memo[n] %= 10007;\n    } else {\n      memo[n] = tile(n - 1) + tile(n - 2) * 2;\n      return memo[n] %= 10007;\n    }\n  }\n\n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int input = Integer.parseInt(bf.readLine());\n    memo = new long[input + 1];\n    System.out.println(tile(input));\n  }\n}\n```\n\n## Code 2 (JAVA)\n\n```java\nimport java.io.*;\n\npublic class Main {\n\n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int input = Integer.parseInt(bf.readLine());\n    long[] memo;\n\n    memo = new long[1001];\n\n    memo[1] = 1;\n    memo[2] = 3;\n\n    for(int i = 3; i <= input; i++) {\n      memo[i] = (memo[i-1] + memo[i-2] * 2) % 10007;\n    }\n\n    System.out.println(memo[input]);\n  }\n}\n```\n","slug":"bj-11727","published":1,"date":"2018-10-12T15:00:00.000Z","updated":"2020-05-05T08:00:03.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgq002quv59gn9z5vd4","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTcyNw==\" title=\"https://www.acmicpc.net/problem/11727\">11727<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>백준 11726번 문제를 조금만 바꾸면 된다.</li>\n<li>2x2 타일이 추가된 것이므로, 그 말인 즉슨 n-2인 경우가 2배가 된다는 것이다.</li>\n<li>점화식은 <code>A[n] = A[n-1] + A[n-2] * 2</code></li>\n<li>참고로 memo[2]일 경우의 값을 3으로 바꿔주어야 한다. 직사각형이 2x2 크기인 경우의 경우의 수가 3이기 때문.</li>\n</ul>\n<h2 id=\"Code-1-JAVA\"><a href=\"#Code-1-JAVA\" class=\"headerlink\" title=\"Code 1 (JAVA)\"></a>Code 1 (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">long</span>[] memo;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">tile</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      memo[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">      memo[<span class=\"number\">2</span>] = <span class=\"number\">3</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[<span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(memo[n] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n] %= <span class=\"number\">10007</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      memo[n] = tile(n - <span class=\"number\">1</span>) + tile(n - <span class=\"number\">2</span>) * <span class=\"number\">2</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n] %= <span class=\"number\">10007</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> input = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    memo = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[input + <span class=\"number\">1</span>];</span><br><span class=\"line\">    System.out.println(tile(input));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-2-JAVA\"><a href=\"#Code-2-JAVA\" class=\"headerlink\" title=\"Code 2 (JAVA)\"></a>Code 2 (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> input = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">long</span>[] memo;</span><br><span class=\"line\"></span><br><span class=\"line\">    memo = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[<span class=\"number\">1001</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    memo[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    memo[<span class=\"number\">2</span>] = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">3</span>; i &lt;= input; i++) &#123;</span><br><span class=\"line\">      memo[i] = (memo[i-<span class=\"number\">1</span>] + memo[i-<span class=\"number\">2</span>] * <span class=\"number\">2</span>) % <span class=\"number\">10007</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(memo[input]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTcyNw==\" title=\"https://www.acmicpc.net/problem/11727\">11727<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>백준 11726번 문제를 조금만 바꾸면 된다.</li>\n<li>2x2 타일이 추가된 것이므로, 그 말인 즉슨 n-2인 경우가 2배가 된다는 것이다.</li>\n<li>점화식은 <code>A[n] = A[n-1] + A[n-2] * 2</code></li>\n<li>참고로 memo[2]일 경우의 값을 3으로 바꿔주어야 한다. 직사각형이 2x2 크기인 경우의 경우의 수가 3이기 때문.</li>\n</ul>\n<h2 id=\"Code-1-JAVA\"><a href=\"#Code-1-JAVA\" class=\"headerlink\" title=\"Code 1 (JAVA)\"></a>Code 1 (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">long</span>[] memo;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">tile</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      memo[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">      memo[<span class=\"number\">2</span>] = <span class=\"number\">3</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[<span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(memo[n] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n] %= <span class=\"number\">10007</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      memo[n] = tile(n - <span class=\"number\">1</span>) + tile(n - <span class=\"number\">2</span>) * <span class=\"number\">2</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n] %= <span class=\"number\">10007</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> input = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    memo = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[input + <span class=\"number\">1</span>];</span><br><span class=\"line\">    System.out.println(tile(input));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-2-JAVA\"><a href=\"#Code-2-JAVA\" class=\"headerlink\" title=\"Code 2 (JAVA)\"></a>Code 2 (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> input = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">long</span>[] memo;</span><br><span class=\"line\"></span><br><span class=\"line\">    memo = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[<span class=\"number\">1001</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    memo[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    memo[<span class=\"number\">2</span>] = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">3</span>; i &lt;= input; i++) &#123;</span><br><span class=\"line\">      memo[i] = (memo[i-<span class=\"number\">1</span>] + memo[i-<span class=\"number\">2</span>] * <span class=\"number\">2</span>) % <span class=\"number\">10007</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(memo[input]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/2748] 피보나치 수 2","_content":"\n> Baekjoon Online Judge - [2748](https://www.acmicpc.net/problem/2748)\n\n## Review\n\n- 점화식으로 푸는 피보나치 수.\n- 백준 10844 풀다가 너무 스트레스받아서 이거 풀었음...ㅡㅡ;;\n- 11727번이랑 풀이가 비슷하다. 아니 똑같다고 봐도 무방.\n- 점화식은 문제에 나와있으니 그대로 적용해서 풀면 된다.\n\n## Code (JAVA)\n\n```java\nimport java.io.*;\n\npublic class Main {\n\n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(bf.readLine());\n    long memo[];\n\n    memo = new long[n + 1];\n\n    memo[0] = 0;\n    memo[1] = 1;\n\n    for(int i = 2; i <= n; i++) {\n      memo[i] = memo[i - 1] + memo[i - 2];\n    }\n\n    System.out.println(memo[n]);\n  }\n}\n```\n","source":"_posts/2018-10-14-bj-2748.md","raw":"---\ntitle: \"[백준/2748] 피보나치 수 2\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [2748](https://www.acmicpc.net/problem/2748)\n\n## Review\n\n- 점화식으로 푸는 피보나치 수.\n- 백준 10844 풀다가 너무 스트레스받아서 이거 풀었음...ㅡㅡ;;\n- 11727번이랑 풀이가 비슷하다. 아니 똑같다고 봐도 무방.\n- 점화식은 문제에 나와있으니 그대로 적용해서 풀면 된다.\n\n## Code (JAVA)\n\n```java\nimport java.io.*;\n\npublic class Main {\n\n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(bf.readLine());\n    long memo[];\n\n    memo = new long[n + 1];\n\n    memo[0] = 0;\n    memo[1] = 1;\n\n    for(int i = 2; i <= n; i++) {\n      memo[i] = memo[i - 1] + memo[i - 2];\n    }\n\n    System.out.println(memo[n]);\n  }\n}\n```\n","slug":"bj-2748","published":1,"date":"2018-10-13T15:00:00.000Z","updated":"2020-05-05T08:00:03.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgr002vuv594qhyau6e","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNzQ4\" title=\"https://www.acmicpc.net/problem/2748\">2748<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>점화식으로 푸는 피보나치 수.</li>\n<li>백준 10844 풀다가 너무 스트레스받아서 이거 풀었음…ㅡㅡ;;</li>\n<li>11727번이랑 풀이가 비슷하다. 아니 똑같다고 봐도 무방.</li>\n<li>점화식은 문제에 나와있으니 그대로 적용해서 풀면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">long</span> memo[];</span><br><span class=\"line\"></span><br><span class=\"line\">    memo = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    memo[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    memo[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      memo[i] = memo[i - <span class=\"number\">1</span>] + memo[i - <span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(memo[n]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNzQ4\" title=\"https://www.acmicpc.net/problem/2748\">2748<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>점화식으로 푸는 피보나치 수.</li>\n<li>백준 10844 풀다가 너무 스트레스받아서 이거 풀었음…ㅡㅡ;;</li>\n<li>11727번이랑 풀이가 비슷하다. 아니 똑같다고 봐도 무방.</li>\n<li>점화식은 문제에 나와있으니 그대로 적용해서 풀면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">long</span> memo[];</span><br><span class=\"line\"></span><br><span class=\"line\">    memo = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    memo[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    memo[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      memo[i] = memo[i - <span class=\"number\">1</span>] + memo[i - <span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(memo[n]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/10844] 쉬운 계단 수","_content":"\n> Baekjoon Online Judge - [10844](https://www.acmicpc.net/problem/10844)\n\n## Review\n\n- 쉽게 말하자면 끝수-1을 변수 j라고 했을 때, 계단수는 j+1, j-1이 됨.\n- 예를 들어 자릿수가 3이고 27의 계단수를 구한다고 했을 때, 계단수는 27(7-1), 27(7+1)로 각 276, 278이 된다.\n- 구하려는 끝수를 변수 i이라고 한다면, 점화식은 다음과 같다.\n- `dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]`\n- 시작이 0일 경우, 끝이 9일 경우의 처리를 반드시 해주어야 한다.\n\n## Code (JAVA)\n\n```java\nimport java.io.*;\n\npublic class Main {\n\n  public static void main(String args[]) throws IOException{\n    int[][] dp = new int[101][10];\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(br.readLine());\n    int MOD = 1000000000;\n    long sum = 0;\n\n    for(int i = 1; i <= 9; i++) {\n      dp[1][i] = 1;\n    }\n\n    for(int i = 2; i <= n; i++) {\n      for(int j = 0; j <= 9; j++) {\n        if(j == 0) {\n          dp[i][0] = dp[i - 1][1] % MOD;\n        } else if(j == 9) {\n          dp[i][9] = dp[i - 1][8] % MOD;\n        } else {\n          dp[i][j] = (dp[i - 1][j - 1] + dp[i - 1][j + 1]) % MOD;\n        }\n      }\n    }\n\n\n    for(int i = 0; i <= 9; i++) {\n      sum += dp[n][i];\n    }\n\n    System.out.println(sum % MOD);\n  }\n}\n```\n","source":"_posts/2018-10-15-bj-10844.md","raw":"---\ntitle: \"[백준/10844] 쉬운 계단 수\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [10844](https://www.acmicpc.net/problem/10844)\n\n## Review\n\n- 쉽게 말하자면 끝수-1을 변수 j라고 했을 때, 계단수는 j+1, j-1이 됨.\n- 예를 들어 자릿수가 3이고 27의 계단수를 구한다고 했을 때, 계단수는 27(7-1), 27(7+1)로 각 276, 278이 된다.\n- 구하려는 끝수를 변수 i이라고 한다면, 점화식은 다음과 같다.\n- `dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]`\n- 시작이 0일 경우, 끝이 9일 경우의 처리를 반드시 해주어야 한다.\n\n## Code (JAVA)\n\n```java\nimport java.io.*;\n\npublic class Main {\n\n  public static void main(String args[]) throws IOException{\n    int[][] dp = new int[101][10];\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(br.readLine());\n    int MOD = 1000000000;\n    long sum = 0;\n\n    for(int i = 1; i <= 9; i++) {\n      dp[1][i] = 1;\n    }\n\n    for(int i = 2; i <= n; i++) {\n      for(int j = 0; j <= 9; j++) {\n        if(j == 0) {\n          dp[i][0] = dp[i - 1][1] % MOD;\n        } else if(j == 9) {\n          dp[i][9] = dp[i - 1][8] % MOD;\n        } else {\n          dp[i][j] = (dp[i - 1][j - 1] + dp[i - 1][j + 1]) % MOD;\n        }\n      }\n    }\n\n\n    for(int i = 0; i <= 9; i++) {\n      sum += dp[n][i];\n    }\n\n    System.out.println(sum % MOD);\n  }\n}\n```\n","slug":"bj-10844","published":1,"date":"2018-10-14T15:00:00.000Z","updated":"2020-05-05T08:00:03.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgs002yuv5996eh2n95","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDg0NA==\" title=\"https://www.acmicpc.net/problem/10844\">10844<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>쉽게 말하자면 끝수-1을 변수 j라고 했을 때, 계단수는 j+1, j-1이 됨.</li>\n<li>예를 들어 자릿수가 3이고 27의 계단수를 구한다고 했을 때, 계단수는 27(7-1), 27(7+1)로 각 276, 278이 된다.</li>\n<li>구하려는 끝수를 변수 i이라고 한다면, 점화식은 다음과 같다.</li>\n<li><code>dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]</code></li>\n<li>시작이 0일 경우, 끝이 9일 경우의 처리를 반드시 해주어야 한다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[][] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">101</span>][<span class=\"number\">10</span>];</span><br><span class=\"line\">    BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(br.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span> MOD = <span class=\"number\">1000000000</span>;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">      dp[<span class=\"number\">1</span>][i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          dp[i][<span class=\"number\">0</span>] = dp[i - <span class=\"number\">1</span>][<span class=\"number\">1</span>] % MOD;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j == <span class=\"number\">9</span>) &#123;</span><br><span class=\"line\">          dp[i][<span class=\"number\">9</span>] = dp[i - <span class=\"number\">1</span>][<span class=\"number\">8</span>] % MOD;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          dp[i][j] = (dp[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] + dp[i - <span class=\"number\">1</span>][j + <span class=\"number\">1</span>]) % MOD;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">      sum += dp[n][i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(sum % MOD);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDg0NA==\" title=\"https://www.acmicpc.net/problem/10844\">10844<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>쉽게 말하자면 끝수-1을 변수 j라고 했을 때, 계단수는 j+1, j-1이 됨.</li>\n<li>예를 들어 자릿수가 3이고 27의 계단수를 구한다고 했을 때, 계단수는 27(7-1), 27(7+1)로 각 276, 278이 된다.</li>\n<li>구하려는 끝수를 변수 i이라고 한다면, 점화식은 다음과 같다.</li>\n<li><code>dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]</code></li>\n<li>시작이 0일 경우, 끝이 9일 경우의 처리를 반드시 해주어야 한다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[][] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">101</span>][<span class=\"number\">10</span>];</span><br><span class=\"line\">    BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(br.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span> MOD = <span class=\"number\">1000000000</span>;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">      dp[<span class=\"number\">1</span>][i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= <span class=\"number\">9</span>; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(j == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          dp[i][<span class=\"number\">0</span>] = dp[i - <span class=\"number\">1</span>][<span class=\"number\">1</span>] % MOD;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(j == <span class=\"number\">9</span>) &#123;</span><br><span class=\"line\">          dp[i][<span class=\"number\">9</span>] = dp[i - <span class=\"number\">1</span>][<span class=\"number\">8</span>] % MOD;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          dp[i][j] = (dp[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>] + dp[i - <span class=\"number\">1</span>][j + <span class=\"number\">1</span>]) % MOD;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">      sum += dp[n][i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(sum % MOD);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/2193] 이친수","_content":"\n> Baekjoon Online Judge - [2193](https://www.acmicpc.net/problem/2193)\n\n## Review\n\n![example](/images/bj-2193/example.png)\n\n- 이미지를 보고 규칙을 찾아보면, 주어진 수가 n일 때 n - 1, n - 2를 해서 원하는 값들을 찾을 수가 있다.\n- 점화식은 이렇다. `dp[i] = dp[i - 2] + dp[i - 1]`\n\n## Code (JAVA)\n\n```java\nimport java.io.*;\n\npublic class Main {\n\n  public static void main(String args[]) throws IOException{\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(br.readLine());\n    long dp[] = new long[n + 1];\n\n    dp[0] = 0;\n    dp[1] = 1;\n\n    for(int i = 2; i <= n; i++) {\n      dp[i] = dp[i - 2] + dp[i - 1];\n    }\n\n    System.out.println(dp[n]);\n  }\n}\n```\n","source":"_posts/2018-10-16-bj-2193.md","raw":"---\ntitle: \"[백준/2193] 이친수\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [2193](https://www.acmicpc.net/problem/2193)\n\n## Review\n\n![example](/images/bj-2193/example.png)\n\n- 이미지를 보고 규칙을 찾아보면, 주어진 수가 n일 때 n - 1, n - 2를 해서 원하는 값들을 찾을 수가 있다.\n- 점화식은 이렇다. `dp[i] = dp[i - 2] + dp[i - 1]`\n\n## Code (JAVA)\n\n```java\nimport java.io.*;\n\npublic class Main {\n\n  public static void main(String args[]) throws IOException{\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    int n = Integer.parseInt(br.readLine());\n    long dp[] = new long[n + 1];\n\n    dp[0] = 0;\n    dp[1] = 1;\n\n    for(int i = 2; i <= n; i++) {\n      dp[i] = dp[i - 2] + dp[i - 1];\n    }\n\n    System.out.println(dp[n]);\n  }\n}\n```\n","slug":"bj-2193","published":1,"date":"2018-10-15T15:00:00.000Z","updated":"2020-05-05T08:00:03.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgt0032uv5940lw86tf","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yMTkz\" title=\"https://www.acmicpc.net/problem/2193\">2193<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><p><img src=\"/images/bj-2193/example.png\" alt=\"example\"></p>\n<ul>\n<li>이미지를 보고 규칙을 찾아보면, 주어진 수가 n일 때 n - 1, n - 2를 해서 원하는 값들을 찾을 수가 있다.</li>\n<li>점화식은 이렇다. <code>dp[i] = dp[i - 2] + dp[i - 1]</code></li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(br.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">long</span> dp[] = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      dp[i] = dp[i - <span class=\"number\">2</span>] + dp[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(dp[n]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yMTkz\" title=\"https://www.acmicpc.net/problem/2193\">2193<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><p><img src=\"/images/bj-2193/example.png\" alt=\"example\"></p>\n<ul>\n<li>이미지를 보고 규칙을 찾아보면, 주어진 수가 n일 때 n - 1, n - 2를 해서 원하는 값들을 찾을 수가 있다.</li>\n<li>점화식은 이렇다. <code>dp[i] = dp[i - 2] + dp[i - 1]</code></li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = Integer.parseInt(br.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">long</span> dp[] = <span class=\"keyword\">new</span> <span class=\"keyword\">long</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">      dp[i] = dp[i - <span class=\"number\">2</span>] + dp[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    System.out.println(dp[n]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[React] Flux 개념 이해하기","_content":"\n> Flux 개념 정리\n\n# Flux 등장 배경\n\nFlux는 MVC 패턴의 문제점을 보완하기 위해 만들어진 디자인 패턴이다. 그렇기 때문에 왜 등장했는지부터 짚고 넘어가면 좋다. 등장 배경에 대해 잘 설명된 문서가 있어서 [링크](https://bestalign.github.io/2015/10/06/cartoon-guide-to-flux/)로 대체한다.\n\n요악하자면 MVC(Model-View-Controller) 패턴으로 개발하던 페이스북이 알림(notification)버그를 발견하고, 이를 근본적으로 해결하는 과정에서 Flux가 탄생하게 되었다는 얘기다. MVC 패턴은 작은 애플리케이션의 경우에는 별 문제가 없지만, 대규모 애플리케이션의 경우라면 엄청나게 복잡해진다는 단점을 가지고 있다.\n\n![mvc](/images/react-flux/flux-mvc-1.png)\nMVC 패턴은 **컨트롤러(Controller), 모델(Model), 뷰(View)** 세 가지 개념으로 이루어져있다. 작은 애플리케이션의 경우 모델과 뷰가 적어서 MVC 패턴이 큰 문제없이 작동한다.\n\n> - 컨트롤러: 모델에 명령을 보내서 모델의 상태를 변경할 수 있음\n\n- 모델: 모델의 상태에 변화가 있을 때 컨트롤러와 뷰에 통보\n- 뷰: 모델로부터 정보를 얻어와 결과물로 반영함\n\n![mvc](/images/react-flux/flux-mvc-2.png)\n하지만 대규모 애플리케이션은 모델과 뷰가 많아서 엄청나게 복잡해진다. 모델이 많아지면서 이를 표현하기 위한 뷰들이 많아지고, 뷰를 통해 입력된 값이 모델에 영향을 주면서 엄청나게 복잡해진다. 이를 타개하기 위해 flux 아키텍처가 만들어졌다.\n\n# Flux 패턴\n\n![flux](/images/react-flux/flux-1.png)\nFlux는 페이스북에서 MVC의 문제를 해결할 목적으로 고안한 애플리케이션 아키텍처이다. Flux 아키텍쳐의 가장 큰 특징은 단방향 **데이터 흐름(unidirectional data flow)**이다. 말 그대로 한 방향으로 데이터가 흐르는 것이다. 뷰를 통해 입력된 값은 디스패쳐를 통해 스토어로 전달되고, 스토어는 이 변경된 값을 다시 뷰에게 전달하는 역할을 한다. Flux 애플리케이션은 세 가지 주요 파트로 구성되는데, 각각 ​**디스패처(Dispatcher), 스토어(Store), 뷰(View)**이다.\n\n# 액션 생성자(The action creator)\n\nFlux 아키텍쳐의 주요 파트를 알아보기 전에 **'액션 생성자(The action creator)'** 라는 개념을 알고 넘어가야 한다. 액션 생성자란 모든 변경사항과 사용자와의 상호작용이 거처가야 하는 액션의 생성을 담당하고 있다. 애플리케이션의 상태를 변경하거나 뷰를 업데이트하고 싶다면 액션을 생성해야만 한다.\n\n액션 생성자가 하는 일은 마치 전보 기사가 알파벳을 모스 부호로 바꾸는 것처럼 특정 포맷에 맞게 메시지를 작성하는 것과 같다. 그리고 액션 생성자가 특정 액션이 적힌 메시지를 다 작성하면 바로 디스패쳐에게 넘겨준다.\n\n# Flux 아키텍쳐의 세 가지 주요 파트\n\n앞서 말했듯, Flux 애플리케이션은 세 가지 주요 파트로 구성되어 있다.\n\n## 1.디스패쳐(Dispatcher)\n\n**디스패쳐는 Flux 어플리케이션의 중앙 허브로 모든 데이터의 흐름을 관리한다.** 스토어의 콜백함수들이 등록되어 있으며, 각각의 스토어를 직접 등록하고 콜백함수를 제공한다. 비유를 하자면 전화 교환수와도 같다. 액션 생성자한테서 액션을 받으면, 여러 스토어에게 그 액션을 보내는 역할을 한다.\n\n## 2. 스토어(The stores)\n\n**애플리캐이션의 상태를 저장한다.** 모든 상태 변경은 스토어에 의해서 결정되고, 상태 변경을 위한 요청을 스토어에 직접 보낼 수 없다. 무조건 액션 생성자->디스패처 흐름으로 액션을 보내야 상태 변경이 가능해진다. 스토어의 상태 변경이 될 때마다 스토어는 변경 이벤트를 내보내는데, 이 이벤트는 컨트롤러 뷰에게 상태가 변경되었다는 것을 알려주게 된다.\n\n## 3. 컨트롤러 뷰(Controller view)와 뷰(View)\n\n**상태를 가져오고, 유저에게 입력받을 화면을 보여준다.** 리액트에서는 즉 리액트 컴포넌트에 해당한다. 컨트롤러 뷰와 뷰의 차이는 리액트에서의 부모 컴포넌트와 자식 컴포넌트와도 같다. 스토어가 상태를 변경되었다고 컨트롤러 뷰에게 알려주면, 컨트롤러 뷰는 자신의 아래에 있는 모든 자식 뷰에게 새로운 상태를 넘겨준다.\n\n# Flux는 어떻게 동작할까?\n\n## 준비 단계 (The setup)\n\n![flux](/images/react-flux/flux-2.png)\n\n1. 스토어는 디스패쳐에게 액션이 들어오면 알려달라고 말해둔다.\n2. 컨트롤러 뷰는 스토어에게 최신 상태를 묻는다.\n3. 스토어가 컨트롤러 뷰에게 상태를 주면 렌더링하기 위해 모든 자식 뷰에게 상태를 넘겨준다.\n4. 컨트롤러 뷰는 스토어에게 상태가 바뀔 때 알려달라고 다시 부탁한다.\n\n## 데이터의 흐름 (The data flow)\n\n일단 액션으로 발생한 모든 데이터는 디스패쳐 -> 스토어 -> 뷰로 흘러간다.\n![flux](/images/react-flux/flux-3.png)\n\n1. 뷰는 액션 생성자에게 액션을 준비하라고 말한다.\n2. 액션 생성자는 액션을 포맷에 맞게 만들어서 디스패쳐에게 넘겨준다.\n3. 디스패쳐는 들어온 순서에 따라 알맞은 스토어로 보낸다.\n4. 스토어는 상태가 변경되었기 때문에 컨트롤러 뷰에게 이 사실을 알린다.\n5. 컨트롤러 뷰는 자신의 아래에 있는 자식 뷰에게 모든 상태를 넘겨준다.\n\n# Reference\n\n- [Wikipedia](https://ko.wikipedia.org/wiki/%EB%AA%A8%EB%8D%B8-%EB%B7%B0-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC)\n- [Flux 한국어 번역 페이지](http://haruair.github.io/flux/)\n- [Flux로의 카툰 안내서](https://bestalign.github.io/2015/10/06/cartoon-guide-to-flux/)\n","source":"_posts/2018-10-17-react-flux.md","raw":"---\ntitle: \"[React] Flux 개념 이해하기\"\ntags: [react]\ncategories: React\n---\n\n> Flux 개념 정리\n\n# Flux 등장 배경\n\nFlux는 MVC 패턴의 문제점을 보완하기 위해 만들어진 디자인 패턴이다. 그렇기 때문에 왜 등장했는지부터 짚고 넘어가면 좋다. 등장 배경에 대해 잘 설명된 문서가 있어서 [링크](https://bestalign.github.io/2015/10/06/cartoon-guide-to-flux/)로 대체한다.\n\n요악하자면 MVC(Model-View-Controller) 패턴으로 개발하던 페이스북이 알림(notification)버그를 발견하고, 이를 근본적으로 해결하는 과정에서 Flux가 탄생하게 되었다는 얘기다. MVC 패턴은 작은 애플리케이션의 경우에는 별 문제가 없지만, 대규모 애플리케이션의 경우라면 엄청나게 복잡해진다는 단점을 가지고 있다.\n\n![mvc](/images/react-flux/flux-mvc-1.png)\nMVC 패턴은 **컨트롤러(Controller), 모델(Model), 뷰(View)** 세 가지 개념으로 이루어져있다. 작은 애플리케이션의 경우 모델과 뷰가 적어서 MVC 패턴이 큰 문제없이 작동한다.\n\n> - 컨트롤러: 모델에 명령을 보내서 모델의 상태를 변경할 수 있음\n\n- 모델: 모델의 상태에 변화가 있을 때 컨트롤러와 뷰에 통보\n- 뷰: 모델로부터 정보를 얻어와 결과물로 반영함\n\n![mvc](/images/react-flux/flux-mvc-2.png)\n하지만 대규모 애플리케이션은 모델과 뷰가 많아서 엄청나게 복잡해진다. 모델이 많아지면서 이를 표현하기 위한 뷰들이 많아지고, 뷰를 통해 입력된 값이 모델에 영향을 주면서 엄청나게 복잡해진다. 이를 타개하기 위해 flux 아키텍처가 만들어졌다.\n\n# Flux 패턴\n\n![flux](/images/react-flux/flux-1.png)\nFlux는 페이스북에서 MVC의 문제를 해결할 목적으로 고안한 애플리케이션 아키텍처이다. Flux 아키텍쳐의 가장 큰 특징은 단방향 **데이터 흐름(unidirectional data flow)**이다. 말 그대로 한 방향으로 데이터가 흐르는 것이다. 뷰를 통해 입력된 값은 디스패쳐를 통해 스토어로 전달되고, 스토어는 이 변경된 값을 다시 뷰에게 전달하는 역할을 한다. Flux 애플리케이션은 세 가지 주요 파트로 구성되는데, 각각 ​**디스패처(Dispatcher), 스토어(Store), 뷰(View)**이다.\n\n# 액션 생성자(The action creator)\n\nFlux 아키텍쳐의 주요 파트를 알아보기 전에 **'액션 생성자(The action creator)'** 라는 개념을 알고 넘어가야 한다. 액션 생성자란 모든 변경사항과 사용자와의 상호작용이 거처가야 하는 액션의 생성을 담당하고 있다. 애플리케이션의 상태를 변경하거나 뷰를 업데이트하고 싶다면 액션을 생성해야만 한다.\n\n액션 생성자가 하는 일은 마치 전보 기사가 알파벳을 모스 부호로 바꾸는 것처럼 특정 포맷에 맞게 메시지를 작성하는 것과 같다. 그리고 액션 생성자가 특정 액션이 적힌 메시지를 다 작성하면 바로 디스패쳐에게 넘겨준다.\n\n# Flux 아키텍쳐의 세 가지 주요 파트\n\n앞서 말했듯, Flux 애플리케이션은 세 가지 주요 파트로 구성되어 있다.\n\n## 1.디스패쳐(Dispatcher)\n\n**디스패쳐는 Flux 어플리케이션의 중앙 허브로 모든 데이터의 흐름을 관리한다.** 스토어의 콜백함수들이 등록되어 있으며, 각각의 스토어를 직접 등록하고 콜백함수를 제공한다. 비유를 하자면 전화 교환수와도 같다. 액션 생성자한테서 액션을 받으면, 여러 스토어에게 그 액션을 보내는 역할을 한다.\n\n## 2. 스토어(The stores)\n\n**애플리캐이션의 상태를 저장한다.** 모든 상태 변경은 스토어에 의해서 결정되고, 상태 변경을 위한 요청을 스토어에 직접 보낼 수 없다. 무조건 액션 생성자->디스패처 흐름으로 액션을 보내야 상태 변경이 가능해진다. 스토어의 상태 변경이 될 때마다 스토어는 변경 이벤트를 내보내는데, 이 이벤트는 컨트롤러 뷰에게 상태가 변경되었다는 것을 알려주게 된다.\n\n## 3. 컨트롤러 뷰(Controller view)와 뷰(View)\n\n**상태를 가져오고, 유저에게 입력받을 화면을 보여준다.** 리액트에서는 즉 리액트 컴포넌트에 해당한다. 컨트롤러 뷰와 뷰의 차이는 리액트에서의 부모 컴포넌트와 자식 컴포넌트와도 같다. 스토어가 상태를 변경되었다고 컨트롤러 뷰에게 알려주면, 컨트롤러 뷰는 자신의 아래에 있는 모든 자식 뷰에게 새로운 상태를 넘겨준다.\n\n# Flux는 어떻게 동작할까?\n\n## 준비 단계 (The setup)\n\n![flux](/images/react-flux/flux-2.png)\n\n1. 스토어는 디스패쳐에게 액션이 들어오면 알려달라고 말해둔다.\n2. 컨트롤러 뷰는 스토어에게 최신 상태를 묻는다.\n3. 스토어가 컨트롤러 뷰에게 상태를 주면 렌더링하기 위해 모든 자식 뷰에게 상태를 넘겨준다.\n4. 컨트롤러 뷰는 스토어에게 상태가 바뀔 때 알려달라고 다시 부탁한다.\n\n## 데이터의 흐름 (The data flow)\n\n일단 액션으로 발생한 모든 데이터는 디스패쳐 -> 스토어 -> 뷰로 흘러간다.\n![flux](/images/react-flux/flux-3.png)\n\n1. 뷰는 액션 생성자에게 액션을 준비하라고 말한다.\n2. 액션 생성자는 액션을 포맷에 맞게 만들어서 디스패쳐에게 넘겨준다.\n3. 디스패쳐는 들어온 순서에 따라 알맞은 스토어로 보낸다.\n4. 스토어는 상태가 변경되었기 때문에 컨트롤러 뷰에게 이 사실을 알린다.\n5. 컨트롤러 뷰는 자신의 아래에 있는 자식 뷰에게 모든 상태를 넘겨준다.\n\n# Reference\n\n- [Wikipedia](https://ko.wikipedia.org/wiki/%EB%AA%A8%EB%8D%B8-%EB%B7%B0-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC)\n- [Flux 한국어 번역 페이지](http://haruair.github.io/flux/)\n- [Flux로의 카툰 안내서](https://bestalign.github.io/2015/10/06/cartoon-guide-to-flux/)\n","slug":"react-flux","published":1,"date":"2018-10-16T15:00:00.000Z","updated":"2020-05-05T08:00:03.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgu0035uv59cnyc0csl","content":"<blockquote>\n<p>Flux 개념 정리</p>\n</blockquote>\n<h1 id=\"Flux-등장-배경\"><a href=\"#Flux-등장-배경\" class=\"headerlink\" title=\"Flux 등장 배경\"></a>Flux 등장 배경</h1><p>Flux는 MVC 패턴의 문제점을 보완하기 위해 만들어진 디자인 패턴이다. 그렇기 때문에 왜 등장했는지부터 짚고 넘어가면 좋다. 등장 배경에 대해 잘 설명된 문서가 있어서 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZXN0YWxpZ24uZ2l0aHViLmlvLzIwMTUvMTAvMDYvY2FydG9vbi1ndWlkZS10by1mbHV4Lw==\" title=\"https://bestalign.github.io/2015/10/06/cartoon-guide-to-flux/\">링크<i class=\"fa fa-external-link\"></i></span>로 대체한다.</p>\n<p>요악하자면 MVC(Model-View-Controller) 패턴으로 개발하던 페이스북이 알림(notification)버그를 발견하고, 이를 근본적으로 해결하는 과정에서 Flux가 탄생하게 되었다는 얘기다. MVC 패턴은 작은 애플리케이션의 경우에는 별 문제가 없지만, 대규모 애플리케이션의 경우라면 엄청나게 복잡해진다는 단점을 가지고 있다.</p>\n<p><img src=\"/images/react-flux/flux-mvc-1.png\" alt=\"mvc\"><br>MVC 패턴은 <strong>컨트롤러(Controller), 모델(Model), 뷰(View)</strong> 세 가지 개념으로 이루어져있다. 작은 애플리케이션의 경우 모델과 뷰가 적어서 MVC 패턴이 큰 문제없이 작동한다.</p>\n<blockquote>\n<ul>\n<li>컨트롤러: 모델에 명령을 보내서 모델의 상태를 변경할 수 있음</li>\n</ul>\n</blockquote>\n<ul>\n<li>모델: 모델의 상태에 변화가 있을 때 컨트롤러와 뷰에 통보</li>\n<li>뷰: 모델로부터 정보를 얻어와 결과물로 반영함</li>\n</ul>\n<p><img src=\"/images/react-flux/flux-mvc-2.png\" alt=\"mvc\"><br>하지만 대규모 애플리케이션은 모델과 뷰가 많아서 엄청나게 복잡해진다. 모델이 많아지면서 이를 표현하기 위한 뷰들이 많아지고, 뷰를 통해 입력된 값이 모델에 영향을 주면서 엄청나게 복잡해진다. 이를 타개하기 위해 flux 아키텍처가 만들어졌다.</p>\n<h1 id=\"Flux-패턴\"><a href=\"#Flux-패턴\" class=\"headerlink\" title=\"Flux 패턴\"></a>Flux 패턴</h1><p><img src=\"/images/react-flux/flux-1.png\" alt=\"flux\"><br>Flux는 페이스북에서 MVC의 문제를 해결할 목적으로 고안한 애플리케이션 아키텍처이다. Flux 아키텍쳐의 가장 큰 특징은 단방향 <strong>데이터 흐름(unidirectional data flow)</strong>이다. 말 그대로 한 방향으로 데이터가 흐르는 것이다. 뷰를 통해 입력된 값은 디스패쳐를 통해 스토어로 전달되고, 스토어는 이 변경된 값을 다시 뷰에게 전달하는 역할을 한다. Flux 애플리케이션은 세 가지 주요 파트로 구성되는데, 각각 ​<strong>디스패처(Dispatcher), 스토어(Store), 뷰(View)</strong>이다.</p>\n<h1 id=\"액션-생성자-The-action-creator\"><a href=\"#액션-생성자-The-action-creator\" class=\"headerlink\" title=\"액션 생성자(The action creator)\"></a>액션 생성자(The action creator)</h1><p>Flux 아키텍쳐의 주요 파트를 알아보기 전에 <strong>‘액션 생성자(The action creator)’</strong> 라는 개념을 알고 넘어가야 한다. 액션 생성자란 모든 변경사항과 사용자와의 상호작용이 거처가야 하는 액션의 생성을 담당하고 있다. 애플리케이션의 상태를 변경하거나 뷰를 업데이트하고 싶다면 액션을 생성해야만 한다.</p>\n<p>액션 생성자가 하는 일은 마치 전보 기사가 알파벳을 모스 부호로 바꾸는 것처럼 특정 포맷에 맞게 메시지를 작성하는 것과 같다. 그리고 액션 생성자가 특정 액션이 적힌 메시지를 다 작성하면 바로 디스패쳐에게 넘겨준다.</p>\n<h1 id=\"Flux-아키텍쳐의-세-가지-주요-파트\"><a href=\"#Flux-아키텍쳐의-세-가지-주요-파트\" class=\"headerlink\" title=\"Flux 아키텍쳐의 세 가지 주요 파트\"></a>Flux 아키텍쳐의 세 가지 주요 파트</h1><p>앞서 말했듯, Flux 애플리케이션은 세 가지 주요 파트로 구성되어 있다.</p>\n<h2 id=\"1-디스패쳐-Dispatcher\"><a href=\"#1-디스패쳐-Dispatcher\" class=\"headerlink\" title=\"1.디스패쳐(Dispatcher)\"></a>1.디스패쳐(Dispatcher)</h2><p><strong>디스패쳐는 Flux 어플리케이션의 중앙 허브로 모든 데이터의 흐름을 관리한다.</strong> 스토어의 콜백함수들이 등록되어 있으며, 각각의 스토어를 직접 등록하고 콜백함수를 제공한다. 비유를 하자면 전화 교환수와도 같다. 액션 생성자한테서 액션을 받으면, 여러 스토어에게 그 액션을 보내는 역할을 한다.</p>\n<h2 id=\"2-스토어-The-stores\"><a href=\"#2-스토어-The-stores\" class=\"headerlink\" title=\"2. 스토어(The stores)\"></a>2. 스토어(The stores)</h2><p><strong>애플리캐이션의 상태를 저장한다.</strong> 모든 상태 변경은 스토어에 의해서 결정되고, 상태 변경을 위한 요청을 스토어에 직접 보낼 수 없다. 무조건 액션 생성자-&gt;디스패처 흐름으로 액션을 보내야 상태 변경이 가능해진다. 스토어의 상태 변경이 될 때마다 스토어는 변경 이벤트를 내보내는데, 이 이벤트는 컨트롤러 뷰에게 상태가 변경되었다는 것을 알려주게 된다.</p>\n<h2 id=\"3-컨트롤러-뷰-Controller-view-와-뷰-View\"><a href=\"#3-컨트롤러-뷰-Controller-view-와-뷰-View\" class=\"headerlink\" title=\"3. 컨트롤러 뷰(Controller view)와 뷰(View)\"></a>3. 컨트롤러 뷰(Controller view)와 뷰(View)</h2><p><strong>상태를 가져오고, 유저에게 입력받을 화면을 보여준다.</strong> 리액트에서는 즉 리액트 컴포넌트에 해당한다. 컨트롤러 뷰와 뷰의 차이는 리액트에서의 부모 컴포넌트와 자식 컴포넌트와도 같다. 스토어가 상태를 변경되었다고 컨트롤러 뷰에게 알려주면, 컨트롤러 뷰는 자신의 아래에 있는 모든 자식 뷰에게 새로운 상태를 넘겨준다.</p>\n<h1 id=\"Flux는-어떻게-동작할까\"><a href=\"#Flux는-어떻게-동작할까\" class=\"headerlink\" title=\"Flux는 어떻게 동작할까?\"></a>Flux는 어떻게 동작할까?</h1><h2 id=\"준비-단계-The-setup\"><a href=\"#준비-단계-The-setup\" class=\"headerlink\" title=\"준비 단계 (The setup)\"></a>준비 단계 (The setup)</h2><p><img src=\"/images/react-flux/flux-2.png\" alt=\"flux\"></p>\n<ol>\n<li>스토어는 디스패쳐에게 액션이 들어오면 알려달라고 말해둔다.</li>\n<li>컨트롤러 뷰는 스토어에게 최신 상태를 묻는다.</li>\n<li>스토어가 컨트롤러 뷰에게 상태를 주면 렌더링하기 위해 모든 자식 뷰에게 상태를 넘겨준다.</li>\n<li>컨트롤러 뷰는 스토어에게 상태가 바뀔 때 알려달라고 다시 부탁한다.</li>\n</ol>\n<h2 id=\"데이터의-흐름-The-data-flow\"><a href=\"#데이터의-흐름-The-data-flow\" class=\"headerlink\" title=\"데이터의 흐름 (The data flow)\"></a>데이터의 흐름 (The data flow)</h2><p>일단 액션으로 발생한 모든 데이터는 디스패쳐 -&gt; 스토어 -&gt; 뷰로 흘러간다.<br><img src=\"/images/react-flux/flux-3.png\" alt=\"flux\"></p>\n<ol>\n<li>뷰는 액션 생성자에게 액션을 준비하라고 말한다.</li>\n<li>액션 생성자는 액션을 포맷에 맞게 만들어서 디스패쳐에게 넘겨준다.</li>\n<li>디스패쳐는 들어온 순서에 따라 알맞은 스토어로 보낸다.</li>\n<li>스토어는 상태가 변경되었기 때문에 컨트롤러 뷰에게 이 사실을 알린다.</li>\n<li>컨트롤러 뷰는 자신의 아래에 있는 자식 뷰에게 모든 상태를 넘겨준다.</li>\n</ol>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9rby53aWtpcGVkaWEub3JnL3dpa2kvJUVCJUFBJUE4JUVCJThEJUI4LSVFQiVCNyVCMC0lRUMlQkIlQTglRUQlOEElQjglRUIlQTElQTQlRUIlOUYlQUM=\" title=\"https://ko.wikipedia.org/wiki/%EB%AA%A8%EB%8D%B8-%EB%B7%B0-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC\">Wikipedia<i class=\"fa fa-external-link\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2hhcnVhaXIuZ2l0aHViLmlvL2ZsdXgv\" title=\"http://haruair.github.io/flux/\">Flux 한국어 번역 페이지<i class=\"fa fa-external-link\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZXN0YWxpZ24uZ2l0aHViLmlvLzIwMTUvMTAvMDYvY2FydG9vbi1ndWlkZS10by1mbHV4Lw==\" title=\"https://bestalign.github.io/2015/10/06/cartoon-guide-to-flux/\">Flux로의 카툰 안내서<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Flux 개념 정리</p>\n</blockquote>\n<h1 id=\"Flux-등장-배경\"><a href=\"#Flux-등장-배경\" class=\"headerlink\" title=\"Flux 등장 배경\"></a>Flux 등장 배경</h1><p>Flux는 MVC 패턴의 문제점을 보완하기 위해 만들어진 디자인 패턴이다. 그렇기 때문에 왜 등장했는지부터 짚고 넘어가면 좋다. 등장 배경에 대해 잘 설명된 문서가 있어서 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZXN0YWxpZ24uZ2l0aHViLmlvLzIwMTUvMTAvMDYvY2FydG9vbi1ndWlkZS10by1mbHV4Lw==\" title=\"https://bestalign.github.io/2015/10/06/cartoon-guide-to-flux/\">링크<i class=\"fa fa-external-link\"></i></span>로 대체한다.</p>\n<p>요악하자면 MVC(Model-View-Controller) 패턴으로 개발하던 페이스북이 알림(notification)버그를 발견하고, 이를 근본적으로 해결하는 과정에서 Flux가 탄생하게 되었다는 얘기다. MVC 패턴은 작은 애플리케이션의 경우에는 별 문제가 없지만, 대규모 애플리케이션의 경우라면 엄청나게 복잡해진다는 단점을 가지고 있다.</p>\n<p><img src=\"/images/react-flux/flux-mvc-1.png\" alt=\"mvc\"><br>MVC 패턴은 <strong>컨트롤러(Controller), 모델(Model), 뷰(View)</strong> 세 가지 개념으로 이루어져있다. 작은 애플리케이션의 경우 모델과 뷰가 적어서 MVC 패턴이 큰 문제없이 작동한다.</p>\n<blockquote>\n<ul>\n<li>컨트롤러: 모델에 명령을 보내서 모델의 상태를 변경할 수 있음</li>\n</ul>\n</blockquote>\n<ul>\n<li>모델: 모델의 상태에 변화가 있을 때 컨트롤러와 뷰에 통보</li>\n<li>뷰: 모델로부터 정보를 얻어와 결과물로 반영함</li>\n</ul>\n<p><img src=\"/images/react-flux/flux-mvc-2.png\" alt=\"mvc\"><br>하지만 대규모 애플리케이션은 모델과 뷰가 많아서 엄청나게 복잡해진다. 모델이 많아지면서 이를 표현하기 위한 뷰들이 많아지고, 뷰를 통해 입력된 값이 모델에 영향을 주면서 엄청나게 복잡해진다. 이를 타개하기 위해 flux 아키텍처가 만들어졌다.</p>\n<h1 id=\"Flux-패턴\"><a href=\"#Flux-패턴\" class=\"headerlink\" title=\"Flux 패턴\"></a>Flux 패턴</h1><p><img src=\"/images/react-flux/flux-1.png\" alt=\"flux\"><br>Flux는 페이스북에서 MVC의 문제를 해결할 목적으로 고안한 애플리케이션 아키텍처이다. Flux 아키텍쳐의 가장 큰 특징은 단방향 <strong>데이터 흐름(unidirectional data flow)</strong>이다. 말 그대로 한 방향으로 데이터가 흐르는 것이다. 뷰를 통해 입력된 값은 디스패쳐를 통해 스토어로 전달되고, 스토어는 이 변경된 값을 다시 뷰에게 전달하는 역할을 한다. Flux 애플리케이션은 세 가지 주요 파트로 구성되는데, 각각 ​<strong>디스패처(Dispatcher), 스토어(Store), 뷰(View)</strong>이다.</p>\n<h1 id=\"액션-생성자-The-action-creator\"><a href=\"#액션-생성자-The-action-creator\" class=\"headerlink\" title=\"액션 생성자(The action creator)\"></a>액션 생성자(The action creator)</h1><p>Flux 아키텍쳐의 주요 파트를 알아보기 전에 <strong>‘액션 생성자(The action creator)’</strong> 라는 개념을 알고 넘어가야 한다. 액션 생성자란 모든 변경사항과 사용자와의 상호작용이 거처가야 하는 액션의 생성을 담당하고 있다. 애플리케이션의 상태를 변경하거나 뷰를 업데이트하고 싶다면 액션을 생성해야만 한다.</p>\n<p>액션 생성자가 하는 일은 마치 전보 기사가 알파벳을 모스 부호로 바꾸는 것처럼 특정 포맷에 맞게 메시지를 작성하는 것과 같다. 그리고 액션 생성자가 특정 액션이 적힌 메시지를 다 작성하면 바로 디스패쳐에게 넘겨준다.</p>\n<h1 id=\"Flux-아키텍쳐의-세-가지-주요-파트\"><a href=\"#Flux-아키텍쳐의-세-가지-주요-파트\" class=\"headerlink\" title=\"Flux 아키텍쳐의 세 가지 주요 파트\"></a>Flux 아키텍쳐의 세 가지 주요 파트</h1><p>앞서 말했듯, Flux 애플리케이션은 세 가지 주요 파트로 구성되어 있다.</p>\n<h2 id=\"1-디스패쳐-Dispatcher\"><a href=\"#1-디스패쳐-Dispatcher\" class=\"headerlink\" title=\"1.디스패쳐(Dispatcher)\"></a>1.디스패쳐(Dispatcher)</h2><p><strong>디스패쳐는 Flux 어플리케이션의 중앙 허브로 모든 데이터의 흐름을 관리한다.</strong> 스토어의 콜백함수들이 등록되어 있으며, 각각의 스토어를 직접 등록하고 콜백함수를 제공한다. 비유를 하자면 전화 교환수와도 같다. 액션 생성자한테서 액션을 받으면, 여러 스토어에게 그 액션을 보내는 역할을 한다.</p>\n<h2 id=\"2-스토어-The-stores\"><a href=\"#2-스토어-The-stores\" class=\"headerlink\" title=\"2. 스토어(The stores)\"></a>2. 스토어(The stores)</h2><p><strong>애플리캐이션의 상태를 저장한다.</strong> 모든 상태 변경은 스토어에 의해서 결정되고, 상태 변경을 위한 요청을 스토어에 직접 보낼 수 없다. 무조건 액션 생성자-&gt;디스패처 흐름으로 액션을 보내야 상태 변경이 가능해진다. 스토어의 상태 변경이 될 때마다 스토어는 변경 이벤트를 내보내는데, 이 이벤트는 컨트롤러 뷰에게 상태가 변경되었다는 것을 알려주게 된다.</p>\n<h2 id=\"3-컨트롤러-뷰-Controller-view-와-뷰-View\"><a href=\"#3-컨트롤러-뷰-Controller-view-와-뷰-View\" class=\"headerlink\" title=\"3. 컨트롤러 뷰(Controller view)와 뷰(View)\"></a>3. 컨트롤러 뷰(Controller view)와 뷰(View)</h2><p><strong>상태를 가져오고, 유저에게 입력받을 화면을 보여준다.</strong> 리액트에서는 즉 리액트 컴포넌트에 해당한다. 컨트롤러 뷰와 뷰의 차이는 리액트에서의 부모 컴포넌트와 자식 컴포넌트와도 같다. 스토어가 상태를 변경되었다고 컨트롤러 뷰에게 알려주면, 컨트롤러 뷰는 자신의 아래에 있는 모든 자식 뷰에게 새로운 상태를 넘겨준다.</p>\n<h1 id=\"Flux는-어떻게-동작할까\"><a href=\"#Flux는-어떻게-동작할까\" class=\"headerlink\" title=\"Flux는 어떻게 동작할까?\"></a>Flux는 어떻게 동작할까?</h1><h2 id=\"준비-단계-The-setup\"><a href=\"#준비-단계-The-setup\" class=\"headerlink\" title=\"준비 단계 (The setup)\"></a>준비 단계 (The setup)</h2><p><img src=\"/images/react-flux/flux-2.png\" alt=\"flux\"></p>\n<ol>\n<li>스토어는 디스패쳐에게 액션이 들어오면 알려달라고 말해둔다.</li>\n<li>컨트롤러 뷰는 스토어에게 최신 상태를 묻는다.</li>\n<li>스토어가 컨트롤러 뷰에게 상태를 주면 렌더링하기 위해 모든 자식 뷰에게 상태를 넘겨준다.</li>\n<li>컨트롤러 뷰는 스토어에게 상태가 바뀔 때 알려달라고 다시 부탁한다.</li>\n</ol>\n<h2 id=\"데이터의-흐름-The-data-flow\"><a href=\"#데이터의-흐름-The-data-flow\" class=\"headerlink\" title=\"데이터의 흐름 (The data flow)\"></a>데이터의 흐름 (The data flow)</h2><p>일단 액션으로 발생한 모든 데이터는 디스패쳐 -&gt; 스토어 -&gt; 뷰로 흘러간다.<br><img src=\"/images/react-flux/flux-3.png\" alt=\"flux\"></p>\n<ol>\n<li>뷰는 액션 생성자에게 액션을 준비하라고 말한다.</li>\n<li>액션 생성자는 액션을 포맷에 맞게 만들어서 디스패쳐에게 넘겨준다.</li>\n<li>디스패쳐는 들어온 순서에 따라 알맞은 스토어로 보낸다.</li>\n<li>스토어는 상태가 변경되었기 때문에 컨트롤러 뷰에게 이 사실을 알린다.</li>\n<li>컨트롤러 뷰는 자신의 아래에 있는 자식 뷰에게 모든 상태를 넘겨준다.</li>\n</ol>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9rby53aWtpcGVkaWEub3JnL3dpa2kvJUVCJUFBJUE4JUVCJThEJUI4LSVFQiVCNyVCMC0lRUMlQkIlQTglRUQlOEElQjglRUIlQTElQTQlRUIlOUYlQUM=\" title=\"https://ko.wikipedia.org/wiki/%EB%AA%A8%EB%8D%B8-%EB%B7%B0-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC\">Wikipedia<i class=\"fa fa-external-link\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2hhcnVhaXIuZ2l0aHViLmlvL2ZsdXgv\" title=\"http://haruair.github.io/flux/\">Flux 한국어 번역 페이지<i class=\"fa fa-external-link\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZXN0YWxpZ24uZ2l0aHViLmlvLzIwMTUvMTAvMDYvY2FydG9vbi1ndWlkZS10by1mbHV4Lw==\" title=\"https://bestalign.github.io/2015/10/06/cartoon-guide-to-flux/\">Flux로의 카툰 안내서<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n"},{"title":"[React] 초심플 카운터 만들기 with Redux","_content":"\n> Github에서 코드 확인하기 - [클릭](https://github.com/Seonghui/redux-counter)\n\n# Redux\n\nRedux는 페이스북에서 만든 자바스크립트 라이브러리이다. [앞서 말한 Flux]({{site.url}}/react-flux/)의 아이디어를 발전시키되 복잡성을 줄였다. React만 사용해도 되지만 대규모 애플리케이션의 경우 상태 관리하기가 힘들어진다. 그래서 Redux를 사용해 상태 관리를 하는 것이다.\n\n# Redux의 개념\n\nRedux의 기본 개념은 Flux의 기본 개념과 동일하다. 언급하지 않은 게 있는데, 바로 **구독(Subscribe)**과 **리듀서(Reducer)**라는 개념이다.\n\n## 구독(Subscribe)\n\n구독은 원하는 스토어를 설정해서 그 스토어에서 값을 받아온다고 생각하면 된다. 개념이 유튜브의 구독과 거의 똑같다. 원하는 채널(스토어)을 구독하고 그 채널의 동영상(데이터)를 본다는 것에 비유하면 이해하기가 쉽다. Redux의 내장함수에는 구독 함수가 존재하지만, react-redux를 사용하면 `connect` 함수가 대신 해준다. 따라서 직접 구독 함수를 사용할 일은 거의 없다.\n\n## 리듀서(Reducer)\n\n액션은 무언가가 일어난다는 사실만을 기술한다. 애플리케이션의 상태가 어떻게 바뀌는지 정해주는 것은 리듀서가 할 일이다.\n\n# Redux로 카운터 만들기\n\n## 결과 미리보기\n\n![result](/images/react-redux-counter/result.png)\n플러스, 마이너스는 표시된 수를 더하고 뺀다. 랜덤 버튼을 누르면 랜덤한 숫자가 표시된다. 정말 심플한 카운터다.\n\n## 시작하기\n\nReact 프로젝트를 생성하고 redux, react-redux를 전부 설치한다. **redux**는 리덕스 모듈이고, **react-redux**는 리액트에서 리덕스를 사용하기 위한 보조 패키지이다.\n\n```\n# React 프로젝트 생성하기\n$ create-react-app redux-counter\n\n# 폴더 이동\n$ cd redux-counter\n\n# redux, react-redux 전부 설치하기\n$ yarn add redux react-redux\n```\n\n## 디렉토리 구조\n\n주요 디렉토리 구조는 다음과 같다.\n\n```\nsrc\n├── App.js\n├── index.js\n├── actions\n│   └── index.js\n├── reducers\n│   └── index.js\n└── components\n    └── Counter.js\n```\n\nactions 폴더에서는 프로젝트의 모든 action을, reducers 폴더에는 프로젝트의 모든 reducer를 관리한다. 이건 아주 간단한 애플리케이션이기 때문에 index.js 파일 하나만 있으면 된다.\n\n# 컴포넌트 만들기\n\n일단 뷰를 먼저 만들어준다. Counter 컴포넌트를 만들고 App.js에서 불러와주면 된다.\n\n**App.js**\n\n```js\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Counter from \"./components/Counter.js\";\n\nclass App extends Component {\n  render() {\n    return <Counter />;\n  }\n}\n\nexport default App;\n```\n\n**/components/Counter.js**\n\n```js\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  render() {\n    return (\n      <div>\n        <p>0</p>\n        <button>+</button>\n        <button>-</button>\n        <button>random</button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n```\n\n# 액션 만들기\n\n액션 타입과 액션 생성 함수를 정의한다. 액션은 무언가가 일어난다는 사실만을 적어준다. 액션 생성 함수를 정의할 때는 export를 해주어야 나중에 컴포넌트에서 불러올 수 있다.\n\n**/actions/index.js**\n\n```js\n// 액션 타입 정의\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const RANDOM_NUMBER = \"RANDOM_NUMBER\";\n\n// 액션 생성 함수 정의\nexport function increment() {\n  return {\n    type: INCREMENT\n  };\n}\n\nexport function decrement() {\n  return {\n    type: DECREMENT\n  };\n}\n\nexport function random_number() {\n  return {\n    type: RANDOM_NUMBER\n  };\n}\n```\n\n# 리듀서 만들기\n\n리듀서는 애플리케이션의 상태가 어떻게 바뀌는지를 알려준다. 리듀서가 여러 개일 때는 redux의 내장함수인 `combineReducers`를 사용해서 리듀서를 하나로 합치는 작업을 한다. 지금 만드는 카운터는 정말 심플해서 리듀서가 하나밖에는 없지만 한번 사용해보았다.\n\n**/reducers/index.js**\n\n```js\n// 액션과 내장함수 combineReducers 불러오기\nimport { INCREMENT, DECREMENT, RANDOM_NUMBER } from \"../actions\";\nimport { combineReducers } from \"redux\";\n\n// 초기 상태(값) 정의\nconst initialState = {\n  number: 0\n};\n\n// 리듀서 작성\nconst counter = (state = initialState, action) => {\n  switch (action.type) {\n    case RANDOM_NUMBER:\n      return {\n        ...state,\n        number: Math.floor(Math.random() * 10)\n      };\n    case INCREMENT:\n      return {\n        ...state,\n        number: state.number + 1\n      };\n    case DECREMENT:\n      return {\n        ...state,\n        number: state.number - 1\n      };\n    default:\n      return state;\n  }\n};\n\nconst counterApp = combineReducers({\n  counter\n  // 다른 리듀서를 만들면 이 아래에 적어준다\n});\n\nexport default counterApp;\n```\n\nswitch-case 문으로 각 액션마다 어떻게 상태가 바뀌는지를 정해준다. 이것도 마찬가지로 export를 해주어야 한다. export한 리듀서는 스토어를 만들 때 사용한다.\n\n## 스토어를 만들고 연동하기\n\nRedux 라이브러리 안에 있는 `createStore` 함수를 사용해서 스토어를 만들어준다. 스토어는 아까 export한 리듀서로 만들 수 있다. 그리고 react-redux 라이브러리안에 있는 `Provider` 함수를 사용해서 `createStore` 함수로 만든 스토어를 연동해주면 된다.\n\n```js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// createStore와 리듀서 불러오기\nimport { createStore } from \"redux\";\nimport counterApp from \"./reducers\";\n\n// Provider 불러오기\nimport { Provider } from \"react-redux\";\n\n// 스토어 만들기\nconst store = createStore(counterApp);\n\n// Provider 사용해서 기존의 App 감싸주기\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n```\n\n## connect 함수를 사용해 스토어 연동하기\n\n마지막으로 컴포넌트에 리덕스 스토어 안에 있는 값과 액션 생성 함수를 연결해주면 된다. 이건 react-redux의 내장함수 `connect` 함수를 사용하면 된다. `connect` 함수로 연동한 스토어에서 받아오는 값과 액션 생성 함수는 this.props로 접근이 가능하다.\n\n스토어를 연동하기 전에 `mapStateToProps`와 `mapDispatchProps`의 개념을 알아야 한다. `mapStateToProps`는 스토어 안에 있는 **값**을 props로 전달해주고, `mapDispatchProps`는 **액션 생성 함수**를 props로 전달해준다.\n\n지금 만든 스토어에는 값이 **number**, 액션 생성 함수는 **increment, decrement, random_number**가 전부이다. number는 `mapStateToProps`를 사용해 props로 전달하고, increment, decrement, random_number는 `mapDispatchProps`를 사용해 props로 전달한다.\n\n**/components/Counter.js**\n\n```js\n// 액션 생성 함수와 react-redux의 내장함수 connect 불러오기\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { increment, decrement, random_number } from \"../actions\";\n\nclass Counter extends Component {\n  render() {\n    return (\n      <div>\n        <p>{this.props.number}</p>\n        <button onClick={this.props.handleIncrement}>+</button>\n        <button onClick={this.props.handledecrement}>-</button>\n        <button onClick={this.props.handleRandom}>random</button>\n      </div>\n    );\n  }\n}\n\n// 스토어 안에 있는 값을 props로 전달\nconst mapStateToProps = state => {\n  return {\n    number: state.counter.number\n  };\n};\n\n// 액션 생성 함수를 props로 전달\n// 모든 액션은 dispatch를 통해 store에 전달된다는 것을 잊지 말자\nconst mapDispatchProps = dispatch => {\n  return {\n    handleIncrement: () => {\n      dispatch(increment());\n    },\n    handledecrement: () => {\n      dispatch(decrement());\n    },\n    handleRandom: () => {\n      dispatch(random_number());\n    }\n  };\n};\n\n// connect 함수 사용해서 컴포넌트에 리덕스 스토어 연동\nexport default connect(mapStateToProps, mapDispatchProps)(Counter);\n```\n\n# Reference\n\n- [Redux 공식 문서(한글)](https://lunit.gitbook.io/redux-in-korean/)\n- [Velopert님 블로그](https://velopert.com/3346)\n","source":"_posts/2018-10-17-react-redux-counter.md","raw":"---\ntitle: \"[React] 초심플 카운터 만들기 with Redux\"\ntags: [react, study]\ncategories: React\n---\n\n> Github에서 코드 확인하기 - [클릭](https://github.com/Seonghui/redux-counter)\n\n# Redux\n\nRedux는 페이스북에서 만든 자바스크립트 라이브러리이다. [앞서 말한 Flux]({{site.url}}/react-flux/)의 아이디어를 발전시키되 복잡성을 줄였다. React만 사용해도 되지만 대규모 애플리케이션의 경우 상태 관리하기가 힘들어진다. 그래서 Redux를 사용해 상태 관리를 하는 것이다.\n\n# Redux의 개념\n\nRedux의 기본 개념은 Flux의 기본 개념과 동일하다. 언급하지 않은 게 있는데, 바로 **구독(Subscribe)**과 **리듀서(Reducer)**라는 개념이다.\n\n## 구독(Subscribe)\n\n구독은 원하는 스토어를 설정해서 그 스토어에서 값을 받아온다고 생각하면 된다. 개념이 유튜브의 구독과 거의 똑같다. 원하는 채널(스토어)을 구독하고 그 채널의 동영상(데이터)를 본다는 것에 비유하면 이해하기가 쉽다. Redux의 내장함수에는 구독 함수가 존재하지만, react-redux를 사용하면 `connect` 함수가 대신 해준다. 따라서 직접 구독 함수를 사용할 일은 거의 없다.\n\n## 리듀서(Reducer)\n\n액션은 무언가가 일어난다는 사실만을 기술한다. 애플리케이션의 상태가 어떻게 바뀌는지 정해주는 것은 리듀서가 할 일이다.\n\n# Redux로 카운터 만들기\n\n## 결과 미리보기\n\n![result](/images/react-redux-counter/result.png)\n플러스, 마이너스는 표시된 수를 더하고 뺀다. 랜덤 버튼을 누르면 랜덤한 숫자가 표시된다. 정말 심플한 카운터다.\n\n## 시작하기\n\nReact 프로젝트를 생성하고 redux, react-redux를 전부 설치한다. **redux**는 리덕스 모듈이고, **react-redux**는 리액트에서 리덕스를 사용하기 위한 보조 패키지이다.\n\n```\n# React 프로젝트 생성하기\n$ create-react-app redux-counter\n\n# 폴더 이동\n$ cd redux-counter\n\n# redux, react-redux 전부 설치하기\n$ yarn add redux react-redux\n```\n\n## 디렉토리 구조\n\n주요 디렉토리 구조는 다음과 같다.\n\n```\nsrc\n├── App.js\n├── index.js\n├── actions\n│   └── index.js\n├── reducers\n│   └── index.js\n└── components\n    └── Counter.js\n```\n\nactions 폴더에서는 프로젝트의 모든 action을, reducers 폴더에는 프로젝트의 모든 reducer를 관리한다. 이건 아주 간단한 애플리케이션이기 때문에 index.js 파일 하나만 있으면 된다.\n\n# 컴포넌트 만들기\n\n일단 뷰를 먼저 만들어준다. Counter 컴포넌트를 만들고 App.js에서 불러와주면 된다.\n\n**App.js**\n\n```js\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Counter from \"./components/Counter.js\";\n\nclass App extends Component {\n  render() {\n    return <Counter />;\n  }\n}\n\nexport default App;\n```\n\n**/components/Counter.js**\n\n```js\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  render() {\n    return (\n      <div>\n        <p>0</p>\n        <button>+</button>\n        <button>-</button>\n        <button>random</button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n```\n\n# 액션 만들기\n\n액션 타입과 액션 생성 함수를 정의한다. 액션은 무언가가 일어난다는 사실만을 적어준다. 액션 생성 함수를 정의할 때는 export를 해주어야 나중에 컴포넌트에서 불러올 수 있다.\n\n**/actions/index.js**\n\n```js\n// 액션 타입 정의\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const RANDOM_NUMBER = \"RANDOM_NUMBER\";\n\n// 액션 생성 함수 정의\nexport function increment() {\n  return {\n    type: INCREMENT\n  };\n}\n\nexport function decrement() {\n  return {\n    type: DECREMENT\n  };\n}\n\nexport function random_number() {\n  return {\n    type: RANDOM_NUMBER\n  };\n}\n```\n\n# 리듀서 만들기\n\n리듀서는 애플리케이션의 상태가 어떻게 바뀌는지를 알려준다. 리듀서가 여러 개일 때는 redux의 내장함수인 `combineReducers`를 사용해서 리듀서를 하나로 합치는 작업을 한다. 지금 만드는 카운터는 정말 심플해서 리듀서가 하나밖에는 없지만 한번 사용해보았다.\n\n**/reducers/index.js**\n\n```js\n// 액션과 내장함수 combineReducers 불러오기\nimport { INCREMENT, DECREMENT, RANDOM_NUMBER } from \"../actions\";\nimport { combineReducers } from \"redux\";\n\n// 초기 상태(값) 정의\nconst initialState = {\n  number: 0\n};\n\n// 리듀서 작성\nconst counter = (state = initialState, action) => {\n  switch (action.type) {\n    case RANDOM_NUMBER:\n      return {\n        ...state,\n        number: Math.floor(Math.random() * 10)\n      };\n    case INCREMENT:\n      return {\n        ...state,\n        number: state.number + 1\n      };\n    case DECREMENT:\n      return {\n        ...state,\n        number: state.number - 1\n      };\n    default:\n      return state;\n  }\n};\n\nconst counterApp = combineReducers({\n  counter\n  // 다른 리듀서를 만들면 이 아래에 적어준다\n});\n\nexport default counterApp;\n```\n\nswitch-case 문으로 각 액션마다 어떻게 상태가 바뀌는지를 정해준다. 이것도 마찬가지로 export를 해주어야 한다. export한 리듀서는 스토어를 만들 때 사용한다.\n\n## 스토어를 만들고 연동하기\n\nRedux 라이브러리 안에 있는 `createStore` 함수를 사용해서 스토어를 만들어준다. 스토어는 아까 export한 리듀서로 만들 수 있다. 그리고 react-redux 라이브러리안에 있는 `Provider` 함수를 사용해서 `createStore` 함수로 만든 스토어를 연동해주면 된다.\n\n```js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// createStore와 리듀서 불러오기\nimport { createStore } from \"redux\";\nimport counterApp from \"./reducers\";\n\n// Provider 불러오기\nimport { Provider } from \"react-redux\";\n\n// 스토어 만들기\nconst store = createStore(counterApp);\n\n// Provider 사용해서 기존의 App 감싸주기\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n```\n\n## connect 함수를 사용해 스토어 연동하기\n\n마지막으로 컴포넌트에 리덕스 스토어 안에 있는 값과 액션 생성 함수를 연결해주면 된다. 이건 react-redux의 내장함수 `connect` 함수를 사용하면 된다. `connect` 함수로 연동한 스토어에서 받아오는 값과 액션 생성 함수는 this.props로 접근이 가능하다.\n\n스토어를 연동하기 전에 `mapStateToProps`와 `mapDispatchProps`의 개념을 알아야 한다. `mapStateToProps`는 스토어 안에 있는 **값**을 props로 전달해주고, `mapDispatchProps`는 **액션 생성 함수**를 props로 전달해준다.\n\n지금 만든 스토어에는 값이 **number**, 액션 생성 함수는 **increment, decrement, random_number**가 전부이다. number는 `mapStateToProps`를 사용해 props로 전달하고, increment, decrement, random_number는 `mapDispatchProps`를 사용해 props로 전달한다.\n\n**/components/Counter.js**\n\n```js\n// 액션 생성 함수와 react-redux의 내장함수 connect 불러오기\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { increment, decrement, random_number } from \"../actions\";\n\nclass Counter extends Component {\n  render() {\n    return (\n      <div>\n        <p>{this.props.number}</p>\n        <button onClick={this.props.handleIncrement}>+</button>\n        <button onClick={this.props.handledecrement}>-</button>\n        <button onClick={this.props.handleRandom}>random</button>\n      </div>\n    );\n  }\n}\n\n// 스토어 안에 있는 값을 props로 전달\nconst mapStateToProps = state => {\n  return {\n    number: state.counter.number\n  };\n};\n\n// 액션 생성 함수를 props로 전달\n// 모든 액션은 dispatch를 통해 store에 전달된다는 것을 잊지 말자\nconst mapDispatchProps = dispatch => {\n  return {\n    handleIncrement: () => {\n      dispatch(increment());\n    },\n    handledecrement: () => {\n      dispatch(decrement());\n    },\n    handleRandom: () => {\n      dispatch(random_number());\n    }\n  };\n};\n\n// connect 함수 사용해서 컴포넌트에 리덕스 스토어 연동\nexport default connect(mapStateToProps, mapDispatchProps)(Counter);\n```\n\n# Reference\n\n- [Redux 공식 문서(한글)](https://lunit.gitbook.io/redux-in-korean/)\n- [Velopert님 블로그](https://velopert.com/3346)\n","slug":"react-redux-counter","published":1,"date":"2018-10-16T15:00:00.000Z","updated":"2020-05-05T08:00:03.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgx0039uv59aywcb5yn","content":"<blockquote>\n<p>Github에서 코드 확인하기 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Nlb25naHVpL3JlZHV4LWNvdW50ZXI=\" title=\"https://github.com/Seonghui/redux-counter\">클릭<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h1 id=\"Redux\"><a href=\"#Redux\" class=\"headerlink\" title=\"Redux\"></a>Redux</h1><p>Redux는 페이스북에서 만든 자바스크립트 라이브러리이다. <a href=\"/react-flux/\">앞서 말한 Flux</a>의 아이디어를 발전시키되 복잡성을 줄였다. React만 사용해도 되지만 대규모 애플리케이션의 경우 상태 관리하기가 힘들어진다. 그래서 Redux를 사용해 상태 관리를 하는 것이다.</p>\n<h1 id=\"Redux의-개념\"><a href=\"#Redux의-개념\" class=\"headerlink\" title=\"Redux의 개념\"></a>Redux의 개념</h1><p>Redux의 기본 개념은 Flux의 기본 개념과 동일하다. 언급하지 않은 게 있는데, 바로 <strong>구독(Subscribe)</strong>과 <strong>리듀서(Reducer)</strong>라는 개념이다.</p>\n<h2 id=\"구독-Subscribe\"><a href=\"#구독-Subscribe\" class=\"headerlink\" title=\"구독(Subscribe)\"></a>구독(Subscribe)</h2><p>구독은 원하는 스토어를 설정해서 그 스토어에서 값을 받아온다고 생각하면 된다. 개념이 유튜브의 구독과 거의 똑같다. 원하는 채널(스토어)을 구독하고 그 채널의 동영상(데이터)를 본다는 것에 비유하면 이해하기가 쉽다. Redux의 내장함수에는 구독 함수가 존재하지만, react-redux를 사용하면 <code>connect</code> 함수가 대신 해준다. 따라서 직접 구독 함수를 사용할 일은 거의 없다.</p>\n<h2 id=\"리듀서-Reducer\"><a href=\"#리듀서-Reducer\" class=\"headerlink\" title=\"리듀서(Reducer)\"></a>리듀서(Reducer)</h2><p>액션은 무언가가 일어난다는 사실만을 기술한다. 애플리케이션의 상태가 어떻게 바뀌는지 정해주는 것은 리듀서가 할 일이다.</p>\n<h1 id=\"Redux로-카운터-만들기\"><a href=\"#Redux로-카운터-만들기\" class=\"headerlink\" title=\"Redux로 카운터 만들기\"></a>Redux로 카운터 만들기</h1><h2 id=\"결과-미리보기\"><a href=\"#결과-미리보기\" class=\"headerlink\" title=\"결과 미리보기\"></a>결과 미리보기</h2><p><img src=\"/images/react-redux-counter/result.png\" alt=\"result\"><br>플러스, 마이너스는 표시된 수를 더하고 뺀다. 랜덤 버튼을 누르면 랜덤한 숫자가 표시된다. 정말 심플한 카운터다.</p>\n<h2 id=\"시작하기\"><a href=\"#시작하기\" class=\"headerlink\" title=\"시작하기\"></a>시작하기</h2><p>React 프로젝트를 생성하고 redux, react-redux를 전부 설치한다. <strong>redux</strong>는 리덕스 모듈이고, <strong>react-redux</strong>는 리액트에서 리덕스를 사용하기 위한 보조 패키지이다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># React 프로젝트 생성하기</span><br><span class=\"line\">$ create-react-app redux-counter</span><br><span class=\"line\"></span><br><span class=\"line\"># 폴더 이동</span><br><span class=\"line\">$ cd redux-counter</span><br><span class=\"line\"></span><br><span class=\"line\"># redux, react-redux 전부 설치하기</span><br><span class=\"line\">$ yarn add redux react-redux</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"디렉토리-구조\"><a href=\"#디렉토리-구조\" class=\"headerlink\" title=\"디렉토리 구조\"></a>디렉토리 구조</h2><p>주요 디렉토리 구조는 다음과 같다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src</span><br><span class=\"line\">├── App.js</span><br><span class=\"line\">├── index.js</span><br><span class=\"line\">├── actions</span><br><span class=\"line\">│   └── index.js</span><br><span class=\"line\">├── reducers</span><br><span class=\"line\">│   └── index.js</span><br><span class=\"line\">└── components</span><br><span class=\"line\">    └── Counter.js</span><br></pre></td></tr></table></figure>\n\n<p>actions 폴더에서는 프로젝트의 모든 action을, reducers 폴더에는 프로젝트의 모든 reducer를 관리한다. 이건 아주 간단한 애플리케이션이기 때문에 index.js 파일 하나만 있으면 된다.</p>\n<h1 id=\"컴포넌트-만들기\"><a href=\"#컴포넌트-만들기\" class=\"headerlink\" title=\"컴포넌트 만들기\"></a>컴포넌트 만들기</h1><p>일단 뷰를 먼저 만들어준다. Counter 컴포넌트를 만들고 App.js에서 불러와주면 된다.</p>\n<p><strong>App.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"./App.css\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Counter <span class=\"keyword\">from</span> <span class=\"string\">\"./components/Counter.js\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Counter</span> /&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> App;</span><br></pre></td></tr></table></figure>\n\n<p><strong>/components/Counter.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Counter</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;<span class=\"number\">0</span>&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;button&gt;+&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;button&gt;-&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;button&gt;random&lt;/</span>button&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default Counter;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"액션-만들기\"><a href=\"#액션-만들기\" class=\"headerlink\" title=\"액션 만들기\"></a>액션 만들기</h1><p>액션 타입과 액션 생성 함수를 정의한다. 액션은 무언가가 일어난다는 사실만을 적어준다. 액션 생성 함수를 정의할 때는 export를 해주어야 나중에 컴포넌트에서 불러올 수 있다.</p>\n<p><strong>/actions/index.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 액션 타입 정의</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> INCREMENT = <span class=\"string\">\"INCREMENT\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> DECREMENT = <span class=\"string\">\"DECREMENT\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> RANDOM_NUMBER = <span class=\"string\">\"RANDOM_NUMBER\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 액션 생성 함수 정의</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">increment</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    type: INCREMENT</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decrement</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    type: DECREMENT</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">random_number</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    type: RANDOM_NUMBER</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"리듀서-만들기\"><a href=\"#리듀서-만들기\" class=\"headerlink\" title=\"리듀서 만들기\"></a>리듀서 만들기</h1><p>리듀서는 애플리케이션의 상태가 어떻게 바뀌는지를 알려준다. 리듀서가 여러 개일 때는 redux의 내장함수인 <code>combineReducers</code>를 사용해서 리듀서를 하나로 합치는 작업을 한다. 지금 만드는 카운터는 정말 심플해서 리듀서가 하나밖에는 없지만 한번 사용해보았다.</p>\n<p><strong>/reducers/index.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 액션과 내장함수 combineReducers 불러오기</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; INCREMENT, DECREMENT, RANDOM_NUMBER &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"../actions\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; combineReducers &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"redux\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 초기 상태(값) 정의</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> initialState = &#123;</span><br><span class=\"line\">  number: <span class=\"number\">0</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 리듀서 작성</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> counter = <span class=\"function\">(<span class=\"params\">state = initialState, action</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (action.type) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> RANDOM_NUMBER:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ...state,</span><br><span class=\"line\">        number: <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> INCREMENT:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ...state,</span><br><span class=\"line\">        number: state.number + <span class=\"number\">1</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> DECREMENT:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ...state,</span><br><span class=\"line\">        number: state.number - <span class=\"number\">1</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> counterApp = combineReducers(&#123;</span><br><span class=\"line\">  counter</span><br><span class=\"line\">  <span class=\"comment\">// 다른 리듀서를 만들면 이 아래에 적어준다</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> counterApp;</span><br></pre></td></tr></table></figure>\n\n<p>switch-case 문으로 각 액션마다 어떻게 상태가 바뀌는지를 정해준다. 이것도 마찬가지로 export를 해주어야 한다. export한 리듀서는 스토어를 만들 때 사용한다.</p>\n<h2 id=\"스토어를-만들고-연동하기\"><a href=\"#스토어를-만들고-연동하기\" class=\"headerlink\" title=\"스토어를 만들고 연동하기\"></a>스토어를 만들고 연동하기</h2><p>Redux 라이브러리 안에 있는 <code>createStore</code> 함수를 사용해서 스토어를 만들어준다. 스토어는 아까 export한 리듀서로 만들 수 있다. 그리고 react-redux 라이브러리안에 있는 <code>Provider</code> 함수를 사용해서 <code>createStore</code> 함수로 만든 스토어를 연동해주면 된다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDOM <span class=\"keyword\">from</span> <span class=\"string\">\"react-dom\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"./index.css\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">\"./App\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> serviceWorker <span class=\"keyword\">from</span> <span class=\"string\">\"./serviceWorker\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// createStore와 리듀서 불러오기</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"redux\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> counterApp <span class=\"keyword\">from</span> <span class=\"string\">\"./reducers\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Provider 불러오기</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Provider &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-redux\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 스토어 만들기</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = createStore(counterApp);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Provider 사용해서 기존의 App 감싸주기</span></span><br><span class=\"line\">ReactDOM.render(</span><br><span class=\"line\">  &lt;Provider store=&#123;store&#125;&gt;</span><br><span class=\"line\">    &lt;App /&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/Provider&gt;,</span></span><br><span class=\"line\"><span class=\"regexp\">  document.getElementById(\"root\")</span></span><br><span class=\"line\"><span class=\"regexp\">);</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">serviceWorker.unregister();</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"connect-함수를-사용해-스토어-연동하기\"><a href=\"#connect-함수를-사용해-스토어-연동하기\" class=\"headerlink\" title=\"connect 함수를 사용해 스토어 연동하기\"></a>connect 함수를 사용해 스토어 연동하기</h2><p>마지막으로 컴포넌트에 리덕스 스토어 안에 있는 값과 액션 생성 함수를 연결해주면 된다. 이건 react-redux의 내장함수 <code>connect</code> 함수를 사용하면 된다. <code>connect</code> 함수로 연동한 스토어에서 받아오는 값과 액션 생성 함수는 this.props로 접근이 가능하다.</p>\n<p>스토어를 연동하기 전에 <code>mapStateToProps</code>와 <code>mapDispatchProps</code>의 개념을 알아야 한다. <code>mapStateToProps</code>는 스토어 안에 있는 <strong>값</strong>을 props로 전달해주고, <code>mapDispatchProps</code>는 <strong>액션 생성 함수</strong>를 props로 전달해준다.</p>\n<p>지금 만든 스토어에는 값이 <strong>number</strong>, 액션 생성 함수는 <strong>increment, decrement, random_number</strong>가 전부이다. number는 <code>mapStateToProps</code>를 사용해 props로 전달하고, increment, decrement, random_number는 <code>mapDispatchProps</code>를 사용해 props로 전달한다.</p>\n<p><strong>/components/Counter.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 액션 생성 함수와 react-redux의 내장함수 connect 불러오기</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; connect &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-redux\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; increment, decrement, random_number &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"../actions\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Counter</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;&#123;<span class=\"keyword\">this</span>.props.number&#125;&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;button onClick=&#123;this.props.handleIncrement&#125;&gt;+&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;button onClick=&#123;<span class=\"keyword\">this</span>.props.handledecrement&#125;&gt;-&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;button onClick=&#123;this.props.handleRandom&#125;&gt;random&lt;/</span>button&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 스토어 안에 있는 값을 props로 전달</span></span><br><span class=\"line\"><span class=\"regexp\">const mapStateToProps = state =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    number: state.counter.number</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 액션 생성 함수를 props로 전달</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 모든 액션은 dispatch를 통해 store에 전달된다는 것을 잊지 말자</span></span><br><span class=\"line\"><span class=\"regexp\">const mapDispatchProps = dispatch =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    handleIncrement: () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      dispatch(increment());</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    handledecrement: () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      dispatch(decrement());</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    handleRandom: () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      dispatch(random_number());</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ connect 함수 사용해서 컴포넌트에 리덕스 스토어 연동</span></span><br><span class=\"line\"><span class=\"regexp\">export default connect(mapStateToProps, mapDispatchProps)(Counter);</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sdW5pdC5naXRib29rLmlvL3JlZHV4LWluLWtvcmVhbi8=\" title=\"https://lunit.gitbook.io/redux-in-korean/\">Redux 공식 문서(한글)<i class=\"fa fa-external-link\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly92ZWxvcGVydC5jb20vMzM0Ng==\" title=\"https://velopert.com/3346\">Velopert님 블로그<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Github에서 코드 확인하기 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Nlb25naHVpL3JlZHV4LWNvdW50ZXI=\" title=\"https://github.com/Seonghui/redux-counter\">클릭<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h1 id=\"Redux\"><a href=\"#Redux\" class=\"headerlink\" title=\"Redux\"></a>Redux</h1><p>Redux는 페이스북에서 만든 자바스크립트 라이브러리이다. <a href=\"/react-flux/\">앞서 말한 Flux</a>의 아이디어를 발전시키되 복잡성을 줄였다. React만 사용해도 되지만 대규모 애플리케이션의 경우 상태 관리하기가 힘들어진다. 그래서 Redux를 사용해 상태 관리를 하는 것이다.</p>\n<h1 id=\"Redux의-개념\"><a href=\"#Redux의-개념\" class=\"headerlink\" title=\"Redux의 개념\"></a>Redux의 개념</h1><p>Redux의 기본 개념은 Flux의 기본 개념과 동일하다. 언급하지 않은 게 있는데, 바로 <strong>구독(Subscribe)</strong>과 <strong>리듀서(Reducer)</strong>라는 개념이다.</p>\n<h2 id=\"구독-Subscribe\"><a href=\"#구독-Subscribe\" class=\"headerlink\" title=\"구독(Subscribe)\"></a>구독(Subscribe)</h2><p>구독은 원하는 스토어를 설정해서 그 스토어에서 값을 받아온다고 생각하면 된다. 개념이 유튜브의 구독과 거의 똑같다. 원하는 채널(스토어)을 구독하고 그 채널의 동영상(데이터)를 본다는 것에 비유하면 이해하기가 쉽다. Redux의 내장함수에는 구독 함수가 존재하지만, react-redux를 사용하면 <code>connect</code> 함수가 대신 해준다. 따라서 직접 구독 함수를 사용할 일은 거의 없다.</p>\n<h2 id=\"리듀서-Reducer\"><a href=\"#리듀서-Reducer\" class=\"headerlink\" title=\"리듀서(Reducer)\"></a>리듀서(Reducer)</h2><p>액션은 무언가가 일어난다는 사실만을 기술한다. 애플리케이션의 상태가 어떻게 바뀌는지 정해주는 것은 리듀서가 할 일이다.</p>\n<h1 id=\"Redux로-카운터-만들기\"><a href=\"#Redux로-카운터-만들기\" class=\"headerlink\" title=\"Redux로 카운터 만들기\"></a>Redux로 카운터 만들기</h1><h2 id=\"결과-미리보기\"><a href=\"#결과-미리보기\" class=\"headerlink\" title=\"결과 미리보기\"></a>결과 미리보기</h2><p><img src=\"/images/react-redux-counter/result.png\" alt=\"result\"><br>플러스, 마이너스는 표시된 수를 더하고 뺀다. 랜덤 버튼을 누르면 랜덤한 숫자가 표시된다. 정말 심플한 카운터다.</p>\n<h2 id=\"시작하기\"><a href=\"#시작하기\" class=\"headerlink\" title=\"시작하기\"></a>시작하기</h2><p>React 프로젝트를 생성하고 redux, react-redux를 전부 설치한다. <strong>redux</strong>는 리덕스 모듈이고, <strong>react-redux</strong>는 리액트에서 리덕스를 사용하기 위한 보조 패키지이다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># React 프로젝트 생성하기</span><br><span class=\"line\">$ create-react-app redux-counter</span><br><span class=\"line\"></span><br><span class=\"line\"># 폴더 이동</span><br><span class=\"line\">$ cd redux-counter</span><br><span class=\"line\"></span><br><span class=\"line\"># redux, react-redux 전부 설치하기</span><br><span class=\"line\">$ yarn add redux react-redux</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"디렉토리-구조\"><a href=\"#디렉토리-구조\" class=\"headerlink\" title=\"디렉토리 구조\"></a>디렉토리 구조</h2><p>주요 디렉토리 구조는 다음과 같다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src</span><br><span class=\"line\">├── App.js</span><br><span class=\"line\">├── index.js</span><br><span class=\"line\">├── actions</span><br><span class=\"line\">│   └── index.js</span><br><span class=\"line\">├── reducers</span><br><span class=\"line\">│   └── index.js</span><br><span class=\"line\">└── components</span><br><span class=\"line\">    └── Counter.js</span><br></pre></td></tr></table></figure>\n\n<p>actions 폴더에서는 프로젝트의 모든 action을, reducers 폴더에는 프로젝트의 모든 reducer를 관리한다. 이건 아주 간단한 애플리케이션이기 때문에 index.js 파일 하나만 있으면 된다.</p>\n<h1 id=\"컴포넌트-만들기\"><a href=\"#컴포넌트-만들기\" class=\"headerlink\" title=\"컴포넌트 만들기\"></a>컴포넌트 만들기</h1><p>일단 뷰를 먼저 만들어준다. Counter 컴포넌트를 만들고 App.js에서 불러와주면 된다.</p>\n<p><strong>App.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"./App.css\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Counter <span class=\"keyword\">from</span> <span class=\"string\">\"./components/Counter.js\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">Counter</span> /&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> App;</span><br></pre></td></tr></table></figure>\n\n<p><strong>/components/Counter.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Counter</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;<span class=\"number\">0</span>&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;button&gt;+&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;button&gt;-&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;button&gt;random&lt;/</span>button&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">export default Counter;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"액션-만들기\"><a href=\"#액션-만들기\" class=\"headerlink\" title=\"액션 만들기\"></a>액션 만들기</h1><p>액션 타입과 액션 생성 함수를 정의한다. 액션은 무언가가 일어난다는 사실만을 적어준다. 액션 생성 함수를 정의할 때는 export를 해주어야 나중에 컴포넌트에서 불러올 수 있다.</p>\n<p><strong>/actions/index.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 액션 타입 정의</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> INCREMENT = <span class=\"string\">\"INCREMENT\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> DECREMENT = <span class=\"string\">\"DECREMENT\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> RANDOM_NUMBER = <span class=\"string\">\"RANDOM_NUMBER\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 액션 생성 함수 정의</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">increment</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    type: INCREMENT</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decrement</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    type: DECREMENT</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">random_number</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    type: RANDOM_NUMBER</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"리듀서-만들기\"><a href=\"#리듀서-만들기\" class=\"headerlink\" title=\"리듀서 만들기\"></a>리듀서 만들기</h1><p>리듀서는 애플리케이션의 상태가 어떻게 바뀌는지를 알려준다. 리듀서가 여러 개일 때는 redux의 내장함수인 <code>combineReducers</code>를 사용해서 리듀서를 하나로 합치는 작업을 한다. 지금 만드는 카운터는 정말 심플해서 리듀서가 하나밖에는 없지만 한번 사용해보았다.</p>\n<p><strong>/reducers/index.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 액션과 내장함수 combineReducers 불러오기</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; INCREMENT, DECREMENT, RANDOM_NUMBER &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"../actions\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; combineReducers &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"redux\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 초기 상태(값) 정의</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> initialState = &#123;</span><br><span class=\"line\">  number: <span class=\"number\">0</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 리듀서 작성</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> counter = <span class=\"function\">(<span class=\"params\">state = initialState, action</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (action.type) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> RANDOM_NUMBER:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ...state,</span><br><span class=\"line\">        number: <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.random() * <span class=\"number\">10</span>)</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> INCREMENT:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ...state,</span><br><span class=\"line\">        number: state.number + <span class=\"number\">1</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> DECREMENT:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ...state,</span><br><span class=\"line\">        number: state.number - <span class=\"number\">1</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"keyword\">return</span> state;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> counterApp = combineReducers(&#123;</span><br><span class=\"line\">  counter</span><br><span class=\"line\">  <span class=\"comment\">// 다른 리듀서를 만들면 이 아래에 적어준다</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> counterApp;</span><br></pre></td></tr></table></figure>\n\n<p>switch-case 문으로 각 액션마다 어떻게 상태가 바뀌는지를 정해준다. 이것도 마찬가지로 export를 해주어야 한다. export한 리듀서는 스토어를 만들 때 사용한다.</p>\n<h2 id=\"스토어를-만들고-연동하기\"><a href=\"#스토어를-만들고-연동하기\" class=\"headerlink\" title=\"스토어를 만들고 연동하기\"></a>스토어를 만들고 연동하기</h2><p>Redux 라이브러리 안에 있는 <code>createStore</code> 함수를 사용해서 스토어를 만들어준다. 스토어는 아까 export한 리듀서로 만들 수 있다. 그리고 react-redux 라이브러리안에 있는 <code>Provider</code> 함수를 사용해서 <code>createStore</code> 함수로 만든 스토어를 연동해주면 된다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDOM <span class=\"keyword\">from</span> <span class=\"string\">\"react-dom\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"./index.css\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> App <span class=\"keyword\">from</span> <span class=\"string\">\"./App\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> serviceWorker <span class=\"keyword\">from</span> <span class=\"string\">\"./serviceWorker\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// createStore와 리듀서 불러오기</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; createStore &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"redux\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> counterApp <span class=\"keyword\">from</span> <span class=\"string\">\"./reducers\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Provider 불러오기</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; Provider &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-redux\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 스토어 만들기</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> store = createStore(counterApp);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Provider 사용해서 기존의 App 감싸주기</span></span><br><span class=\"line\">ReactDOM.render(</span><br><span class=\"line\">  &lt;Provider store=&#123;store&#125;&gt;</span><br><span class=\"line\">    &lt;App /&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/Provider&gt;,</span></span><br><span class=\"line\"><span class=\"regexp\">  document.getElementById(\"root\")</span></span><br><span class=\"line\"><span class=\"regexp\">);</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">serviceWorker.unregister();</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"connect-함수를-사용해-스토어-연동하기\"><a href=\"#connect-함수를-사용해-스토어-연동하기\" class=\"headerlink\" title=\"connect 함수를 사용해 스토어 연동하기\"></a>connect 함수를 사용해 스토어 연동하기</h2><p>마지막으로 컴포넌트에 리덕스 스토어 안에 있는 값과 액션 생성 함수를 연결해주면 된다. 이건 react-redux의 내장함수 <code>connect</code> 함수를 사용하면 된다. <code>connect</code> 함수로 연동한 스토어에서 받아오는 값과 액션 생성 함수는 this.props로 접근이 가능하다.</p>\n<p>스토어를 연동하기 전에 <code>mapStateToProps</code>와 <code>mapDispatchProps</code>의 개념을 알아야 한다. <code>mapStateToProps</code>는 스토어 안에 있는 <strong>값</strong>을 props로 전달해주고, <code>mapDispatchProps</code>는 <strong>액션 생성 함수</strong>를 props로 전달해준다.</p>\n<p>지금 만든 스토어에는 값이 <strong>number</strong>, 액션 생성 함수는 <strong>increment, decrement, random_number</strong>가 전부이다. number는 <code>mapStateToProps</code>를 사용해 props로 전달하고, increment, decrement, random_number는 <code>mapDispatchProps</code>를 사용해 props로 전달한다.</p>\n<p><strong>/components/Counter.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 액션 생성 함수와 react-redux의 내장함수 connect 불러오기</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> React, &#123; Component &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; connect &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-redux\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; increment, decrement, random_number &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"../actions\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Counter</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\">  render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;p&gt;&#123;<span class=\"keyword\">this</span>.props.number&#125;&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;button onClick=&#123;this.props.handleIncrement&#125;&gt;+&lt;/</span>button&gt;</span><br><span class=\"line\">        &lt;button onClick=&#123;<span class=\"keyword\">this</span>.props.handledecrement&#125;&gt;-&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;button onClick=&#123;this.props.handleRandom&#125;&gt;random&lt;/</span>button&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    );</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 스토어 안에 있는 값을 props로 전달</span></span><br><span class=\"line\"><span class=\"regexp\">const mapStateToProps = state =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    number: state.counter.number</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 액션 생성 함수를 props로 전달</span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ 모든 액션은 dispatch를 통해 store에 전달된다는 것을 잊지 말자</span></span><br><span class=\"line\"><span class=\"regexp\">const mapDispatchProps = dispatch =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    handleIncrement: () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      dispatch(increment());</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    handledecrement: () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      dispatch(decrement());</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">    handleRandom: () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      dispatch(random_number());</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">/</span><span class=\"regexp\">/ connect 함수 사용해서 컴포넌트에 리덕스 스토어 연동</span></span><br><span class=\"line\"><span class=\"regexp\">export default connect(mapStateToProps, mapDispatchProps)(Counter);</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sdW5pdC5naXRib29rLmlvL3JlZHV4LWluLWtvcmVhbi8=\" title=\"https://lunit.gitbook.io/redux-in-korean/\">Redux 공식 문서(한글)<i class=\"fa fa-external-link\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly92ZWxvcGVydC5jb20vMzM0Ng==\" title=\"https://velopert.com/3346\">Velopert님 블로그<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n"},{"title":"[백준/2156] 포도주 시식","_content":"> Baekjoon Online Judge - [2156](https://www.acmicpc.net/problem/2156)\n\n## Review\n* 경우는 총 세 가지\n  1. 현재 포도주는 마시지 않을 경우\n  2. 현재 포도주는 마시고 이전 포도주는 마시지 않은 경우\n  3. 현재 포도주와 이전의 포도주를 마신 경우\n\n* 각각의 경우를 점화식으로 나타내면 다음과 같다.\n  1. dp[i - 1]\n  2. wine[i] + dp[i - 2]\n  3. wine[i] + wine[i - 1] + dp[i - 3]\n\n* 여기서 dp[]는 포도주를 마신 최대값이 되고, wine[]은 포도주의 양이다.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n  \n  public static int Max(int a, int b, int c) {\n    if(b > c) {\n      return a > b ? a : b;\n    } else {\n      if(a > c) {\n        return a;\n      } else {\n        return c;\n      }\n    }\n  }\n  \n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int N = sc.nextInt();\n    \n    int[] wine = new int[10001];\n    int[] dp = new int[10001];\n    \n    // 배열 초기화\n    for(int i = 1; i <= N; i++) {\n      wine[i] = sc.nextInt();\n    }\n\n    dp[0] = 0;\n    dp[1] = wine[1];\n    dp[2] = dp[1] + wine[2];\n    \n    // 값 비교\n    for(int i = 3; i <= N; i++) {\n      dp[i] = Max(dp[i-1], wine[i] + dp[i-2], wine[i] + wine[i-1] + dp[i-3]);\n    }\n    \n    System.out.println(dp[N]);\n    sc.close();\n    \n  }\n  \n}\n```","source":"_posts/2018-10-24-bj-2156.md","raw":"---\ntitle: \"[백준/2156] 포도주 시식\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [2156](https://www.acmicpc.net/problem/2156)\n\n## Review\n* 경우는 총 세 가지\n  1. 현재 포도주는 마시지 않을 경우\n  2. 현재 포도주는 마시고 이전 포도주는 마시지 않은 경우\n  3. 현재 포도주와 이전의 포도주를 마신 경우\n\n* 각각의 경우를 점화식으로 나타내면 다음과 같다.\n  1. dp[i - 1]\n  2. wine[i] + dp[i - 2]\n  3. wine[i] + wine[i - 1] + dp[i - 3]\n\n* 여기서 dp[]는 포도주를 마신 최대값이 되고, wine[]은 포도주의 양이다.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n  \n  public static int Max(int a, int b, int c) {\n    if(b > c) {\n      return a > b ? a : b;\n    } else {\n      if(a > c) {\n        return a;\n      } else {\n        return c;\n      }\n    }\n  }\n  \n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int N = sc.nextInt();\n    \n    int[] wine = new int[10001];\n    int[] dp = new int[10001];\n    \n    // 배열 초기화\n    for(int i = 1; i <= N; i++) {\n      wine[i] = sc.nextInt();\n    }\n\n    dp[0] = 0;\n    dp[1] = wine[1];\n    dp[2] = dp[1] + wine[2];\n    \n    // 값 비교\n    for(int i = 3; i <= N; i++) {\n      dp[i] = Max(dp[i-1], wine[i] + dp[i-2], wine[i] + wine[i-1] + dp[i-3]);\n    }\n    \n    System.out.println(dp[N]);\n    sc.close();\n    \n  }\n  \n}\n```","slug":"bj-2156","published":1,"date":"2018-10-23T15:00:00.000Z","updated":"2020-05-05T08:00:03.857Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afgy003duv59gvegg8sq","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yMTU2\" title=\"https://www.acmicpc.net/problem/2156\">2156<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li><p>경우는 총 세 가지</p>\n<ol>\n<li>현재 포도주는 마시지 않을 경우</li>\n<li>현재 포도주는 마시고 이전 포도주는 마시지 않은 경우</li>\n<li>현재 포도주와 이전의 포도주를 마신 경우</li>\n</ol>\n</li>\n<li><p>각각의 경우를 점화식으로 나타내면 다음과 같다.</p>\n<ol>\n<li>dp[i - 1]</li>\n<li>wine[i] + dp[i - 2]</li>\n<li>wine[i] + wine[i - 1] + dp[i - 3]</li>\n</ol>\n</li>\n<li><p>여기서 dp[]는 포도주를 마신 최대값이 되고, wine[]은 포도주의 양이다.</p>\n</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">Max</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b, <span class=\"keyword\">int</span> c)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b &gt; c) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> a &gt; b ? a : b;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(a &gt; c) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = sc.nextInt();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] wine = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10001</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10001</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 배열 초기화</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      wine[i] = sc.nextInt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = wine[<span class=\"number\">1</span>];</span><br><span class=\"line\">    dp[<span class=\"number\">2</span>] = dp[<span class=\"number\">1</span>] + wine[<span class=\"number\">2</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 값 비교</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">3</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      dp[i] = Max(dp[i-<span class=\"number\">1</span>], wine[i] + dp[i-<span class=\"number\">2</span>], wine[i] + wine[i-<span class=\"number\">1</span>] + dp[i-<span class=\"number\">3</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(dp[N]);</span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yMTU2\" title=\"https://www.acmicpc.net/problem/2156\">2156<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li><p>경우는 총 세 가지</p>\n<ol>\n<li>현재 포도주는 마시지 않을 경우</li>\n<li>현재 포도주는 마시고 이전 포도주는 마시지 않은 경우</li>\n<li>현재 포도주와 이전의 포도주를 마신 경우</li>\n</ol>\n</li>\n<li><p>각각의 경우를 점화식으로 나타내면 다음과 같다.</p>\n<ol>\n<li>dp[i - 1]</li>\n<li>wine[i] + dp[i - 2]</li>\n<li>wine[i] + wine[i - 1] + dp[i - 3]</li>\n</ol>\n</li>\n<li><p>여기서 dp[]는 포도주를 마신 최대값이 되고, wine[]은 포도주의 양이다.</p>\n</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">Max</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b, <span class=\"keyword\">int</span> c)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(b &gt; c) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> a &gt; b ? a : b;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(a &gt; c) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = sc.nextInt();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] wine = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10001</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10001</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 배열 초기화</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      wine[i] = sc.nextInt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = wine[<span class=\"number\">1</span>];</span><br><span class=\"line\">    dp[<span class=\"number\">2</span>] = dp[<span class=\"number\">1</span>] + wine[<span class=\"number\">2</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 값 비교</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">3</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      dp[i] = Max(dp[i-<span class=\"number\">1</span>], wine[i] + dp[i-<span class=\"number\">2</span>], wine[i] + wine[i-<span class=\"number\">1</span>] + dp[i-<span class=\"number\">3</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(dp[N]);</span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/2579] 계단 오르기","_content":"> Baekjoon Online Judge - [2579](https://www.acmicpc.net/problem/2579)\n\n## Review\n* 포도주 시식이랑 비슷한 문제.\n* 포도주 시식이랑 다른 점은 무조건 마지막 칸을 밟아야 한다는 것이다.\n* 경우는 총 두 가지 - 마지막 칸을 밟았을 때\n  1. 이전 계단을 밟지 않은 경우\n  2. 이전 계단을 밟을 경우\n\n* 각각의 경우를 점화식으로 나타내면 다음과 같다.\n  1. dp[i] = dp[i-2] + stair[i]\n  2. dp[i] = dp[i-3] + stair[i] + stair[i-2]\n\n* 여기서 dp[]는 점수의 최대값이 되고, stair[]는 계단의 점수다.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n  \n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int N = sc.nextInt();\n    \n    int[] stair = new int[N + 1];\n    int[] dp = new int[N + 1];\n    \n    for(int i = 1; i <= N; i++) {\n      stair[i] = sc.nextInt();\n    }\n    \n    // 초기화\n    dp[0] = 0;\n    dp[1] = stair[1];\n    dp[2] = dp[1] + stair[2];\n    \n    // 최대값 찾기\n    for(int i = 3; i <= N; i++) {\n      dp[i] = Math.max(dp[i-2] + stair[i], dp[i-3] + stair[i-1] + stair[i]);\n    }\n    \n    System.out.println(dp[N]);\n    sc.close();\n    \n  }\n  \n}\n```","source":"_posts/2018-10-25-bj-2579.md","raw":"---\ntitle: \"[백준/2579] 계단 오르기\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [2579](https://www.acmicpc.net/problem/2579)\n\n## Review\n* 포도주 시식이랑 비슷한 문제.\n* 포도주 시식이랑 다른 점은 무조건 마지막 칸을 밟아야 한다는 것이다.\n* 경우는 총 두 가지 - 마지막 칸을 밟았을 때\n  1. 이전 계단을 밟지 않은 경우\n  2. 이전 계단을 밟을 경우\n\n* 각각의 경우를 점화식으로 나타내면 다음과 같다.\n  1. dp[i] = dp[i-2] + stair[i]\n  2. dp[i] = dp[i-3] + stair[i] + stair[i-2]\n\n* 여기서 dp[]는 점수의 최대값이 되고, stair[]는 계단의 점수다.\n\n## Code (JAVA)\n```java\nimport java.util.*;\n\npublic class Main {\n  \n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int N = sc.nextInt();\n    \n    int[] stair = new int[N + 1];\n    int[] dp = new int[N + 1];\n    \n    for(int i = 1; i <= N; i++) {\n      stair[i] = sc.nextInt();\n    }\n    \n    // 초기화\n    dp[0] = 0;\n    dp[1] = stair[1];\n    dp[2] = dp[1] + stair[2];\n    \n    // 최대값 찾기\n    for(int i = 3; i <= N; i++) {\n      dp[i] = Math.max(dp[i-2] + stair[i], dp[i-3] + stair[i-1] + stair[i]);\n    }\n    \n    System.out.println(dp[N]);\n    sc.close();\n    \n  }\n  \n}\n```","slug":"bj-2579","published":1,"date":"2018-10-24T15:00:00.000Z","updated":"2020-05-05T08:00:03.857Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afh0003guv595eae4syb","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNTc5\" title=\"https://www.acmicpc.net/problem/2579\">2579<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li><p>포도주 시식이랑 비슷한 문제.</p>\n</li>\n<li><p>포도주 시식이랑 다른 점은 무조건 마지막 칸을 밟아야 한다는 것이다.</p>\n</li>\n<li><p>경우는 총 두 가지 - 마지막 칸을 밟았을 때</p>\n<ol>\n<li>이전 계단을 밟지 않은 경우</li>\n<li>이전 계단을 밟을 경우</li>\n</ol>\n</li>\n<li><p>각각의 경우를 점화식으로 나타내면 다음과 같다.</p>\n<ol>\n<li>dp[i] = dp[i-2] + stair[i]</li>\n<li>dp[i] = dp[i-3] + stair[i] + stair[i-2]</li>\n</ol>\n</li>\n<li><p>여기서 dp[]는 점수의 최대값이 되고, stair[]는 계단의 점수다.</p>\n</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = sc.nextInt();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] stair = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      stair[i] = sc.nextInt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 초기화</span></span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = stair[<span class=\"number\">1</span>];</span><br><span class=\"line\">    dp[<span class=\"number\">2</span>] = dp[<span class=\"number\">1</span>] + stair[<span class=\"number\">2</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 최대값 찾기</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">3</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      dp[i] = Math.max(dp[i-<span class=\"number\">2</span>] + stair[i], dp[i-<span class=\"number\">3</span>] + stair[i-<span class=\"number\">1</span>] + stair[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(dp[N]);</span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNTc5\" title=\"https://www.acmicpc.net/problem/2579\">2579<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li><p>포도주 시식이랑 비슷한 문제.</p>\n</li>\n<li><p>포도주 시식이랑 다른 점은 무조건 마지막 칸을 밟아야 한다는 것이다.</p>\n</li>\n<li><p>경우는 총 두 가지 - 마지막 칸을 밟았을 때</p>\n<ol>\n<li>이전 계단을 밟지 않은 경우</li>\n<li>이전 계단을 밟을 경우</li>\n</ol>\n</li>\n<li><p>각각의 경우를 점화식으로 나타내면 다음과 같다.</p>\n<ol>\n<li>dp[i] = dp[i-2] + stair[i]</li>\n<li>dp[i] = dp[i-3] + stair[i] + stair[i-2]</li>\n</ol>\n</li>\n<li><p>여기서 dp[]는 점수의 최대값이 되고, stair[]는 계단의 점수다.</p>\n</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = sc.nextInt();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] stair = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      stair[i] = sc.nextInt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 초기화</span></span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    dp[<span class=\"number\">1</span>] = stair[<span class=\"number\">1</span>];</span><br><span class=\"line\">    dp[<span class=\"number\">2</span>] = dp[<span class=\"number\">1</span>] + stair[<span class=\"number\">2</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 최대값 찾기</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">3</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      dp[i] = Math.max(dp[i-<span class=\"number\">2</span>] + stair[i], dp[i-<span class=\"number\">3</span>] + stair[i-<span class=\"number\">1</span>] + stair[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(dp[N]);</span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/9465] 스티커","_content":"> Baekjoon Online Judge - [9465](https://www.acmicpc.net/problem/9465)\n\n## Review\n* 포도주 시식, 계단 오르기랑 비슷한 문제이다. 다른 점은 두 줄이라는 점.\n* 따라서 첫 번째 줄은 sticker[0][i], 두 번째 줄은 sticker[1][i] 이런 식으로 표현을 할 수 있다.\n* 규칙은 기준점에서 대각선에 있는 스티커의 점수만 더할 수 있다.\n* 하지만 문제는 두 칸, 세 칸 뒤의 대각선으로도 이동을 할 수 있다는 건데, 결론적으로는 두 칸까지의 이동만 비교하면 된다. 왜냐면 세 칸 뒤의 대각선은 이전 점수를 통해서 오는 게 더 높은 점수를 받을 수 있기 때문이다.\n\n* 따라서 경우는 총 두 가지\n  1. 기준점에서 한 칸 뒤의 대각선으로 이동하는 경우\n  2. 기준점에서 두 칸 뒤의 대각선으로 이동하는 경우\n\n* 각각의 경우를 점화식으로 나타내면 다음과 같다.\n  1. dp[0][i] = Max(dp[1][i-1], dp[1][i-2]) + sticker[0][i]\n  2. dp[1][i] = Max(dp[0][i-1], dp[0][i-2]) + sticker[1][i]\n\n* 첫 번째 줄에서 시작한 경우, 두 번째 줄에서 시작한 경우를 각각 구한 다음, 둘 중 큰 수를 출력하면 된다.\n* 여기서 sticker 배열은 스티커의 점수, dp 배열은 점수의 최대값을 저장한 배열이다.\n* 문제 푸는 것보다 입력 받는 게 더 까다로웠다.\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int T = Integer.parseInt(bf.readLine());\n    \n    while(T-- > 0) {\n      int n = Integer.parseInt(bf.readLine());\n      \n      // 배열 선언\n      int[][] dp = new int[2][100001];\n      int[][] sticker = new int[2][100001];\n      String[] str;\n      \n      // 스티커에 값 집어넣기\n      for(int i = 0; i <= 1; i++) {\n        str = bf.readLine().split(\" \");\n        for(int j = 1; j <= n; j++) {\n          sticker[i][j] = Integer.parseInt(str[j-1]);\n        }\n      }\n      \n      // 첫 번째 값 넣어주기\n      // (이동이 없으니 sticker의 첫 번째 값을 dp 배열에 넣어줌)\n      dp[0][1] = sticker[0][1];\n      dp[1][1] = sticker[1][1];\n      \n      // 값 비교해서 각 배열에 넣어주기\n      for(int i = 2; i <= n; i++) {\n        dp[0][i] = Math.max(dp[1][i-1], dp[1][i-2]) + sticker[0][i];\n        dp[1][i] = Math.max(dp[0][i-1], dp[0][i-2]) + sticker[1][i];\n      }\n      \n      System.out.println(Math.max(dp[0][n], dp[1][n]));  \n    }\n    \n  }\n  \n}\n```","source":"_posts/2018-10-26-bj-9465.md","raw":"---\ntitle: \"[백준/9465] 스티커\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [9465](https://www.acmicpc.net/problem/9465)\n\n## Review\n* 포도주 시식, 계단 오르기랑 비슷한 문제이다. 다른 점은 두 줄이라는 점.\n* 따라서 첫 번째 줄은 sticker[0][i], 두 번째 줄은 sticker[1][i] 이런 식으로 표현을 할 수 있다.\n* 규칙은 기준점에서 대각선에 있는 스티커의 점수만 더할 수 있다.\n* 하지만 문제는 두 칸, 세 칸 뒤의 대각선으로도 이동을 할 수 있다는 건데, 결론적으로는 두 칸까지의 이동만 비교하면 된다. 왜냐면 세 칸 뒤의 대각선은 이전 점수를 통해서 오는 게 더 높은 점수를 받을 수 있기 때문이다.\n\n* 따라서 경우는 총 두 가지\n  1. 기준점에서 한 칸 뒤의 대각선으로 이동하는 경우\n  2. 기준점에서 두 칸 뒤의 대각선으로 이동하는 경우\n\n* 각각의 경우를 점화식으로 나타내면 다음과 같다.\n  1. dp[0][i] = Max(dp[1][i-1], dp[1][i-2]) + sticker[0][i]\n  2. dp[1][i] = Max(dp[0][i-1], dp[0][i-2]) + sticker[1][i]\n\n* 첫 번째 줄에서 시작한 경우, 두 번째 줄에서 시작한 경우를 각각 구한 다음, 둘 중 큰 수를 출력하면 된다.\n* 여기서 sticker 배열은 스티커의 점수, dp 배열은 점수의 최대값을 저장한 배열이다.\n* 문제 푸는 것보다 입력 받는 게 더 까다로웠다.\n\n## Code (JAVA)\n```java\nimport java.io.*;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int T = Integer.parseInt(bf.readLine());\n    \n    while(T-- > 0) {\n      int n = Integer.parseInt(bf.readLine());\n      \n      // 배열 선언\n      int[][] dp = new int[2][100001];\n      int[][] sticker = new int[2][100001];\n      String[] str;\n      \n      // 스티커에 값 집어넣기\n      for(int i = 0; i <= 1; i++) {\n        str = bf.readLine().split(\" \");\n        for(int j = 1; j <= n; j++) {\n          sticker[i][j] = Integer.parseInt(str[j-1]);\n        }\n      }\n      \n      // 첫 번째 값 넣어주기\n      // (이동이 없으니 sticker의 첫 번째 값을 dp 배열에 넣어줌)\n      dp[0][1] = sticker[0][1];\n      dp[1][1] = sticker[1][1];\n      \n      // 값 비교해서 각 배열에 넣어주기\n      for(int i = 2; i <= n; i++) {\n        dp[0][i] = Math.max(dp[1][i-1], dp[1][i-2]) + sticker[0][i];\n        dp[1][i] = Math.max(dp[0][i-1], dp[0][i-2]) + sticker[1][i];\n      }\n      \n      System.out.println(Math.max(dp[0][n], dp[1][n]));  \n    }\n    \n  }\n  \n}\n```","slug":"bj-9465","published":1,"date":"2018-10-25T15:00:00.000Z","updated":"2020-05-05T08:00:03.857Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afh0003kuv590n4f00s0","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS85NDY1\" title=\"https://www.acmicpc.net/problem/9465\">9465<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li><p>포도주 시식, 계단 오르기랑 비슷한 문제이다. 다른 점은 두 줄이라는 점.</p>\n</li>\n<li><p>따라서 첫 번째 줄은 sticker[0][i], 두 번째 줄은 sticker[1][i] 이런 식으로 표현을 할 수 있다.</p>\n</li>\n<li><p>규칙은 기준점에서 대각선에 있는 스티커의 점수만 더할 수 있다.</p>\n</li>\n<li><p>하지만 문제는 두 칸, 세 칸 뒤의 대각선으로도 이동을 할 수 있다는 건데, 결론적으로는 두 칸까지의 이동만 비교하면 된다. 왜냐면 세 칸 뒤의 대각선은 이전 점수를 통해서 오는 게 더 높은 점수를 받을 수 있기 때문이다.</p>\n</li>\n<li><p>따라서 경우는 총 두 가지</p>\n<ol>\n<li>기준점에서 한 칸 뒤의 대각선으로 이동하는 경우</li>\n<li>기준점에서 두 칸 뒤의 대각선으로 이동하는 경우</li>\n</ol>\n</li>\n<li><p>각각의 경우를 점화식으로 나타내면 다음과 같다.</p>\n<ol>\n<li>dp[0][i] = Max(dp[1][i-1], dp[1][i-2]) + sticker[0][i]</li>\n<li>dp[1][i] = Max(dp[0][i-1], dp[0][i-2]) + sticker[1][i]</li>\n</ol>\n</li>\n<li><p>첫 번째 줄에서 시작한 경우, 두 번째 줄에서 시작한 경우를 각각 구한 다음, 둘 중 큰 수를 출력하면 된다.</p>\n</li>\n<li><p>여기서 sticker 배열은 스티커의 점수, dp 배열은 점수의 최대값을 저장한 배열이다.</p>\n</li>\n<li><p>문제 푸는 것보다 입력 받는 게 더 까다로웠다.</p>\n</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(T-- &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 배열 선언</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span>[][] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">100001</span>];</span><br><span class=\"line\">      <span class=\"keyword\">int</span>[][] sticker = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">100001</span>];</span><br><span class=\"line\">      String[] str;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 스티커에 값 집어넣기</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        str = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">          sticker[i][j] = Integer.parseInt(str[j-<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 첫 번째 값 넣어주기</span></span><br><span class=\"line\">      <span class=\"comment\">// (이동이 없으니 sticker의 첫 번째 값을 dp 배열에 넣어줌)</span></span><br><span class=\"line\">      dp[<span class=\"number\">0</span>][<span class=\"number\">1</span>] = sticker[<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">      dp[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = sticker[<span class=\"number\">1</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 값 비교해서 각 배열에 넣어주기</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>][i] = Math.max(dp[<span class=\"number\">1</span>][i-<span class=\"number\">1</span>], dp[<span class=\"number\">1</span>][i-<span class=\"number\">2</span>]) + sticker[<span class=\"number\">0</span>][i];</span><br><span class=\"line\">        dp[<span class=\"number\">1</span>][i] = Math.max(dp[<span class=\"number\">0</span>][i-<span class=\"number\">1</span>], dp[<span class=\"number\">0</span>][i-<span class=\"number\">2</span>]) + sticker[<span class=\"number\">1</span>][i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      System.out.println(Math.max(dp[<span class=\"number\">0</span>][n], dp[<span class=\"number\">1</span>][n]));  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS85NDY1\" title=\"https://www.acmicpc.net/problem/9465\">9465<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li><p>포도주 시식, 계단 오르기랑 비슷한 문제이다. 다른 점은 두 줄이라는 점.</p>\n</li>\n<li><p>따라서 첫 번째 줄은 sticker[0][i], 두 번째 줄은 sticker[1][i] 이런 식으로 표현을 할 수 있다.</p>\n</li>\n<li><p>규칙은 기준점에서 대각선에 있는 스티커의 점수만 더할 수 있다.</p>\n</li>\n<li><p>하지만 문제는 두 칸, 세 칸 뒤의 대각선으로도 이동을 할 수 있다는 건데, 결론적으로는 두 칸까지의 이동만 비교하면 된다. 왜냐면 세 칸 뒤의 대각선은 이전 점수를 통해서 오는 게 더 높은 점수를 받을 수 있기 때문이다.</p>\n</li>\n<li><p>따라서 경우는 총 두 가지</p>\n<ol>\n<li>기준점에서 한 칸 뒤의 대각선으로 이동하는 경우</li>\n<li>기준점에서 두 칸 뒤의 대각선으로 이동하는 경우</li>\n</ol>\n</li>\n<li><p>각각의 경우를 점화식으로 나타내면 다음과 같다.</p>\n<ol>\n<li>dp[0][i] = Max(dp[1][i-1], dp[1][i-2]) + sticker[0][i]</li>\n<li>dp[1][i] = Max(dp[0][i-1], dp[0][i-2]) + sticker[1][i]</li>\n</ol>\n</li>\n<li><p>첫 번째 줄에서 시작한 경우, 두 번째 줄에서 시작한 경우를 각각 구한 다음, 둘 중 큰 수를 출력하면 된다.</p>\n</li>\n<li><p>여기서 sticker 배열은 스티커의 점수, dp 배열은 점수의 최대값을 저장한 배열이다.</p>\n</li>\n<li><p>문제 푸는 것보다 입력 받는 게 더 까다로웠다.</p>\n</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(T-- &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> n = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 배열 선언</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span>[][] dp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">100001</span>];</span><br><span class=\"line\">      <span class=\"keyword\">int</span>[][] sticker = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">100001</span>];</span><br><span class=\"line\">      String[] str;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 스티커에 값 집어넣기</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        str = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">          sticker[i][j] = Integer.parseInt(str[j-<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 첫 번째 값 넣어주기</span></span><br><span class=\"line\">      <span class=\"comment\">// (이동이 없으니 sticker의 첫 번째 값을 dp 배열에 넣어줌)</span></span><br><span class=\"line\">      dp[<span class=\"number\">0</span>][<span class=\"number\">1</span>] = sticker[<span class=\"number\">0</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">      dp[<span class=\"number\">1</span>][<span class=\"number\">1</span>] = sticker[<span class=\"number\">1</span>][<span class=\"number\">1</span>];</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// 값 비교해서 각 배열에 넣어주기</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        dp[<span class=\"number\">0</span>][i] = Math.max(dp[<span class=\"number\">1</span>][i-<span class=\"number\">1</span>], dp[<span class=\"number\">1</span>][i-<span class=\"number\">2</span>]) + sticker[<span class=\"number\">0</span>][i];</span><br><span class=\"line\">        dp[<span class=\"number\">1</span>][i] = Math.max(dp[<span class=\"number\">0</span>][i-<span class=\"number\">1</span>], dp[<span class=\"number\">0</span>][i-<span class=\"number\">2</span>]) + sticker[<span class=\"number\">1</span>][i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      System.out.println(Math.max(dp[<span class=\"number\">0</span>][n], dp[<span class=\"number\">1</span>][n]));  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/11054] 가장 긴 바이토닉 부분 수열","_content":"\n> Baekjoon Online Judge - [11054](https://www.acmicpc.net/problem/11054)\n\n## Review\n\n이 문제는 가장 긴 증가하는 부분 수열(LIS)을 두 번 활용하면 되는 문제이다.\n\n![result](/images/bj-11054/image-1.png)\n이렇게 오른쪽, 왼쪽 방향으로 진행하는 LIS의 길이를 구해 각 배열에 저장한 다음, 그 두 배열의 값이 최대가 되는 지점이 바로 정답이 된다.\n\n![result](/images/bj-11054/image-2.png)\n오른쪽으로 진행하는 LIS의 값은 DP 배열에 저장하고, 왼쪽으로 진행하는 LIS의 값은 R 배열에 저장한다. 따라서 아까 말했듯이, **DP[i]+R[i]로 나온 값들 중의 최대값이 바로 정답**이 되는 것이다.\n\n그런데 왜 정답은 7인데 더한 값은 8일까? 바로 가운데 값이 중복되기 때문에 그렇다.\n\n- DP배열의 LIS: 1, 2, 3, 4, 5\n- R배열의 LIS: 1, 2, 5\n- 총 길이: 1, 2, 3, 4, **5, 5**, 2, 1\n\n이렇게 5가 중복이 되기 때문에 1을 빼줘야 정답이 된다.\n\n## Code (JAVA)\n\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(bf.readLine());\n    int[] A = new int[N + 1];\n    int[] DP = new int[N + 1];\n    int[] R = new int[N + 1];\n    int ans1 = 1;\n    int ans2 = 1;\n    int max = 0;\n    StringTokenizer st = new StringTokenizer(bf.readLine());\n\n    for(int i = 1; i <= N; i++) {\n      A[i] = Integer.parseInt(st.nextToken());\n    }\n\n    // 오른쪽으로 진행\n    for(int i = 1; i <= N; i++) {\n      DP[i] = 1;\n      for(int j = 1; j <= i; j++) {\n        if(A[i] > A[j]) {\n          DP[i] = Math.max(DP[i], DP[j] + 1);\n        }\n      }\n      ans1 = Math.max(ans1, DP[i]);\n    }\n\n    // 왼쪽으로 진행\n    for(int i = N; i >= 1; i--) {\n      R[i] = 1;\n      for(int j = N; j >= i; j--) {\n        if(A[i] > A[j]) {\n          R[i] = Math.max(R[i], R[j] + 1);\n        }\n      }\n      ans2 = Math.max(ans2, R[i]);\n    }\n\n    // 최대값 구하기\n    for(int i = 1; i <= N; i++) {\n      max = Math.max(DP[i] + R[i], max);\n    }\n\n    // 1을 뺀 결과값\n    System.out.println(max-1);\n\n  }\n\n}\n```\n","source":"_posts/2018-10-29-bj-11054.md","raw":"---\ntitle: \"[백준/11054] 가장 긴 바이토닉 부분 수열\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [11054](https://www.acmicpc.net/problem/11054)\n\n## Review\n\n이 문제는 가장 긴 증가하는 부분 수열(LIS)을 두 번 활용하면 되는 문제이다.\n\n![result](/images/bj-11054/image-1.png)\n이렇게 오른쪽, 왼쪽 방향으로 진행하는 LIS의 길이를 구해 각 배열에 저장한 다음, 그 두 배열의 값이 최대가 되는 지점이 바로 정답이 된다.\n\n![result](/images/bj-11054/image-2.png)\n오른쪽으로 진행하는 LIS의 값은 DP 배열에 저장하고, 왼쪽으로 진행하는 LIS의 값은 R 배열에 저장한다. 따라서 아까 말했듯이, **DP[i]+R[i]로 나온 값들 중의 최대값이 바로 정답**이 되는 것이다.\n\n그런데 왜 정답은 7인데 더한 값은 8일까? 바로 가운데 값이 중복되기 때문에 그렇다.\n\n- DP배열의 LIS: 1, 2, 3, 4, 5\n- R배열의 LIS: 1, 2, 5\n- 총 길이: 1, 2, 3, 4, **5, 5**, 2, 1\n\n이렇게 5가 중복이 되기 때문에 1을 빼줘야 정답이 된다.\n\n## Code (JAVA)\n\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(bf.readLine());\n    int[] A = new int[N + 1];\n    int[] DP = new int[N + 1];\n    int[] R = new int[N + 1];\n    int ans1 = 1;\n    int ans2 = 1;\n    int max = 0;\n    StringTokenizer st = new StringTokenizer(bf.readLine());\n\n    for(int i = 1; i <= N; i++) {\n      A[i] = Integer.parseInt(st.nextToken());\n    }\n\n    // 오른쪽으로 진행\n    for(int i = 1; i <= N; i++) {\n      DP[i] = 1;\n      for(int j = 1; j <= i; j++) {\n        if(A[i] > A[j]) {\n          DP[i] = Math.max(DP[i], DP[j] + 1);\n        }\n      }\n      ans1 = Math.max(ans1, DP[i]);\n    }\n\n    // 왼쪽으로 진행\n    for(int i = N; i >= 1; i--) {\n      R[i] = 1;\n      for(int j = N; j >= i; j--) {\n        if(A[i] > A[j]) {\n          R[i] = Math.max(R[i], R[j] + 1);\n        }\n      }\n      ans2 = Math.max(ans2, R[i]);\n    }\n\n    // 최대값 구하기\n    for(int i = 1; i <= N; i++) {\n      max = Math.max(DP[i] + R[i], max);\n    }\n\n    // 1을 뺀 결과값\n    System.out.println(max-1);\n\n  }\n\n}\n```\n","slug":"bj-11054","published":1,"date":"2018-10-28T15:00:00.000Z","updated":"2020-05-05T08:00:03.857Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afh1003ouv59bn3sghss","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTA1NA==\" title=\"https://www.acmicpc.net/problem/11054\">11054<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><p>이 문제는 가장 긴 증가하는 부분 수열(LIS)을 두 번 활용하면 되는 문제이다.</p>\n<p><img src=\"/images/bj-11054/image-1.png\" alt=\"result\"><br>이렇게 오른쪽, 왼쪽 방향으로 진행하는 LIS의 길이를 구해 각 배열에 저장한 다음, 그 두 배열의 값이 최대가 되는 지점이 바로 정답이 된다.</p>\n<p><img src=\"/images/bj-11054/image-2.png\" alt=\"result\"><br>오른쪽으로 진행하는 LIS의 값은 DP 배열에 저장하고, 왼쪽으로 진행하는 LIS의 값은 R 배열에 저장한다. 따라서 아까 말했듯이, <strong>DP[i]+R[i]로 나온 값들 중의 최대값이 바로 정답</strong>이 되는 것이다.</p>\n<p>그런데 왜 정답은 7인데 더한 값은 8일까? 바로 가운데 값이 중복되기 때문에 그렇다.</p>\n<ul>\n<li>DP배열의 LIS: 1, 2, 3, 4, 5</li>\n<li>R배열의 LIS: 1, 2, 5</li>\n<li>총 길이: 1, 2, 3, 4, <strong>5, 5</strong>, 2, 1</li>\n</ul>\n<p>이렇게 5가 중복이 되기 때문에 1을 빼줘야 정답이 된다.</p>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] A = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] DP = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] R = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    StringTokenizer st = <span class=\"keyword\">new</span> StringTokenizer(bf.readLine());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      A[i] = Integer.parseInt(st.nextToken());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 오른쪽으로 진행</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      DP[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= i; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(A[i] &gt; A[j]) &#123;</span><br><span class=\"line\">          DP[i] = Math.max(DP[i], DP[j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      ans1 = Math.max(ans1, DP[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 왼쪽으로 진행</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = N; i &gt;= <span class=\"number\">1</span>; i--) &#123;</span><br><span class=\"line\">      R[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = N; j &gt;= i; j--) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(A[i] &gt; A[j]) &#123;</span><br><span class=\"line\">          R[i] = Math.max(R[i], R[j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      ans2 = Math.max(ans2, R[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 최대값 구하기</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      max = Math.max(DP[i] + R[i], max);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 1을 뺀 결과값</span></span><br><span class=\"line\">    System.out.println(max-<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTA1NA==\" title=\"https://www.acmicpc.net/problem/11054\">11054<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><p>이 문제는 가장 긴 증가하는 부분 수열(LIS)을 두 번 활용하면 되는 문제이다.</p>\n<p><img src=\"/images/bj-11054/image-1.png\" alt=\"result\"><br>이렇게 오른쪽, 왼쪽 방향으로 진행하는 LIS의 길이를 구해 각 배열에 저장한 다음, 그 두 배열의 값이 최대가 되는 지점이 바로 정답이 된다.</p>\n<p><img src=\"/images/bj-11054/image-2.png\" alt=\"result\"><br>오른쪽으로 진행하는 LIS의 값은 DP 배열에 저장하고, 왼쪽으로 진행하는 LIS의 값은 R 배열에 저장한다. 따라서 아까 말했듯이, <strong>DP[i]+R[i]로 나온 값들 중의 최대값이 바로 정답</strong>이 되는 것이다.</p>\n<p>그런데 왜 정답은 7인데 더한 값은 8일까? 바로 가운데 값이 중복되기 때문에 그렇다.</p>\n<ul>\n<li>DP배열의 LIS: 1, 2, 3, 4, 5</li>\n<li>R배열의 LIS: 1, 2, 5</li>\n<li>총 길이: 1, 2, 3, 4, <strong>5, 5</strong>, 2, 1</li>\n</ul>\n<p>이렇게 5가 중복이 되기 때문에 1을 빼줘야 정답이 된다.</p>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] A = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] DP = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] R = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans1 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    StringTokenizer st = <span class=\"keyword\">new</span> StringTokenizer(bf.readLine());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      A[i] = Integer.parseInt(st.nextToken());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 오른쪽으로 진행</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      DP[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= i; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(A[i] &gt; A[j]) &#123;</span><br><span class=\"line\">          DP[i] = Math.max(DP[i], DP[j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      ans1 = Math.max(ans1, DP[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 왼쪽으로 진행</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = N; i &gt;= <span class=\"number\">1</span>; i--) &#123;</span><br><span class=\"line\">      R[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = N; j &gt;= i; j--) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(A[i] &gt; A[j]) &#123;</span><br><span class=\"line\">          R[i] = Math.max(R[i], R[j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      ans2 = Math.max(ans2, R[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 최대값 구하기</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      max = Math.max(DP[i] + R[i], max);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 1을 뺀 결과값</span></span><br><span class=\"line\">    System.out.println(max-<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/11053] 가장 긴 증가하는 부분 수열","_content":"> Baekjoon Online Judge - [11053](https://www.acmicpc.net/problem/11053)\n\n## Review\n* [나무위키 최장 증가 부분 수열](https://namu.wiki/w/%EC%B5%9C%EC%9E%A5%20%EC%A6%9D%EA%B0%80%20%EB%B6%80%EB%B6%84%20%EC%88%98%EC%97%B4)를 참고해서 풀었다.\n\n## Code (JAVA)\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(bf.readLine());\n    int[] A = new int[N + 1];\n    int[] DP = new int[N + 1];\n    int ans = 1;\n    StringTokenizer st = new StringTokenizer(bf.readLine());\n    \n    for(int i = 1; i <= N; i++) {\n      A[i] = Integer.parseInt(st.nextToken());\n    }\n    \n    for(int i = 1; i <= N; i++ ) {\n      DP[i] = 1;\n      for(int j = 1; j <= i; j++) {\n        if(A[i] > A[j]) {\n          DP[i] = Math.max(DP[i], DP[j] + 1);\n        }\n      }\n      ans = Math.max(ans, DP[i]);\n    }\n    \n    System.out.println(ans);\n    \n  }\n  \n}\n```","source":"_posts/2018-10-28-bj-11053.md","raw":"---\ntitle: \"[백준/11053] 가장 긴 증가하는 부분 수열\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [11053](https://www.acmicpc.net/problem/11053)\n\n## Review\n* [나무위키 최장 증가 부분 수열](https://namu.wiki/w/%EC%B5%9C%EC%9E%A5%20%EC%A6%9D%EA%B0%80%20%EB%B6%80%EB%B6%84%20%EC%88%98%EC%97%B4)를 참고해서 풀었다.\n\n## Code (JAVA)\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(bf.readLine());\n    int[] A = new int[N + 1];\n    int[] DP = new int[N + 1];\n    int ans = 1;\n    StringTokenizer st = new StringTokenizer(bf.readLine());\n    \n    for(int i = 1; i <= N; i++) {\n      A[i] = Integer.parseInt(st.nextToken());\n    }\n    \n    for(int i = 1; i <= N; i++ ) {\n      DP[i] = 1;\n      for(int j = 1; j <= i; j++) {\n        if(A[i] > A[j]) {\n          DP[i] = Math.max(DP[i], DP[j] + 1);\n        }\n      }\n      ans = Math.max(ans, DP[i]);\n    }\n    \n    System.out.println(ans);\n    \n  }\n  \n}\n```","slug":"bj-11053","published":1,"date":"2018-10-27T15:00:00.000Z","updated":"2020-05-05T08:00:03.857Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afh2003suv593j6aa2lj","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTA1Mw==\" title=\"https://www.acmicpc.net/problem/11053\">11053<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uYW11Lndpa2kvdy8lRUMlQjUlOUMlRUMlOUUlQTUlMjAlRUMlQTYlOUQlRUElQjAlODAlMjAlRUIlQjYlODAlRUIlQjYlODQlMjAlRUMlODglOTglRUMlOTclQjQ=\" title=\"https://namu.wiki/w/%EC%B5%9C%EC%9E%A5%20%EC%A6%9D%EA%B0%80%20%EB%B6%80%EB%B6%84%20%EC%88%98%EC%97%B4\">나무위키 최장 증가 부분 수열<i class=\"fa fa-external-link\"></i></span>를 참고해서 풀었다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] A = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] DP = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">1</span>;</span><br><span class=\"line\">    StringTokenizer st = <span class=\"keyword\">new</span> StringTokenizer(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      A[i] = Integer.parseInt(st.nextToken());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++ ) &#123;</span><br><span class=\"line\">      DP[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= i; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(A[i] &gt; A[j]) &#123;</span><br><span class=\"line\">          DP[i] = Math.max(DP[i], DP[j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      ans = Math.max(ans, DP[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(ans);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTA1Mw==\" title=\"https://www.acmicpc.net/problem/11053\">11053<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uYW11Lndpa2kvdy8lRUMlQjUlOUMlRUMlOUUlQTUlMjAlRUMlQTYlOUQlRUElQjAlODAlMjAlRUIlQjYlODAlRUIlQjYlODQlMjAlRUMlODglOTglRUMlOTclQjQ=\" title=\"https://namu.wiki/w/%EC%B5%9C%EC%9E%A5%20%EC%A6%9D%EA%B0%80%20%EB%B6%80%EB%B6%84%20%EC%88%98%EC%97%B4\">나무위키 최장 증가 부분 수열<i class=\"fa fa-external-link\"></i></span>를 참고해서 풀었다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] A = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] DP = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">1</span>;</span><br><span class=\"line\">    StringTokenizer st = <span class=\"keyword\">new</span> StringTokenizer(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      A[i] = Integer.parseInt(st.nextToken());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++ ) &#123;</span><br><span class=\"line\">      DP[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= i; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(A[i] &gt; A[j]) &#123;</span><br><span class=\"line\">          DP[i] = Math.max(DP[i], DP[j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      ans = Math.max(ans, DP[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(ans);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/11722] 가장 긴 감소하는 부분 수열","_content":"> Baekjoon Online Judge - [11722](https://www.acmicpc.net/problem/11722)\n\n## Review\n* 백준 11053 문제를 풀었다면, 부등호 하나만 고쳐서 풀 수 있는 문제이다.\n* 그래서 그런지 정답률이 꽤 높다.\n\n## Code (JAVA)\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(bf.readLine());\n    int[] A = new int[N + 1];\n    int[] DP = new int[N + 1];\n    int ans = 1;\n    StringTokenizer st = new StringTokenizer(bf.readLine());\n    \n    for(int i = 1; i <= N; i++) {\n      A[i] = Integer.parseInt(st.nextToken());\n    }\n    \n    for(int i = 1; i <= N; i++ ) {\n      DP[i] = 1;\n      for(int j = 1; j <= i; j++) {\n        if(A[i] < A[j]) {\n          DP[i] = Math.max(DP[i], DP[j] + 1);\n        }\n      }\n      ans = Math.max(ans, DP[i]);\n    }\n    \n    System.out.println(ans);\n    \n  }\n  \n}\n```","source":"_posts/2018-10-29-bj-11722.md","raw":"---\ntitle: \"[백준/11722] 가장 긴 감소하는 부분 수열\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [11722](https://www.acmicpc.net/problem/11722)\n\n## Review\n* 백준 11053 문제를 풀었다면, 부등호 하나만 고쳐서 풀 수 있는 문제이다.\n* 그래서 그런지 정답률이 꽤 높다.\n\n## Code (JAVA)\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(bf.readLine());\n    int[] A = new int[N + 1];\n    int[] DP = new int[N + 1];\n    int ans = 1;\n    StringTokenizer st = new StringTokenizer(bf.readLine());\n    \n    for(int i = 1; i <= N; i++) {\n      A[i] = Integer.parseInt(st.nextToken());\n    }\n    \n    for(int i = 1; i <= N; i++ ) {\n      DP[i] = 1;\n      for(int j = 1; j <= i; j++) {\n        if(A[i] < A[j]) {\n          DP[i] = Math.max(DP[i], DP[j] + 1);\n        }\n      }\n      ans = Math.max(ans, DP[i]);\n    }\n    \n    System.out.println(ans);\n    \n  }\n  \n}\n```","slug":"bj-11722","published":1,"date":"2018-10-28T15:00:00.000Z","updated":"2020-05-05T08:00:03.857Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afh4003vuv59d16db7pc","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTcyMg==\" title=\"https://www.acmicpc.net/problem/11722\">11722<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>백준 11053 문제를 풀었다면, 부등호 하나만 고쳐서 풀 수 있는 문제이다.</li>\n<li>그래서 그런지 정답률이 꽤 높다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] A = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] DP = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">1</span>;</span><br><span class=\"line\">    StringTokenizer st = <span class=\"keyword\">new</span> StringTokenizer(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      A[i] = Integer.parseInt(st.nextToken());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++ ) &#123;</span><br><span class=\"line\">      DP[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= i; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(A[i] &lt; A[j]) &#123;</span><br><span class=\"line\">          DP[i] = Math.max(DP[i], DP[j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      ans = Math.max(ans, DP[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(ans);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTcyMg==\" title=\"https://www.acmicpc.net/problem/11722\">11722<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>백준 11053 문제를 풀었다면, 부등호 하나만 고쳐서 풀 수 있는 문제이다.</li>\n<li>그래서 그런지 정답률이 꽤 높다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] A = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] DP = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">1</span>;</span><br><span class=\"line\">    StringTokenizer st = <span class=\"keyword\">new</span> StringTokenizer(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      A[i] = Integer.parseInt(st.nextToken());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++ ) &#123;</span><br><span class=\"line\">      DP[i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= i; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(A[i] &lt; A[j]) &#123;</span><br><span class=\"line\">          DP[i] = Math.max(DP[i], DP[j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      ans = Math.max(ans, DP[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(ans);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/11055] 가장 큰 증가 부분 수열","_content":"> Baekjoon Online Judge - [11055](https://www.acmicpc.net/problem/11055)\n\n## Review\n* 백준 11053 문제랑 비슷...\n* 하지만 DP[i] < DP[j] + A[i]를 만족하는 경우에만 최대값이 될 수 있다.\n* 이 부분을 몰라서 네 번이나 틀림.\n\n## Code (JAVA)\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(bf.readLine());\n    int[] A = new int[N + 1];\n    int[] DP = new int[N + 1];\n    int ans = 0;\n    StringTokenizer st = new StringTokenizer(bf.readLine());\n    \n    for(int i = 1; i <= N; i++) {\n      A[i] = Integer.parseInt(st.nextToken());\n    }\n    \n    for(int i = 1; i <= N; i++ ) {\n      DP[i] = A[i];\n      for(int j = 1; j < i; j++) {\n        if(A[i] > A[j] && DP[i] < DP[j]+A[i]) {\n          DP[i] = DP[j] + A[i];\n        }\n      }\n      if(ans < DP[i]) {\n        ans = DP[i];\n      }\n      \n    }\n    \n    System.out.println(ans);\n    \n  }\n  \n}\n```","source":"_posts/2018-10-29-bj-11055.md","raw":"---\ntitle: \"[백준/11055] 가장 큰 증가 부분 수열\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [11055](https://www.acmicpc.net/problem/11055)\n\n## Review\n* 백준 11053 문제랑 비슷...\n* 하지만 DP[i] < DP[j] + A[i]를 만족하는 경우에만 최대값이 될 수 있다.\n* 이 부분을 몰라서 네 번이나 틀림.\n\n## Code (JAVA)\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(bf.readLine());\n    int[] A = new int[N + 1];\n    int[] DP = new int[N + 1];\n    int ans = 0;\n    StringTokenizer st = new StringTokenizer(bf.readLine());\n    \n    for(int i = 1; i <= N; i++) {\n      A[i] = Integer.parseInt(st.nextToken());\n    }\n    \n    for(int i = 1; i <= N; i++ ) {\n      DP[i] = A[i];\n      for(int j = 1; j < i; j++) {\n        if(A[i] > A[j] && DP[i] < DP[j]+A[i]) {\n          DP[i] = DP[j] + A[i];\n        }\n      }\n      if(ans < DP[i]) {\n        ans = DP[i];\n      }\n      \n    }\n    \n    System.out.println(ans);\n    \n  }\n  \n}\n```","slug":"bj-11055","published":1,"date":"2018-10-28T15:00:00.000Z","updated":"2020-05-05T08:00:03.857Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afh5003yuv59gobf8ice","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTA1NQ==\" title=\"https://www.acmicpc.net/problem/11055\">11055<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>백준 11053 문제랑 비슷…</li>\n<li>하지만 DP[i] &lt; DP[j] + A[i]를 만족하는 경우에만 최대값이 될 수 있다.</li>\n<li>이 부분을 몰라서 네 번이나 틀림.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] A = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] DP = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    StringTokenizer st = <span class=\"keyword\">new</span> StringTokenizer(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      A[i] = Integer.parseInt(st.nextToken());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++ ) &#123;</span><br><span class=\"line\">      DP[i] = A[i];</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; i; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(A[i] &gt; A[j] &amp;&amp; DP[i] &lt; DP[j]+A[i]) &#123;</span><br><span class=\"line\">          DP[i] = DP[j] + A[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(ans &lt; DP[i]) &#123;</span><br><span class=\"line\">        ans = DP[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(ans);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMTA1NQ==\" title=\"https://www.acmicpc.net/problem/11055\">11055<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>백준 11053 문제랑 비슷…</li>\n<li>하지만 DP[i] &lt; DP[j] + A[i]를 만족하는 경우에만 최대값이 될 수 있다.</li>\n<li>이 부분을 몰라서 네 번이나 틀림.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] A = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] DP = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    StringTokenizer st = <span class=\"keyword\">new</span> StringTokenizer(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      A[i] = Integer.parseInt(st.nextToken());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++ ) &#123;</span><br><span class=\"line\">      DP[i] = A[i];</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; i; j++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(A[i] &gt; A[j] &amp;&amp; DP[i] &lt; DP[j]+A[i]) &#123;</span><br><span class=\"line\">          DP[i] = DP[j] + A[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(ans &lt; DP[i]) &#123;</span><br><span class=\"line\">        ans = DP[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(ans);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/1912] 연속합","_content":"> Baekjoon Online Judge - [1912](https://www.acmicpc.net/problem/1912)\n\n## Review\n* 이전까지 더한 값+현재값과 현재값을 비교해 더 큰 값이 DP[]에 들어가고, 이전까지의 최대값(max)과 현재의 DP[] 값을 비교해 더 큰 값이 max 변수에 들어가면 된다.\n* 따라서 점화식은 `DP[i] = max(DP[i-1] + A[i], A[i])`\n* 그런데... 왜 맞는데... 틀리지?\n* 그건 내가 max 변수의 값을 0으로 초기화했기 때문임\n* 초기화 잘못해서 네 번 틀린 사람 나야 나 나야 나\n\n## Code (JAVA)\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(bf.readLine());\n    int[] DP = new int[N + 1];\n    int[] A = new int[N + 1];\n    int max;\n    StringTokenizer st = new StringTokenizer(bf.readLine());\n    \n    for(int i = 1; i <= N; i++) {\n      A[i] = Integer.parseInt(st.nextToken());\n    }\n\n    DP[1] = A[1];\n    max = A[1];\n    \n    for(int i = 1; i <= N; i++) {\n      DP[i] = Math.max(DP[i - 1] + A[i], A[i]);\n      max = Math.max(max, DP[i]);\n    }\n    \n    System.out.println(max);\n  }\n  \n}\n```","source":"_posts/2018-10-31-bj-1912.md","raw":"---\ntitle: \"[백준/1912] 연속합\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [1912](https://www.acmicpc.net/problem/1912)\n\n## Review\n* 이전까지 더한 값+현재값과 현재값을 비교해 더 큰 값이 DP[]에 들어가고, 이전까지의 최대값(max)과 현재의 DP[] 값을 비교해 더 큰 값이 max 변수에 들어가면 된다.\n* 따라서 점화식은 `DP[i] = max(DP[i-1] + A[i], A[i])`\n* 그런데... 왜 맞는데... 틀리지?\n* 그건 내가 max 변수의 값을 0으로 초기화했기 때문임\n* 초기화 잘못해서 네 번 틀린 사람 나야 나 나야 나\n\n## Code (JAVA)\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(bf.readLine());\n    int[] DP = new int[N + 1];\n    int[] A = new int[N + 1];\n    int max;\n    StringTokenizer st = new StringTokenizer(bf.readLine());\n    \n    for(int i = 1; i <= N; i++) {\n      A[i] = Integer.parseInt(st.nextToken());\n    }\n\n    DP[1] = A[1];\n    max = A[1];\n    \n    for(int i = 1; i <= N; i++) {\n      DP[i] = Math.max(DP[i - 1] + A[i], A[i]);\n      max = Math.max(max, DP[i]);\n    }\n    \n    System.out.println(max);\n  }\n  \n}\n```","slug":"bj-1912","published":1,"date":"2018-10-30T15:00:00.000Z","updated":"2020-05-05T08:00:03.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afh50041uv596oj3b2yf","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xOTEy\" title=\"https://www.acmicpc.net/problem/1912\">1912<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>이전까지 더한 값+현재값과 현재값을 비교해 더 큰 값이 DP[]에 들어가고, 이전까지의 최대값(max)과 현재의 DP[] 값을 비교해 더 큰 값이 max 변수에 들어가면 된다.</li>\n<li>따라서 점화식은 <code>DP[i] = max(DP[i-1] + A[i], A[i])</code></li>\n<li>그런데… 왜 맞는데… 틀리지?</li>\n<li>그건 내가 max 변수의 값을 0으로 초기화했기 때문임</li>\n<li>초기화 잘못해서 네 번 틀린 사람 나야 나 나야 나</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] DP = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] A = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> max;</span><br><span class=\"line\">    StringTokenizer st = <span class=\"keyword\">new</span> StringTokenizer(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      A[i] = Integer.parseInt(st.nextToken());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    DP[<span class=\"number\">1</span>] = A[<span class=\"number\">1</span>];</span><br><span class=\"line\">    max = A[<span class=\"number\">1</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      DP[i] = Math.max(DP[i - <span class=\"number\">1</span>] + A[i], A[i]);</span><br><span class=\"line\">      max = Math.max(max, DP[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(max);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xOTEy\" title=\"https://www.acmicpc.net/problem/1912\">1912<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>이전까지 더한 값+현재값과 현재값을 비교해 더 큰 값이 DP[]에 들어가고, 이전까지의 최대값(max)과 현재의 DP[] 값을 비교해 더 큰 값이 max 변수에 들어가면 된다.</li>\n<li>따라서 점화식은 <code>DP[i] = max(DP[i-1] + A[i], A[i])</code></li>\n<li>그런데… 왜 맞는데… 틀리지?</li>\n<li>그건 내가 max 변수의 값을 0으로 초기화했기 때문임</li>\n<li>초기화 잘못해서 네 번 틀린 사람 나야 나 나야 나</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.StringTokenizer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] DP = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] A = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> max;</span><br><span class=\"line\">    StringTokenizer st = <span class=\"keyword\">new</span> StringTokenizer(bf.readLine());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      A[i] = Integer.parseInt(st.nextToken());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    DP[<span class=\"number\">1</span>] = A[<span class=\"number\">1</span>];</span><br><span class=\"line\">    max = A[<span class=\"number\">1</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      DP[i] = Math.max(DP[i - <span class=\"number\">1</span>] + A[i], A[i]);</span><br><span class=\"line\">      max = Math.max(max, DP[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(max);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/2609] 최대공약수와 최소공배수","_content":"> Baekjoon Online Judge - [2609](https://www.acmicpc.net/problem/2609)\n\n## Review\n* 최대공약수(GCD) 구하기: A B 중 큰 수, 작은 수 판별한 다음 큰 수를 작은 수로 나누어 나머지를 구한다. 그리고 나눈 나머지가 0이면 작은 수가 최대공약수, 나머지가 0이 아니면 나누기를 반복하면 된다.\n* 최소공배수(LCM) 구하기: A * B / GCD\n\n## Code (JAVA)\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n  \n  public static int GCD(int a, int b) {\n    if(a % b == 0) {\n      return b;\n    } else {\n      return GCD(b, a % b);\n    }\n  }\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    String[] line = bf.readLine().split(\" \");\n    int A = Integer.parseInt(line[0]);\n    int B = Integer.parseInt(line[1]);\n    \n    int gcd = A > B ? GCD(A, B) : GCD(B, A);\n    int lcm = A * B / gcd;\n    System.out.println(gcd);\n    System.out.println(lcm);\n  }\n  \n}\n```","source":"_posts/2018-11-19-bj-2609.md","raw":"---\ntitle: \"[백준/2609] 최대공약수와 최소공배수\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [2609](https://www.acmicpc.net/problem/2609)\n\n## Review\n* 최대공약수(GCD) 구하기: A B 중 큰 수, 작은 수 판별한 다음 큰 수를 작은 수로 나누어 나머지를 구한다. 그리고 나눈 나머지가 0이면 작은 수가 최대공약수, 나머지가 0이 아니면 나누기를 반복하면 된다.\n* 최소공배수(LCM) 구하기: A * B / GCD\n\n## Code (JAVA)\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n  \n  public static int GCD(int a, int b) {\n    if(a % b == 0) {\n      return b;\n    } else {\n      return GCD(b, a % b);\n    }\n  }\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    String[] line = bf.readLine().split(\" \");\n    int A = Integer.parseInt(line[0]);\n    int B = Integer.parseInt(line[1]);\n    \n    int gcd = A > B ? GCD(A, B) : GCD(B, A);\n    int lcm = A * B / gcd;\n    System.out.println(gcd);\n    System.out.println(lcm);\n  }\n  \n}\n```","slug":"bj-2609","published":1,"date":"2018-11-18T15:00:00.000Z","updated":"2020-05-05T08:00:03.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afh60044uv5970r3e3nn","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNjA5\" title=\"https://www.acmicpc.net/problem/2609\">2609<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>최대공약수(GCD) 구하기: A B 중 큰 수, 작은 수 판별한 다음 큰 수를 작은 수로 나누어 나머지를 구한다. 그리고 나눈 나머지가 0이면 작은 수가 최대공약수, 나머지가 0이 아니면 나누기를 반복하면 된다.</li>\n<li>최소공배수(LCM) 구하기: A * B / GCD</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">GCD</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a % b == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> GCD(b, a % b);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    String[] line = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> A = Integer.parseInt(line[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> B = Integer.parseInt(line[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> gcd = A &gt; B ? GCD(A, B) : GCD(B, A);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> lcm = A * B / gcd;</span><br><span class=\"line\">    System.out.println(gcd);</span><br><span class=\"line\">    System.out.println(lcm);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNjA5\" title=\"https://www.acmicpc.net/problem/2609\">2609<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>최대공약수(GCD) 구하기: A B 중 큰 수, 작은 수 판별한 다음 큰 수를 작은 수로 나누어 나머지를 구한다. 그리고 나눈 나머지가 0이면 작은 수가 최대공약수, 나머지가 0이 아니면 나누기를 반복하면 된다.</li>\n<li>최소공배수(LCM) 구하기: A * B / GCD</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">GCD</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a % b == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> b;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> GCD(b, a % b);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    String[] line = bf.readLine().split(<span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> A = Integer.parseInt(line[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> B = Integer.parseInt(line[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> gcd = A &gt; B ? GCD(A, B) : GCD(B, A);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> lcm = A * B / gcd;</span><br><span class=\"line\">    System.out.println(gcd);</span><br><span class=\"line\">    System.out.println(lcm);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/1699] 제곱수의 합","_content":"> Baekjoon Online Judge - [1699](https://www.acmicpc.net/problem/1699)\n\n## Review\n* 무조건 큰 제곱수로 곱해서 구하는 것이 답이 아니다. 따라서 주어진 수를 구할 수 있는 모든 제곱수로 구해 본 다음 최소값을 찾으면 된다.\n\n## Code (JAVA)\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(bf.readLine());\n    int[] DP= new int[N + 1];\n    \n    for(int i = 1; i <= N; i++) {\n      DP[i] = i;\n    }\n    \n    for(int i = 1; i <= N; i++) {\n      for(int j = 1; j * j <= i; j++) {\n        DP[i] = Math.min(DP[i], DP[i - j*j] + 1);\n      }\n    }\n    \n    System.out.println(DP[N]);\n  }\n  \n}\n```","source":"_posts/2018-11-07-bj-1699.md","raw":"---\ntitle: \"[백준/1699] 제곱수의 합\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [1699](https://www.acmicpc.net/problem/1699)\n\n## Review\n* 무조건 큰 제곱수로 곱해서 구하는 것이 답이 아니다. 따라서 주어진 수를 구할 수 있는 모든 제곱수로 구해 본 다음 최소값을 찾으면 된다.\n\n## Code (JAVA)\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n  \n  public static void main(String args[]) throws IOException{\n    BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n    int N = Integer.parseInt(bf.readLine());\n    int[] DP= new int[N + 1];\n    \n    for(int i = 1; i <= N; i++) {\n      DP[i] = i;\n    }\n    \n    for(int i = 1; i <= N; i++) {\n      for(int j = 1; j * j <= i; j++) {\n        DP[i] = Math.min(DP[i], DP[i - j*j] + 1);\n      }\n    }\n    \n    System.out.println(DP[N]);\n  }\n  \n}\n```","slug":"bj-1699","published":1,"date":"2018-11-06T15:00:00.000Z","updated":"2020-05-05T08:00:03.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afh70047uv598k9e1ovv","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xNjk5\" title=\"https://www.acmicpc.net/problem/1699\">1699<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>무조건 큰 제곱수로 곱해서 구하는 것이 답이 아니다. 따라서 주어진 수를 구할 수 있는 모든 제곱수로 구해 본 다음 최소값을 찾으면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] DP= <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      DP[i] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j * j &lt;= i; j++) &#123;</span><br><span class=\"line\">        DP[i] = Math.min(DP[i], DP[i - j*j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(DP[N]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xNjk5\" title=\"https://www.acmicpc.net/problem/1699\">1699<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>무조건 큰 제곱수로 곱해서 구하는 것이 답이 아니다. 따라서 주어진 수를 구할 수 있는 모든 제곱수로 구해 본 다음 최소값을 찾으면 된다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException</span>&#123;</span><br><span class=\"line\">    BufferedReader bf = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = Integer.parseInt(bf.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] DP= <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      DP[i] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j * j &lt;= i; j++) &#123;</span><br><span class=\"line\">        DP[i] = Math.min(DP[i], DP[i - j*j] + <span class=\"number\">1</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(DP[N]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[백준/10172] 개","_content":"> Baekjoon Online Judge - [10172](https://www.acmicpc.net/problem/10172)\n\n## Review\n* 자바스크립트로 풀었던 문제.\n* 이스케이프 문자를 사용해야 된다. 멍멍.\n\n## Code (JAVASCRIPT)\n```javascript\nconsole.log(\"|\\\\_/|\\n|q p| /}\\n( 0 )\\\"\\\"\\\"\\\\\\n|\\\"^\\\"` |\\n||_/=\\\\\\\\__|\");\n```","source":"_posts/2018-12-16-bj-10172.md","raw":"---\ntitle: \"[백준/10172] 개\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [10172](https://www.acmicpc.net/problem/10172)\n\n## Review\n* 자바스크립트로 풀었던 문제.\n* 이스케이프 문자를 사용해야 된다. 멍멍.\n\n## Code (JAVASCRIPT)\n```javascript\nconsole.log(\"|\\\\_/|\\n|q p| /}\\n( 0 )\\\"\\\"\\\"\\\\\\n|\\\"^\\\"` |\\n||_/=\\\\\\\\__|\");\n```","slug":"bj-10172","published":1,"date":"2018-12-15T15:00:00.000Z","updated":"2020-05-05T08:00:03.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afh8004auv59c6dlhkdg","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDE3Mg==\" title=\"https://www.acmicpc.net/problem/10172\">10172<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>자바스크립트로 풀었던 문제.</li>\n<li>이스케이프 문자를 사용해야 된다. 멍멍.</li>\n</ul>\n<h2 id=\"Code-JAVASCRIPT\"><a href=\"#Code-JAVASCRIPT\" class=\"headerlink\" title=\"Code (JAVASCRIPT)\"></a>Code (JAVASCRIPT)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"|\\\\_/|\\n|q p| /&#125;\\n( 0 )\\\"\\\"\\\"\\\\\\n|\\\"^\\\"` |\\n||_/=\\\\\\\\__|\"</span>);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDE3Mg==\" title=\"https://www.acmicpc.net/problem/10172\">10172<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>자바스크립트로 풀었던 문제.</li>\n<li>이스케이프 문자를 사용해야 된다. 멍멍.</li>\n</ul>\n<h2 id=\"Code-JAVASCRIPT\"><a href=\"#Code-JAVASCRIPT\" class=\"headerlink\" title=\"Code (JAVASCRIPT)\"></a>Code (JAVASCRIPT)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"|\\\\_/|\\n|q p| /&#125;\\n( 0 )\\\"\\\"\\\"\\\\\\n|\\\"^\\\"` |\\n||_/=\\\\\\\\__|\"</span>);</span><br></pre></td></tr></table></figure>"},{"title":"[프로그래머스] 소수찾기","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12921)\n\n## Review\n\n- 계속 시간초과 나오다 [에라토스테네스의 체](https://ko.wikipedia.org/wiki/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98_%EC%B2%B4)로 겨우 통과\n- 1차 시도: 1과 자기 자신으로 나누어지는 수만 카운트하자 -> 시간 초과\n- 2차 시도: 일단 2로 나눌 수 있는 수는 거르고 시작하자. 그리고 어차피 자기 자신/2 이상으로 나눌 수는 없으니까 최대한 반복 횟수 줄여보자 -> 시간 초과\n- 3차 시도: 질문하기 피드 보니 에라토스테네스의 체를 사용하라고 한다 -> 통과\n- 예전이랑 지금이랑 시간 제한이 달라진 것 같음.\n- python의 set()을 사용하면 더 짧고 간단하게 구현 가능하다.\n\n## Code (Python)\n\n```python\ndef solution(n):\n    sieve = [True] * (n + 1)\n    m = int(n ** 0.5)\n\n    for i in range(2, m + 1):\n        for j in range(i+i, n + 1, i):\n            sieve[j] = False\n\n    return len([i for i in range(2, n + 1) if sieve[i] == True])\n```\n","source":"_posts/2019-02-22-pgs-12921.md","raw":"---\ntitle: \"[프로그래머스] 소수찾기\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12921)\n\n## Review\n\n- 계속 시간초과 나오다 [에라토스테네스의 체](https://ko.wikipedia.org/wiki/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98_%EC%B2%B4)로 겨우 통과\n- 1차 시도: 1과 자기 자신으로 나누어지는 수만 카운트하자 -> 시간 초과\n- 2차 시도: 일단 2로 나눌 수 있는 수는 거르고 시작하자. 그리고 어차피 자기 자신/2 이상으로 나눌 수는 없으니까 최대한 반복 횟수 줄여보자 -> 시간 초과\n- 3차 시도: 질문하기 피드 보니 에라토스테네스의 체를 사용하라고 한다 -> 통과\n- 예전이랑 지금이랑 시간 제한이 달라진 것 같음.\n- python의 set()을 사용하면 더 짧고 간단하게 구현 가능하다.\n\n## Code (Python)\n\n```python\ndef solution(n):\n    sieve = [True] * (n + 1)\n    m = int(n ** 0.5)\n\n    for i in range(2, m + 1):\n        for j in range(i+i, n + 1, i):\n            sieve[j] = False\n\n    return len([i for i in range(2, n + 1) if sieve[i] == True])\n```\n","slug":"pgs-12921","published":1,"date":"2019-02-21T15:00:00.000Z","updated":"2020-05-05T08:00:03.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afh8004duv59g91x3svs","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5MjE=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12921\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>계속 시간초과 나오다 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9rby53aWtpcGVkaWEub3JnL3dpa2kvJUVDJTk3JTkwJUVCJTlEJUJDJUVEJTg2JUEwJUVDJThBJUE0JUVEJTg1JThDJUVCJTg0JUE0JUVDJThBJUE0JUVDJTlEJTk4XyVFQyVCMiVCNA==\" title=\"https://ko.wikipedia.org/wiki/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98_%EC%B2%B4\">에라토스테네스의 체<i class=\"fa fa-external-link\"></i></span>로 겨우 통과</li>\n<li>1차 시도: 1과 자기 자신으로 나누어지는 수만 카운트하자 -&gt; 시간 초과</li>\n<li>2차 시도: 일단 2로 나눌 수 있는 수는 거르고 시작하자. 그리고 어차피 자기 자신/2 이상으로 나눌 수는 없으니까 최대한 반복 횟수 줄여보자 -&gt; 시간 초과</li>\n<li>3차 시도: 질문하기 피드 보니 에라토스테네스의 체를 사용하라고 한다 -&gt; 통과</li>\n<li>예전이랑 지금이랑 시간 제한이 달라진 것 같음.</li>\n<li>python의 set()을 사용하면 더 짧고 간단하게 구현 가능하다.</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(n)</span>:</span></span><br><span class=\"line\">    sieve = [<span class=\"literal\">True</span>] * (n + <span class=\"number\">1</span>)</span><br><span class=\"line\">    m = int(n ** <span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">2</span>, m + <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i+i, n + <span class=\"number\">1</span>, i):</span><br><span class=\"line\">            sieve[j] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> len([i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">2</span>, n + <span class=\"number\">1</span>) <span class=\"keyword\">if</span> sieve[i] == <span class=\"literal\">True</span>])</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5MjE=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12921\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>계속 시간초과 나오다 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9rby53aWtpcGVkaWEub3JnL3dpa2kvJUVDJTk3JTkwJUVCJTlEJUJDJUVEJTg2JUEwJUVDJThBJUE0JUVEJTg1JThDJUVCJTg0JUE0JUVDJThBJUE0JUVDJTlEJTk4XyVFQyVCMiVCNA==\" title=\"https://ko.wikipedia.org/wiki/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98_%EC%B2%B4\">에라토스테네스의 체<i class=\"fa fa-external-link\"></i></span>로 겨우 통과</li>\n<li>1차 시도: 1과 자기 자신으로 나누어지는 수만 카운트하자 -&gt; 시간 초과</li>\n<li>2차 시도: 일단 2로 나눌 수 있는 수는 거르고 시작하자. 그리고 어차피 자기 자신/2 이상으로 나눌 수는 없으니까 최대한 반복 횟수 줄여보자 -&gt; 시간 초과</li>\n<li>3차 시도: 질문하기 피드 보니 에라토스테네스의 체를 사용하라고 한다 -&gt; 통과</li>\n<li>예전이랑 지금이랑 시간 제한이 달라진 것 같음.</li>\n<li>python의 set()을 사용하면 더 짧고 간단하게 구현 가능하다.</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(n)</span>:</span></span><br><span class=\"line\">    sieve = [<span class=\"literal\">True</span>] * (n + <span class=\"number\">1</span>)</span><br><span class=\"line\">    m = int(n ** <span class=\"number\">0.5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">2</span>, m + <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i+i, n + <span class=\"number\">1</span>, i):</span><br><span class=\"line\">            sieve[j] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> len([i <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">2</span>, n + <span class=\"number\">1</span>) <span class=\"keyword\">if</span> sieve[i] == <span class=\"literal\">True</span>])</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/2577] 숫자의 개수","_content":"> Baekjoon Online Judge - [2577](https://www.acmicpc.net/problem/2577)\n\n## Review\n* a,b,c는 1000보다 작은 자연수이니 배열의 최대 크기는 10이 됨. 왜냐면 자릿수만큼 저장해야 되니...\n* 나머지로 숫자의 갯수를 셀 수 있고, 몫으로 자릿수를 구할 수 있음.\n\n## Code (JAVA)\n```java\nimport java.util.Scanner;\n\npublic class Main {\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int a = sc.nextInt();\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n    int result = a * b * c;\n    \n    int[] number = new int[10];\n    \n    while(result > 0) {\n      number[result%10]++;\n      result/=10;\n    }\n    \n    for(int i = 0; i < number.length; i++) {\n      System.out.println(number[i]);\n    }\n    \n    sc.close();\n  }\n  \n}\n```","source":"_posts/2018-12-16-bj-2577.md","raw":"---\ntitle: \"[백준/2577] 숫자의 개수\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [2577](https://www.acmicpc.net/problem/2577)\n\n## Review\n* a,b,c는 1000보다 작은 자연수이니 배열의 최대 크기는 10이 됨. 왜냐면 자릿수만큼 저장해야 되니...\n* 나머지로 숫자의 갯수를 셀 수 있고, 몫으로 자릿수를 구할 수 있음.\n\n## Code (JAVA)\n```java\nimport java.util.Scanner;\n\npublic class Main {\n  public static void main(String args[]) {\n    Scanner sc = new Scanner(System.in);\n    int a = sc.nextInt();\n    int b = sc.nextInt();\n    int c = sc.nextInt();\n    int result = a * b * c;\n    \n    int[] number = new int[10];\n    \n    while(result > 0) {\n      number[result%10]++;\n      result/=10;\n    }\n    \n    for(int i = 0; i < number.length; i++) {\n      System.out.println(number[i]);\n    }\n    \n    sc.close();\n  }\n  \n}\n```","slug":"bj-2577","published":1,"date":"2018-12-15T15:00:00.000Z","updated":"2020-05-05T08:00:03.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afh9004guv5984qb9yit","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNTc3\" title=\"https://www.acmicpc.net/problem/2577\">2577<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>a,b,c는 1000보다 작은 자연수이니 배열의 최대 크기는 10이 됨. 왜냐면 자릿수만큼 저장해야 되니…</li>\n<li>나머지로 숫자의 갯수를 셀 수 있고, 몫으로 자릿수를 구할 수 있음.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> b = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> c = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> result = a * b * c;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] number = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(result &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      number[result%<span class=\"number\">10</span>]++;</span><br><span class=\"line\">      result/=<span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; number.length; i++) &#123;</span><br><span class=\"line\">      System.out.println(number[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNTc3\" title=\"https://www.acmicpc.net/problem/2577\">2577<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>a,b,c는 1000보다 작은 자연수이니 배열의 최대 크기는 10이 됨. 왜냐면 자릿수만큼 저장해야 되니…</li>\n<li>나머지로 숫자의 갯수를 셀 수 있고, 몫으로 자릿수를 구할 수 있음.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> b = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> c = sc.nextInt();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> result = a * b * c;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] number = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">10</span>];</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(result &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      number[result%<span class=\"number\">10</span>]++;</span><br><span class=\"line\">      result/=<span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; number.length; i++) &#123;</span><br><span class=\"line\">      System.out.println(number[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sc.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"[프로그래머스] 문자열 내 마음대로 정렬하기","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12915)\n\n## Review\n\n- sorted 함수로 어떻게 특정 기준으로 정렬하지\n- 아 람다를 사용하면 되는구나\n- 그런데 기준 인덱스가 같을 때는 왜 사전순으로는 정렬이 안 되지?\n- 아 사전순으로 한 번 정렬한 걸 다시 재정렬하면 되는구나 (멍청)\n\n## Code (Python)\n\n```python\ndef solution(strings, n):\n    return sorted(sorted(strings), key=lambda x: x[n])\n```\n","source":"_posts/2019-07-22-pgs-12915.md","raw":"---\ntitle: \"[프로그래머스] 문자열 내 마음대로 정렬하기\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12915)\n\n## Review\n\n- sorted 함수로 어떻게 특정 기준으로 정렬하지\n- 아 람다를 사용하면 되는구나\n- 그런데 기준 인덱스가 같을 때는 왜 사전순으로는 정렬이 안 되지?\n- 아 사전순으로 한 번 정렬한 걸 다시 재정렬하면 되는구나 (멍청)\n\n## Code (Python)\n\n```python\ndef solution(strings, n):\n    return sorted(sorted(strings), key=lambda x: x[n])\n```\n","slug":"pgs-12915","published":1,"date":"2019-07-21T15:00:00.000Z","updated":"2020-05-05T08:00:03.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afha004luv592oyr1qn0","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5MTU=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12915\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>sorted 함수로 어떻게 특정 기준으로 정렬하지</li>\n<li>아 람다를 사용하면 되는구나</li>\n<li>그런데 기준 인덱스가 같을 때는 왜 사전순으로는 정렬이 안 되지?</li>\n<li>아 사전순으로 한 번 정렬한 걸 다시 재정렬하면 되는구나 (멍청)</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(strings, n)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sorted(sorted(strings), key=<span class=\"keyword\">lambda</span> x: x[n])</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5MTU=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12915\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>sorted 함수로 어떻게 특정 기준으로 정렬하지</li>\n<li>아 람다를 사용하면 되는구나</li>\n<li>그런데 기준 인덱스가 같을 때는 왜 사전순으로는 정렬이 안 되지?</li>\n<li>아 사전순으로 한 번 정렬한 걸 다시 재정렬하면 되는구나 (멍청)</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(strings, n)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> sorted(sorted(strings), key=<span class=\"keyword\">lambda</span> x: x[n])</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/1003] 피보나치 함수","_content":"\n> Baekjoon Online Judge - [1003](https://www.acmicpc.net/problem/1003)\n\n## Review\n\n- 9월에 몇 번 풀었다 실패한 문제다. 며칠 전까지 계속 틀려서 총 8번을 틀렸는데, 대부분이 시간 초과였다.\n- 예전에는 재귀로 풀어도 AC를 받은 것 같은데 지금은 안 되는 걸 보니 시간 제한이 바뀌었나 봄. 그래서 메모이제이션으로 풀었다.\n- 처음에는 그냥 단순하게 전역으로 zero, one 변수를 선언하고 0일 때, 1일 때 각각 zero, one 값을 증가하는 방식으로 풀었다. 당연 틀림 ㅋㅋ. 이렇게 하면 안 된다. 내가 문제 제대로 이해 못하기도 했고... 아무튼 여기서 삽질 진짜 많이 했다.\n- ![example](/images/bj-1003/fibo.png)\n- fibonacci(5)는 fibonacci(4) + fibonacci(3)의 값으로 구할 수 있다. fibonacci(4)의 0과 1의 \b개수는 각각 2 3, fibonacci(3)의 0과 1의 개수는 1 2다. 따라서 fibonacci(5)는 그 둘을 더한 3 5가 된다. 참고로 fibonacci(4) = 3, fibonacci(5) = 5이다.\n- 결과적으로 0의 개수는 fibonacci(n-1), 1의 개수는 fibonacci(n)일 때 구할 수 있다.\n\n## Code (JAVA)\n\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n  static int[] memo;\n\n  public static int fibonacci(int n) {\n    if (n == 0) {\n      memo[0] = 0;\n      return 0;\n    } else if (n == 1) {\n      memo[1] = 1;\n      return 1;\n    } else if(memo[n] != 0) {\n      return memo[n];\n    }else {\n      return memo[n] = fibonacci(n-1) + fibonacci(n-2);\n    }\n  }\n\n  public static void main(String args[]) throws IOException {\n    BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n    int T = Integer.parseInt(in.readLine());\n    for(int i = 0; i < T; i++) {\n      int N = Integer.parseInt(in.readLine());\n      memo = new int[N + 1];\n\n      if(N == 0) {\n        System.out.println(1 + \" \" +0);\n      } else if(N == 1) {\n        System.out.println(0 + \" \" +1);\n      } else {\n        fibonacci(N);\n        System.out.println(fibonacci(N-1) + \" \" + fibonacci(N));\n      }\n    }\n  }\n}\n```\n","source":"_posts/2018-12-22-bj-1003.md","raw":"---\ntitle: \"[백준/1003] 피보나치 함수\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n\n> Baekjoon Online Judge - [1003](https://www.acmicpc.net/problem/1003)\n\n## Review\n\n- 9월에 몇 번 풀었다 실패한 문제다. 며칠 전까지 계속 틀려서 총 8번을 틀렸는데, 대부분이 시간 초과였다.\n- 예전에는 재귀로 풀어도 AC를 받은 것 같은데 지금은 안 되는 걸 보니 시간 제한이 바뀌었나 봄. 그래서 메모이제이션으로 풀었다.\n- 처음에는 그냥 단순하게 전역으로 zero, one 변수를 선언하고 0일 때, 1일 때 각각 zero, one 값을 증가하는 방식으로 풀었다. 당연 틀림 ㅋㅋ. 이렇게 하면 안 된다. 내가 문제 제대로 이해 못하기도 했고... 아무튼 여기서 삽질 진짜 많이 했다.\n- ![example](/images/bj-1003/fibo.png)\n- fibonacci(5)는 fibonacci(4) + fibonacci(3)의 값으로 구할 수 있다. fibonacci(4)의 0과 1의 \b개수는 각각 2 3, fibonacci(3)의 0과 1의 개수는 1 2다. 따라서 fibonacci(5)는 그 둘을 더한 3 5가 된다. 참고로 fibonacci(4) = 3, fibonacci(5) = 5이다.\n- 결과적으로 0의 개수는 fibonacci(n-1), 1의 개수는 fibonacci(n)일 때 구할 수 있다.\n\n## Code (JAVA)\n\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class Main {\n  static int[] memo;\n\n  public static int fibonacci(int n) {\n    if (n == 0) {\n      memo[0] = 0;\n      return 0;\n    } else if (n == 1) {\n      memo[1] = 1;\n      return 1;\n    } else if(memo[n] != 0) {\n      return memo[n];\n    }else {\n      return memo[n] = fibonacci(n-1) + fibonacci(n-2);\n    }\n  }\n\n  public static void main(String args[]) throws IOException {\n    BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n    int T = Integer.parseInt(in.readLine());\n    for(int i = 0; i < T; i++) {\n      int N = Integer.parseInt(in.readLine());\n      memo = new int[N + 1];\n\n      if(N == 0) {\n        System.out.println(1 + \" \" +0);\n      } else if(N == 1) {\n        System.out.println(0 + \" \" +1);\n      } else {\n        fibonacci(N);\n        System.out.println(fibonacci(N-1) + \" \" + fibonacci(N));\n      }\n    }\n  }\n}\n```\n","slug":"bj-1003","published":1,"date":"2018-12-21T15:00:00.000Z","updated":"2020-05-05T08:00:03.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afha004ouv59bcwwbq84","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDAz\" title=\"https://www.acmicpc.net/problem/1003\">1003<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>9월에 몇 번 풀었다 실패한 문제다. 며칠 전까지 계속 틀려서 총 8번을 틀렸는데, 대부분이 시간 초과였다.</li>\n<li>예전에는 재귀로 풀어도 AC를 받은 것 같은데 지금은 안 되는 걸 보니 시간 제한이 바뀌었나 봄. 그래서 메모이제이션으로 풀었다.</li>\n<li>처음에는 그냥 단순하게 전역으로 zero, one 변수를 선언하고 0일 때, 1일 때 각각 zero, one 값을 증가하는 방식으로 풀었다. 당연 틀림 ㅋㅋ. 이렇게 하면 안 된다. 내가 문제 제대로 이해 못하기도 했고… 아무튼 여기서 삽질 진짜 많이 했다.</li>\n<li><img src=\"/images/bj-1003/fibo.png\" alt=\"example\"></li>\n<li>fibonacci(5)는 fibonacci(4) + fibonacci(3)의 값으로 구할 수 있다. fibonacci(4)의 0과 1의 \b개수는 각각 2 3, fibonacci(3)의 0과 1의 개수는 1 2다. 따라서 fibonacci(5)는 그 둘을 더한 3 5가 된다. 참고로 fibonacci(4) = 3, fibonacci(5) = 5이다.</li>\n<li>결과적으로 0의 개수는 fibonacci(n-1), 1의 개수는 fibonacci(n)일 때 구할 수 있다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[] memo;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">fibonacci</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      memo[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      memo[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(memo[n] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n] = fibonacci(n-<span class=\"number\">1</span>) + fibonacci(n-<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader in = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T = Integer.parseInt(in.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; T; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> N = Integer.parseInt(in.readLine());</span><br><span class=\"line\">      memo = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(N == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"number\">1</span> + <span class=\"string\">\" \"</span> +<span class=\"number\">0</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(N == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"number\">0</span> + <span class=\"string\">\" \"</span> +<span class=\"number\">1</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        fibonacci(N);</span><br><span class=\"line\">        System.out.println(fibonacci(N-<span class=\"number\">1</span>) + <span class=\"string\">\" \"</span> + fibonacci(N));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDAz\" title=\"https://www.acmicpc.net/problem/1003\">1003<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>9월에 몇 번 풀었다 실패한 문제다. 며칠 전까지 계속 틀려서 총 8번을 틀렸는데, 대부분이 시간 초과였다.</li>\n<li>예전에는 재귀로 풀어도 AC를 받은 것 같은데 지금은 안 되는 걸 보니 시간 제한이 바뀌었나 봄. 그래서 메모이제이션으로 풀었다.</li>\n<li>처음에는 그냥 단순하게 전역으로 zero, one 변수를 선언하고 0일 때, 1일 때 각각 zero, one 값을 증가하는 방식으로 풀었다. 당연 틀림 ㅋㅋ. 이렇게 하면 안 된다. 내가 문제 제대로 이해 못하기도 했고… 아무튼 여기서 삽질 진짜 많이 했다.</li>\n<li><img src=\"/images/bj-1003/fibo.png\" alt=\"example\"></li>\n<li>fibonacci(5)는 fibonacci(4) + fibonacci(3)의 값으로 구할 수 있다. fibonacci(4)의 0과 1의 \b개수는 각각 2 3, fibonacci(3)의 0과 1의 개수는 1 2다. 따라서 fibonacci(5)는 그 둘을 더한 3 5가 된다. 참고로 fibonacci(4) = 3, fibonacci(5) = 5이다.</li>\n<li>결과적으로 0의 개수는 fibonacci(n-1), 1의 개수는 fibonacci(n)일 때 구할 수 있다.</li>\n</ul>\n<h2 id=\"Code-JAVA\"><a href=\"#Code-JAVA\" class=\"headerlink\" title=\"Code (JAVA)\"></a>Code (JAVA)</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">int</span>[] memo;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">fibonacci</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (n == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      memo[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      memo[<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(memo[n] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n];</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> memo[n] = fibonacci(n-<span class=\"number\">1</span>) + fibonacci(n-<span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    BufferedReader in = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(System.in));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> T = Integer.parseInt(in.readLine());</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; T; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> N = Integer.parseInt(in.readLine());</span><br><span class=\"line\">      memo = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N + <span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(N == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"number\">1</span> + <span class=\"string\">\" \"</span> +<span class=\"number\">0</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(N == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"number\">0</span> + <span class=\"string\">\" \"</span> +<span class=\"number\">1</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        fibonacci(N);</span><br><span class=\"line\">        System.out.println(fibonacci(N-<span class=\"number\">1</span>) + <span class=\"string\">\" \"</span> + fibonacci(N));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/2884] 알람 시계","_content":"> Baekjoon Online Judge - [2884](https://www.acmicpc.net/problem/2884)\n\n## Code (Python)\n\n```py\nH, M = input().split()\nhours = int(H)\nminutes = int(M)\nif minutes - 45 >= 0:\n  h = str(hours)\n  m = str(minutes - 45)\n  print(h + ' ' + m)\nelse:\n  if hours == 0:\n    h = str(23)\n  else:\n    h = str(hours - 1)\n  m = str(minutes + 60 - 45)\n  print(h + ' ' + m)\n```\n","source":"_posts/2019-07-23-bj-2884.md","raw":"---\ntitle: \"[백준/2884] 알람 시계\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [2884](https://www.acmicpc.net/problem/2884)\n\n## Code (Python)\n\n```py\nH, M = input().split()\nhours = int(H)\nminutes = int(M)\nif minutes - 45 >= 0:\n  h = str(hours)\n  m = str(minutes - 45)\n  print(h + ' ' + m)\nelse:\n  if hours == 0:\n    h = str(23)\n  else:\n    h = str(hours - 1)\n  m = str(minutes + 60 - 45)\n  print(h + ' ' + m)\n```\n","slug":"bj-2884","published":1,"date":"2019-07-22T15:00:00.000Z","updated":"2020-05-05T08:00:03.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhb004ruv5993de2lw6","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yODg0\" title=\"https://www.acmicpc.net/problem/2884\">2884<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">H, M = input().split()</span><br><span class=\"line\">hours = int(H)</span><br><span class=\"line\">minutes = int(M)</span><br><span class=\"line\"><span class=\"keyword\">if</span> minutes - <span class=\"number\">45</span> &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">  h = str(hours)</span><br><span class=\"line\">  m = str(minutes - <span class=\"number\">45</span>)</span><br><span class=\"line\">  print(h + <span class=\"string\">' '</span> + m)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">  <span class=\"keyword\">if</span> hours == <span class=\"number\">0</span>:</span><br><span class=\"line\">    h = str(<span class=\"number\">23</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    h = str(hours - <span class=\"number\">1</span>)</span><br><span class=\"line\">  m = str(minutes + <span class=\"number\">60</span> - <span class=\"number\">45</span>)</span><br><span class=\"line\">  print(h + <span class=\"string\">' '</span> + m)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yODg0\" title=\"https://www.acmicpc.net/problem/2884\">2884<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">H, M = input().split()</span><br><span class=\"line\">hours = int(H)</span><br><span class=\"line\">minutes = int(M)</span><br><span class=\"line\"><span class=\"keyword\">if</span> minutes - <span class=\"number\">45</span> &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">  h = str(hours)</span><br><span class=\"line\">  m = str(minutes - <span class=\"number\">45</span>)</span><br><span class=\"line\">  print(h + <span class=\"string\">' '</span> + m)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">  <span class=\"keyword\">if</span> hours == <span class=\"number\">0</span>:</span><br><span class=\"line\">    h = str(<span class=\"number\">23</span>)</span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    h = str(hours - <span class=\"number\">1</span>)</span><br><span class=\"line\">  m = str(minutes + <span class=\"number\">60</span> - <span class=\"number\">45</span>)</span><br><span class=\"line\">  print(h + <span class=\"string\">' '</span> + m)</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 이상한 문자 만들기","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12930)\n\n## Review\n\n- 과거 자바스크립트로 풀었던 문제인데 기억 리셋된 상태에서 다시 풀었음.\n- 놀랍게도 동일한 의식의 흐름으로 풀었음. 그때나 지금이나 똑같은가 보다.\n- 이 문제는 그냥 짜라는 대로 짜면 된다.\n- 홀수번째 알파벳이 대문자일 경우가 있으니 소문자로 처리를 확실하게 하면 됨.\n\n## Code (Python)\n\n```python\ndef solution(s):\n    count = 0\n    answer = ''\n    for i in s:\n        if i == ' ':\n            count = 0\n            answer += ' '\n        else:\n            count += 1\n            if count % 2 == 1:\n                answer += i.upper()\n            else:\n                answer += i.lower()\n    return answer\n```\n\n## Code (Javascript)\n\n```js\nfunction solution(s) {\n  let check = 0;\n  let newStr = [];\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \" \") {\n      check = 0;\n    } else {\n      check++;\n    }\n    if (check % 2 === 1) {\n      newStr.push(s[i].toUpperCase());\n    } else {\n      newStr.push(s[i].toLowerCase());\n    }\n  }\n  return newStr.join(\"\");\n}\n```\n","source":"_posts/2019-07-22-pgs-12930.md","raw":"---\ntitle: \"[프로그래머스] 이상한 문자 만들기\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12930)\n\n## Review\n\n- 과거 자바스크립트로 풀었던 문제인데 기억 리셋된 상태에서 다시 풀었음.\n- 놀랍게도 동일한 의식의 흐름으로 풀었음. 그때나 지금이나 똑같은가 보다.\n- 이 문제는 그냥 짜라는 대로 짜면 된다.\n- 홀수번째 알파벳이 대문자일 경우가 있으니 소문자로 처리를 확실하게 하면 됨.\n\n## Code (Python)\n\n```python\ndef solution(s):\n    count = 0\n    answer = ''\n    for i in s:\n        if i == ' ':\n            count = 0\n            answer += ' '\n        else:\n            count += 1\n            if count % 2 == 1:\n                answer += i.upper()\n            else:\n                answer += i.lower()\n    return answer\n```\n\n## Code (Javascript)\n\n```js\nfunction solution(s) {\n  let check = 0;\n  let newStr = [];\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === \" \") {\n      check = 0;\n    } else {\n      check++;\n    }\n    if (check % 2 === 1) {\n      newStr.push(s[i].toUpperCase());\n    } else {\n      newStr.push(s[i].toLowerCase());\n    }\n  }\n  return newStr.join(\"\");\n}\n```\n","slug":"pgs-12930","published":1,"date":"2019-07-21T15:00:00.000Z","updated":"2020-05-05T08:00:03.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhc004wuv59akmpfc0c","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5MzA=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12930\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>과거 자바스크립트로 풀었던 문제인데 기억 리셋된 상태에서 다시 풀었음.</li>\n<li>놀랍게도 동일한 의식의 흐름으로 풀었음. 그때나 지금이나 똑같은가 보다.</li>\n<li>이 문제는 그냥 짜라는 대로 짜면 된다.</li>\n<li>홀수번째 알파벳이 대문자일 경우가 있으니 소문자로 처리를 확실하게 하면 됨.</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\">    answer = <span class=\"string\">''</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i == <span class=\"string\">' '</span>:</span><br><span class=\"line\">            count = <span class=\"number\">0</span></span><br><span class=\"line\">            answer += <span class=\"string\">' '</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> count % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">                answer += i.upper()</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                answer += i.lower()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-Javascript\"><a href=\"#Code-Javascript\" class=\"headerlink\" title=\"Code (Javascript)\"></a>Code (Javascript)</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">solution</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> check = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> newStr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s[i] === <span class=\"string\">\" \"</span>) &#123;</span><br><span class=\"line\">      check = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      check++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (check % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      newStr.push(s[i].toUpperCase());</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      newStr.push(s[i].toLowerCase());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newStr.join(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5MzA=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12930\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>과거 자바스크립트로 풀었던 문제인데 기억 리셋된 상태에서 다시 풀었음.</li>\n<li>놀랍게도 동일한 의식의 흐름으로 풀었음. 그때나 지금이나 똑같은가 보다.</li>\n<li>이 문제는 그냥 짜라는 대로 짜면 된다.</li>\n<li>홀수번째 알파벳이 대문자일 경우가 있으니 소문자로 처리를 확실하게 하면 됨.</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\">    answer = <span class=\"string\">''</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i == <span class=\"string\">' '</span>:</span><br><span class=\"line\">            count = <span class=\"number\">0</span></span><br><span class=\"line\">            answer += <span class=\"string\">' '</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> count % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">                answer += i.upper()</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                answer += i.lower()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-Javascript\"><a href=\"#Code-Javascript\" class=\"headerlink\" title=\"Code (Javascript)\"></a>Code (Javascript)</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">solution</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> check = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> newStr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; s.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s[i] === <span class=\"string\">\" \"</span>) &#123;</span><br><span class=\"line\">      check = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      check++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (check % <span class=\"number\">2</span> === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">      newStr.push(s[i].toUpperCase());</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      newStr.push(s[i].toLowerCase());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newStr.join(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 정수 내림차순으로 배치하기","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12933)\n\n## Review\n\n- 리스트를 문자열로 형변환한 다음 리스트로 만들어 정렬해 다시 숫자로 만들면 되는 문제\n\n## Code (Python)\n\n```python\ndef solution(n):\n    arr = list(str(n))\n    arr.sort(reverse=True)\n    return int(''.join(arr))\n```\n","source":"_posts/2019-07-23-pgs-12933.md","raw":"---\ntitle: \"[프로그래머스] 정수 내림차순으로 배치하기\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12933)\n\n## Review\n\n- 리스트를 문자열로 형변환한 다음 리스트로 만들어 정렬해 다시 숫자로 만들면 되는 문제\n\n## Code (Python)\n\n```python\ndef solution(n):\n    arr = list(str(n))\n    arr.sort(reverse=True)\n    return int(''.join(arr))\n```\n","slug":"pgs-12933","published":1,"date":"2019-07-22T15:00:00.000Z","updated":"2020-05-05T08:00:03.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhd004zuv596682en3t","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5MzM=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12933\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>리스트를 문자열로 형변환한 다음 리스트로 만들어 정렬해 다시 숫자로 만들면 되는 문제</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(n)</span>:</span></span><br><span class=\"line\">    arr = list(str(n))</span><br><span class=\"line\">    arr.sort(reverse=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(<span class=\"string\">''</span>.join(arr))</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5MzM=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12933\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>리스트를 문자열로 형변환한 다음 리스트로 만들어 정렬해 다시 숫자로 만들면 되는 문제</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(n)</span>:</span></span><br><span class=\"line\">    arr = list(str(n))</span><br><span class=\"line\">    arr.sort(reverse=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> int(<span class=\"string\">''</span>.join(arr))</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 정수 제곱근 판별","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12934)\n\n## Review\n\n- 숫자의 제곱근을 찾은 다음 정수인지 아닌지 판별해서 계산하면 되는 문제\n\n## Code (Python)\n\n```python\nimport math\n\ndef solution(n):\n    answer = math.sqrt(n)\n    if answer.is_integer():\n        answer = (int(answer) + 1)\n        return answer * answer\n    else:\n        return -1\n    return\n```\n","source":"_posts/2019-07-23-pgs-12934.md","raw":"---\ntitle: \"[프로그래머스] 정수 제곱근 판별\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12934)\n\n## Review\n\n- 숫자의 제곱근을 찾은 다음 정수인지 아닌지 판별해서 계산하면 되는 문제\n\n## Code (Python)\n\n```python\nimport math\n\ndef solution(n):\n    answer = math.sqrt(n)\n    if answer.is_integer():\n        answer = (int(answer) + 1)\n        return answer * answer\n    else:\n        return -1\n    return\n```\n","slug":"pgs-12934","published":1,"date":"2019-07-22T15:00:00.000Z","updated":"2020-05-05T08:00:03.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhe0052uv598hgc3vl5","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5MzQ=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12934\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>숫자의 제곱근을 찾은 다음 정수인지 아닌지 판별해서 계산하면 되는 문제</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(n)</span>:</span></span><br><span class=\"line\">    answer = math.sqrt(n)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> answer.is_integer():</span><br><span class=\"line\">        answer = (int(answer) + <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> answer * answer</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5MzQ=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12934\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>숫자의 제곱근을 찾은 다음 정수인지 아닌지 판별해서 계산하면 되는 문제</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(n)</span>:</span></span><br><span class=\"line\">    answer = math.sqrt(n)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> answer.is_integer():</span><br><span class=\"line\">        answer = (int(answer) + <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> answer * answer</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/10950] A+B - 3","_content":"> Baekjoon Online Judge - [10950](https://www.acmicpc.net/problem/10950)\n\n## Review\n\n* input, 반복문 연습\n\n## Code 1 (Python)\n\n* 반복 횟수만큼 for문 돌려서 입력받은 다음 직접 더함\n\n```py\nT = int(input())\nfor i in range(0, T):\n  A, B = input().split(' ')\n  print(int(A) + int(B))\n```\n\n## Code 2 (Python)\n\n* 반복 횟수만큼 for문 돌려서 입력받은 다음 map을 사용해 입력값을 전부 int로 변환시켜 리스트로 저장\n* 그리고 그 리스트의 합계를 sum 함수를 이용해서 구함\n* 입력값을 int로 변환시에 map을 사용하는 이유는, split의 결과를 매번 int로 변환하기 귀찮기 때문\n\n```py\nT = int(input())\nfor i in range(T):\n  answer = list(map(int,input().split()))\n  print(sum(answer))\n```\n\n## References\n\n* [코딩도장 - 파이썬 입력 값을 변수 두 개에 저장하기](https://dojang.io/mod/page/view.php?id=2179)\n","source":"_posts/2019-07-24-bj-10950.md","raw":"---\ntitle: \"[백준/10950] A+B - 3\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [10950](https://www.acmicpc.net/problem/10950)\n\n## Review\n\n* input, 반복문 연습\n\n## Code 1 (Python)\n\n* 반복 횟수만큼 for문 돌려서 입력받은 다음 직접 더함\n\n```py\nT = int(input())\nfor i in range(0, T):\n  A, B = input().split(' ')\n  print(int(A) + int(B))\n```\n\n## Code 2 (Python)\n\n* 반복 횟수만큼 for문 돌려서 입력받은 다음 map을 사용해 입력값을 전부 int로 변환시켜 리스트로 저장\n* 그리고 그 리스트의 합계를 sum 함수를 이용해서 구함\n* 입력값을 int로 변환시에 map을 사용하는 이유는, split의 결과를 매번 int로 변환하기 귀찮기 때문\n\n```py\nT = int(input())\nfor i in range(T):\n  answer = list(map(int,input().split()))\n  print(sum(answer))\n```\n\n## References\n\n* [코딩도장 - 파이썬 입력 값을 변수 두 개에 저장하기](https://dojang.io/mod/page/view.php?id=2179)\n","slug":"bj-10950","published":1,"date":"2019-07-23T15:00:00.000Z","updated":"2020-05-05T08:00:03.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhe0055uv590g43gplm","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDk1MA==\" title=\"https://www.acmicpc.net/problem/10950\">10950<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>input, 반복문 연습</li>\n</ul>\n<h2 id=\"Code-1-Python\"><a href=\"#Code-1-Python\" class=\"headerlink\" title=\"Code 1 (Python)\"></a>Code 1 (Python)</h2><ul>\n<li>반복 횟수만큼 for문 돌려서 입력받은 다음 직접 더함</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T = int(input())</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, T):</span><br><span class=\"line\">  A, B = input().split(<span class=\"string\">' '</span>)</span><br><span class=\"line\">  print(int(A) + int(B))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-2-Python\"><a href=\"#Code-2-Python\" class=\"headerlink\" title=\"Code 2 (Python)\"></a>Code 2 (Python)</h2><ul>\n<li>반복 횟수만큼 for문 돌려서 입력받은 다음 map을 사용해 입력값을 전부 int로 변환시켜 리스트로 저장</li>\n<li>그리고 그 리스트의 합계를 sum 함수를 이용해서 구함</li>\n<li>입력값을 int로 변환시에 map을 사용하는 이유는, split의 결과를 매번 int로 변환하기 귀찮기 때문</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T = int(input())</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(T):</span><br><span class=\"line\">  answer = list(map(int,input().split()))</span><br><span class=\"line\">  print(sum(answer))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2phbmcuaW8vbW9kL3BhZ2Uvdmlldy5waHA/aWQ9MjE3OQ==\" title=\"https://dojang.io/mod/page/view.php?id=2179\">코딩도장 - 파이썬 입력 값을 변수 두 개에 저장하기<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMDk1MA==\" title=\"https://www.acmicpc.net/problem/10950\">10950<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>input, 반복문 연습</li>\n</ul>\n<h2 id=\"Code-1-Python\"><a href=\"#Code-1-Python\" class=\"headerlink\" title=\"Code 1 (Python)\"></a>Code 1 (Python)</h2><ul>\n<li>반복 횟수만큼 for문 돌려서 입력받은 다음 직접 더함</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T = int(input())</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, T):</span><br><span class=\"line\">  A, B = input().split(<span class=\"string\">' '</span>)</span><br><span class=\"line\">  print(int(A) + int(B))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-2-Python\"><a href=\"#Code-2-Python\" class=\"headerlink\" title=\"Code 2 (Python)\"></a>Code 2 (Python)</h2><ul>\n<li>반복 횟수만큼 for문 돌려서 입력받은 다음 map을 사용해 입력값을 전부 int로 변환시켜 리스트로 저장</li>\n<li>그리고 그 리스트의 합계를 sum 함수를 이용해서 구함</li>\n<li>입력값을 int로 변환시에 map을 사용하는 이유는, split의 결과를 매번 int로 변환하기 귀찮기 때문</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">T = int(input())</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(T):</span><br><span class=\"line\">  answer = list(map(int,input().split()))</span><br><span class=\"line\">  print(sum(answer))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2phbmcuaW8vbW9kL3BhZ2Uvdmlldy5waHA/aWQ9MjE3OQ==\" title=\"https://dojang.io/mod/page/view.php?id=2179\">코딩도장 - 파이썬 입력 값을 변수 두 개에 저장하기<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n"},{"title":"[프로그래머스] 콜라츠 추측","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12943)\n\n## Review\n\n- 1일 경우를 처리해줘야 한다.\n- 1일 경우 0번 반복이니 0을 리턴하면 됨.\n\n## Code (Python)\n\n```python\ndef solution(num):\n    count = 0\n\n    while num != 1:\n        if num % 2 == 0:\n            num = num / 2\n        elif num % 2 == 1:\n            num = num * 3 + 1\n        count += 1\n\n        if count == 500:\n            return -1\n            break\n    return count\n```\n","source":"_posts/2019-07-26-pgs-12943.md","raw":"---\ntitle: \"[프로그래머스] 콜라츠 추측\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12943)\n\n## Review\n\n- 1일 경우를 처리해줘야 한다.\n- 1일 경우 0번 반복이니 0을 리턴하면 됨.\n\n## Code (Python)\n\n```python\ndef solution(num):\n    count = 0\n\n    while num != 1:\n        if num % 2 == 0:\n            num = num / 2\n        elif num % 2 == 1:\n            num = num * 3 + 1\n        count += 1\n\n        if count == 500:\n            return -1\n            break\n    return count\n```\n","slug":"pgs-12943","published":1,"date":"2019-07-25T15:00:00.000Z","updated":"2020-05-05T08:00:03.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhf0058uv5919t7hl9l","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5NDM=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12943\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>1일 경우를 처리해줘야 한다.</li>\n<li>1일 경우 0번 반복이니 0을 리턴하면 됨.</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(num)</span>:</span></span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> num != <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> num % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            num = num / <span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> num % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            num = num * <span class=\"number\">3</span> + <span class=\"number\">1</span></span><br><span class=\"line\">        count += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count == <span class=\"number\">500</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> count</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5NDM=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12943\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>1일 경우를 처리해줘야 한다.</li>\n<li>1일 경우 0번 반복이니 0을 리턴하면 됨.</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(num)</span>:</span></span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> num != <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> num % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            num = num / <span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> num % <span class=\"number\">2</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            num = num * <span class=\"number\">3</span> + <span class=\"number\">1</span></span><br><span class=\"line\">        count += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count == <span class=\"number\">500</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> count</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 하샤드 수","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12947)\n\n## Review\n\n- 입력받은 수를 자릿수대로 배열을 만들어 합계를 구한 다음 입력받은 수를 나누었음.\n\n## Code (Python)\n\n```python\ndef solution(x):\n    arr = list(map(int, list(str(x))))\n    return x % sum(arr) == 0\n```\n","source":"_posts/2019-07-26-pgs-12947.md","raw":"---\ntitle: \"[프로그래머스] 하샤드 수\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12947)\n\n## Review\n\n- 입력받은 수를 자릿수대로 배열을 만들어 합계를 구한 다음 입력받은 수를 나누었음.\n\n## Code (Python)\n\n```python\ndef solution(x):\n    arr = list(map(int, list(str(x))))\n    return x % sum(arr) == 0\n```\n","slug":"pgs-12947","published":1,"date":"2019-07-25T15:00:00.000Z","updated":"2020-05-05T08:00:03.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhg005buv599cyab70u","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5NDc=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12947\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>입력받은 수를 자릿수대로 배열을 만들어 합계를 구한 다음 입력받은 수를 나누었음.</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(x)</span>:</span></span><br><span class=\"line\">    arr = list(map(int, list(str(x))))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x % sum(arr) == <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5NDc=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12947\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Review\"><a href=\"#Review\" class=\"headerlink\" title=\"Review\"></a>Review</h2><ul>\n<li>입력받은 수를 자릿수대로 배열을 만들어 합계를 구한 다음 입력받은 수를 나누었음.</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(x)</span>:</span></span><br><span class=\"line\">    arr = list(map(int, list(str(x))))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x % sum(arr) == <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 행렬의 덧셈","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12950)\n\n## Code (Python)\n\n```python\ndef solution(arr1, arr2):\n    answer = []\n\n    for i in range(len(arr1)):\n        list = []\n        for j in range(len(arr1[0])):\n            list.append(arr1[i][j] + arr2[i][j])\n        answer.append(list)\n    return answer\n```\n","source":"_posts/2019-07-26-pgs-12950.md","raw":"---\ntitle: \"[프로그래머스] 행렬의 덧셈\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12950)\n\n## Code (Python)\n\n```python\ndef solution(arr1, arr2):\n    answer = []\n\n    for i in range(len(arr1)):\n        list = []\n        for j in range(len(arr1[0])):\n            list.append(arr1[i][j] + arr2[i][j])\n        answer.append(list)\n    return answer\n```\n","slug":"pgs-12950","published":1,"date":"2019-07-25T15:00:00.000Z","updated":"2020-05-05T08:00:03.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhg005euv59fisyg0uw","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5NTA=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12950\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(arr1, arr2)</span>:</span></span><br><span class=\"line\">    answer = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(arr1)):</span><br><span class=\"line\">        list = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(len(arr1[<span class=\"number\">0</span>])):</span><br><span class=\"line\">            list.append(arr1[i][j] + arr2[i][j])</span><br><span class=\"line\">        answer.append(list)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5NTA=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12950\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(arr1, arr2)</span>:</span></span><br><span class=\"line\">    answer = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(arr1)):</span><br><span class=\"line\">        list = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(len(arr1[<span class=\"number\">0</span>])):</span><br><span class=\"line\">            list.append(arr1[i][j] + arr2[i][j])</span><br><span class=\"line\">        answer.append(list)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] x만큼 간격이 있는 n개의 숫자","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12954)\n\n## Code (Python)\n\n```python\ndef solution(x, n):\n    answer = []\n    for i in range(n):\n        answer.append(((i + 1) * x))\n    return answer\n```\n","source":"_posts/2019-07-28-pgs-12950.md","raw":"---\ntitle: \"[프로그래머스] x만큼 간격이 있는 n개의 숫자\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12954)\n\n## Code (Python)\n\n```python\ndef solution(x, n):\n    answer = []\n    for i in range(n):\n        answer.append(((i + 1) * x))\n    return answer\n```\n","slug":"pgs-12950","published":1,"date":"2019-07-27T15:00:00.000Z","updated":"2020-05-05T08:00:03.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhh005huv59c9bj4whv","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5NTQ=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12954\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(x, n)</span>:</span></span><br><span class=\"line\">    answer = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">        answer.append(((i + <span class=\"number\">1</span>) * x))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5NTQ=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12954\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(x, n)</span>:</span></span><br><span class=\"line\">    answer = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(n):</span><br><span class=\"line\">        answer.append(((i + <span class=\"number\">1</span>) * x))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 예산","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12982)\n\n## Code (Python)\n\n- 리스트를 정렬한 다음, 합계가 예산보다 작을 경우 리스트 원소를 더함\n\n```python\ndef solution(d, budget):\n    d.sort()\n    sum = 0\n    answer = 0\n    for i in d:\n        sum += i\n        if sum <= budget:\n            answer += 1\n    return answer\n```\n\n## Code (Python)\n\n- 예산보다 합계가 클 경우 리스트의 원소를 pop\n- 그리고 그 리스트의 길이를 리턴\n\n```python\ndef solution(d, budget):\n    d.sort()\n    while budget < sum(d):\n        d.pop()\n    return len(d)\n```\n","source":"_posts/2019-07-28-pgs-12982.md","raw":"---\ntitle: \"[프로그래머스] 예산\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12982)\n\n## Code (Python)\n\n- 리스트를 정렬한 다음, 합계가 예산보다 작을 경우 리스트 원소를 더함\n\n```python\ndef solution(d, budget):\n    d.sort()\n    sum = 0\n    answer = 0\n    for i in d:\n        sum += i\n        if sum <= budget:\n            answer += 1\n    return answer\n```\n\n## Code (Python)\n\n- 예산보다 합계가 클 경우 리스트의 원소를 pop\n- 그리고 그 리스트의 길이를 리턴\n\n```python\ndef solution(d, budget):\n    d.sort()\n    while budget < sum(d):\n        d.pop()\n    return len(d)\n```\n","slug":"pgs-12982","published":1,"date":"2019-07-27T15:00:00.000Z","updated":"2020-05-05T08:00:03.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhi005kuv597xtwdky2","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5ODI=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12982\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>리스트를 정렬한 다음, 합계가 예산보다 작을 경우 리스트 원소를 더함</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(d, budget)</span>:</span></span><br><span class=\"line\">    d.sort()</span><br><span class=\"line\">    sum = <span class=\"number\">0</span></span><br><span class=\"line\">    answer = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> d:</span><br><span class=\"line\">        sum += i</span><br><span class=\"line\">        <span class=\"keyword\">if</span> sum &lt;= budget:</span><br><span class=\"line\">            answer += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-Python-1\"><a href=\"#Code-Python-1\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>예산보다 합계가 클 경우 리스트의 원소를 pop</li>\n<li>그리고 그 리스트의 길이를 리턴</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(d, budget)</span>:</span></span><br><span class=\"line\">    d.sort()</span><br><span class=\"line\">    <span class=\"keyword\">while</span> budget &lt; sum(d):</span><br><span class=\"line\">        d.pop()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> len(d)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5ODI=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12982\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>리스트를 정렬한 다음, 합계가 예산보다 작을 경우 리스트 원소를 더함</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(d, budget)</span>:</span></span><br><span class=\"line\">    d.sort()</span><br><span class=\"line\">    sum = <span class=\"number\">0</span></span><br><span class=\"line\">    answer = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> d:</span><br><span class=\"line\">        sum += i</span><br><span class=\"line\">        <span class=\"keyword\">if</span> sum &lt;= budget:</span><br><span class=\"line\">            answer += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-Python-1\"><a href=\"#Code-Python-1\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>예산보다 합계가 클 경우 리스트의 원소를 pop</li>\n<li>그리고 그 리스트의 길이를 리턴</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(d, budget)</span>:</span></span><br><span class=\"line\">    d.sort()</span><br><span class=\"line\">    <span class=\"keyword\">while</span> budget &lt; sum(d):</span><br><span class=\"line\">        d.pop()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> len(d)</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 완주하지 못한 선수","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/42576)\n\n## Code (Python)\n\n- for문과 remove 함수로 풀면 시간 초과 보는 문제\n- for문은 O(n), remove 함수는 O(n)으로 도합 O(n^2)\n- 문제에 시간 제한이 안 나와있는데 O(n^2)면 시간 초과가 나니까 줄여야 함\n- 그래서 집합을 썼는데 푸는 내내 마음에 안 들었다\n- 문제 낸 의도가 이게 아닐 텐데..\n\n```python\ndef solution(participant, completion):\n    s1 = set(participant)\n    s2 = set(completion)\n\n    if s1 == s2:\n        participant.sort()\n        completion.sort()\n        for i in range(len(completion)):\n            if participant[i] != completion[i]:\n                return participant[i]\n    else:\n        return list(s1 - s2)[0]\n```\n\n## Code (Python)\n\n- collections 모듈의 counter 사용. 컨테이너에 동일한 자료가 몇 개인지 파악하는데 사용한다.\n- Counter 객체는 이렇게 뺄 수가 있다고 함. 아무튼 결과적으로 값이 1인 것들만 남는다.\n\n```python\nimport collections\ndef solution(participant, completion):\n    answer = collections.Counter(participant) - collections.Counter(completion)\n    return list(answer.keys())[0]\n```\n\n## Code (Python)\n\n- 내가 구현하고 싶었던 형태\n- 그냥 for 문 밖에서 return하면 되는 거였구나 (멍청)\n\n```python\ndef solution(participant, completion):\n    participant.sort()\n    completion.sort()\n    for i in range(len(completion)):\n        if participant[i] != completion[i]:\n            return participant[i]\n    return participant[len(participant)-1]\n```\n","source":"_posts/2019-07-28-pgs-42576.md","raw":"---\ntitle: \"[프로그래머스] 완주하지 못한 선수\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/42576)\n\n## Code (Python)\n\n- for문과 remove 함수로 풀면 시간 초과 보는 문제\n- for문은 O(n), remove 함수는 O(n)으로 도합 O(n^2)\n- 문제에 시간 제한이 안 나와있는데 O(n^2)면 시간 초과가 나니까 줄여야 함\n- 그래서 집합을 썼는데 푸는 내내 마음에 안 들었다\n- 문제 낸 의도가 이게 아닐 텐데..\n\n```python\ndef solution(participant, completion):\n    s1 = set(participant)\n    s2 = set(completion)\n\n    if s1 == s2:\n        participant.sort()\n        completion.sort()\n        for i in range(len(completion)):\n            if participant[i] != completion[i]:\n                return participant[i]\n    else:\n        return list(s1 - s2)[0]\n```\n\n## Code (Python)\n\n- collections 모듈의 counter 사용. 컨테이너에 동일한 자료가 몇 개인지 파악하는데 사용한다.\n- Counter 객체는 이렇게 뺄 수가 있다고 함. 아무튼 결과적으로 값이 1인 것들만 남는다.\n\n```python\nimport collections\ndef solution(participant, completion):\n    answer = collections.Counter(participant) - collections.Counter(completion)\n    return list(answer.keys())[0]\n```\n\n## Code (Python)\n\n- 내가 구현하고 싶었던 형태\n- 그냥 for 문 밖에서 return하면 되는 거였구나 (멍청)\n\n```python\ndef solution(participant, completion):\n    participant.sort()\n    completion.sort()\n    for i in range(len(completion)):\n        if participant[i] != completion[i]:\n            return participant[i]\n    return participant[len(participant)-1]\n```\n","slug":"pgs-42576","published":1,"date":"2019-07-27T15:00:00.000Z","updated":"2020-05-05T08:00:03.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhi005nuv597vigghki","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI1NzY=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42576\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>for문과 remove 함수로 풀면 시간 초과 보는 문제</li>\n<li>for문은 O(n), remove 함수는 O(n)으로 도합 O(n^2)</li>\n<li>문제에 시간 제한이 안 나와있는데 O(n^2)면 시간 초과가 나니까 줄여야 함</li>\n<li>그래서 집합을 썼는데 푸는 내내 마음에 안 들었다</li>\n<li>문제 낸 의도가 이게 아닐 텐데..</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(participant, completion)</span>:</span></span><br><span class=\"line\">    s1 = set(participant)</span><br><span class=\"line\">    s2 = set(completion)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> s1 == s2:</span><br><span class=\"line\">        participant.sort()</span><br><span class=\"line\">        completion.sort()</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(completion)):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> participant[i] != completion[i]:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> participant[i]</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list(s1 - s2)[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-Python-1\"><a href=\"#Code-Python-1\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>collections 모듈의 counter 사용. 컨테이너에 동일한 자료가 몇 개인지 파악하는데 사용한다.</li>\n<li>Counter 객체는 이렇게 뺄 수가 있다고 함. 아무튼 결과적으로 값이 1인 것들만 남는다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> collections</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(participant, completion)</span>:</span></span><br><span class=\"line\">    answer = collections.Counter(participant) - collections.Counter(completion)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list(answer.keys())[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-Python-2\"><a href=\"#Code-Python-2\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>내가 구현하고 싶었던 형태</li>\n<li>그냥 for 문 밖에서 return하면 되는 거였구나 (멍청)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(participant, completion)</span>:</span></span><br><span class=\"line\">    participant.sort()</span><br><span class=\"line\">    completion.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(completion)):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> participant[i] != completion[i]:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> participant[i]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> participant[len(participant)<span class=\"number\">-1</span>]</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI1NzY=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42576\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>for문과 remove 함수로 풀면 시간 초과 보는 문제</li>\n<li>for문은 O(n), remove 함수는 O(n)으로 도합 O(n^2)</li>\n<li>문제에 시간 제한이 안 나와있는데 O(n^2)면 시간 초과가 나니까 줄여야 함</li>\n<li>그래서 집합을 썼는데 푸는 내내 마음에 안 들었다</li>\n<li>문제 낸 의도가 이게 아닐 텐데..</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(participant, completion)</span>:</span></span><br><span class=\"line\">    s1 = set(participant)</span><br><span class=\"line\">    s2 = set(completion)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> s1 == s2:</span><br><span class=\"line\">        participant.sort()</span><br><span class=\"line\">        completion.sort()</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(completion)):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> participant[i] != completion[i]:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> participant[i]</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list(s1 - s2)[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-Python-1\"><a href=\"#Code-Python-1\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>collections 모듈의 counter 사용. 컨테이너에 동일한 자료가 몇 개인지 파악하는데 사용한다.</li>\n<li>Counter 객체는 이렇게 뺄 수가 있다고 함. 아무튼 결과적으로 값이 1인 것들만 남는다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> collections</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(participant, completion)</span>:</span></span><br><span class=\"line\">    answer = collections.Counter(participant) - collections.Counter(completion)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list(answer.keys())[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-Python-2\"><a href=\"#Code-Python-2\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>내가 구현하고 싶었던 형태</li>\n<li>그냥 for 문 밖에서 return하면 되는 거였구나 (멍청)</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(participant, completion)</span>:</span></span><br><span class=\"line\">    participant.sort()</span><br><span class=\"line\">    completion.sort()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(completion)):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> participant[i] != completion[i]:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> participant[i]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> participant[len(participant)<span class=\"number\">-1</span>]</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 모의고사","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/42840)\n\n## Code1 (Python)\n\n- answer의 길이가 순환주기의 길이와 같으면 순환주기를 더하는 방식으로 함\n- 이렇게 하니까 쓸데없이 길어지는 것 같았는데...\n\n```python\ndef solution(answers):\n    person1 = [1,2,3,4,5]\n    person2 = [2,1,2,3,2,4,2,5]\n    person3 = [3,3,1,1,2,2,4,4,5,5]\n\n    result = [0, 0, 0]\n    winner = []\n\n    for index, value in enumerate(answers):\n        if len(answers) > len(person1):\n            person1 += person1\n        if len(answers) > len(person2):\n            person2 += person2\n        if len(answers) > len(person3):\n            person3 += person3\n\n        if value == person1[index]:\n            result[0] += 1\n        if value == person2[index]:\n            result[1] += 1\n        if value == person3[index]:\n            result[2] += 1\n\n    for index, value in enumerate(result):\n        if value == max(result):\n            winner.append(index + 1)\n\n    return winner\n```\n\n## Code2 (Python)\n\n- 이렇게 순환주기로 나눠주면 된다.\n\n```python\ndef solution(answers):\n    pattern1 = [1,2,3,4,5]\n    pattern2 = [2,1,2,3,2,4,2,5]\n    pattern3 = [3,3,1,1,2,2,4,4,5,5]\n    score = [0, 0, 0]\n    result = []\n\n    for idx, answer in enumerate(answers):\n        if answer == pattern1[idx%len(pattern1)]:\n            score[0] += 1\n        if answer == pattern2[idx%len(pattern2)]:\n            score[1] += 1\n        if answer == pattern3[idx%len(pattern3)]:\n            score[2] += 1\n\n    for idx, s in enumerate(score):\n        if s == max(score):\n            result.append(idx+1)\n\n    return result\n```\n","source":"_posts/2019-07-31-pgs-42840.md","raw":"---\ntitle: \"[프로그래머스] 모의고사\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/42840)\n\n## Code1 (Python)\n\n- answer의 길이가 순환주기의 길이와 같으면 순환주기를 더하는 방식으로 함\n- 이렇게 하니까 쓸데없이 길어지는 것 같았는데...\n\n```python\ndef solution(answers):\n    person1 = [1,2,3,4,5]\n    person2 = [2,1,2,3,2,4,2,5]\n    person3 = [3,3,1,1,2,2,4,4,5,5]\n\n    result = [0, 0, 0]\n    winner = []\n\n    for index, value in enumerate(answers):\n        if len(answers) > len(person1):\n            person1 += person1\n        if len(answers) > len(person2):\n            person2 += person2\n        if len(answers) > len(person3):\n            person3 += person3\n\n        if value == person1[index]:\n            result[0] += 1\n        if value == person2[index]:\n            result[1] += 1\n        if value == person3[index]:\n            result[2] += 1\n\n    for index, value in enumerate(result):\n        if value == max(result):\n            winner.append(index + 1)\n\n    return winner\n```\n\n## Code2 (Python)\n\n- 이렇게 순환주기로 나눠주면 된다.\n\n```python\ndef solution(answers):\n    pattern1 = [1,2,3,4,5]\n    pattern2 = [2,1,2,3,2,4,2,5]\n    pattern3 = [3,3,1,1,2,2,4,4,5,5]\n    score = [0, 0, 0]\n    result = []\n\n    for idx, answer in enumerate(answers):\n        if answer == pattern1[idx%len(pattern1)]:\n            score[0] += 1\n        if answer == pattern2[idx%len(pattern2)]:\n            score[1] += 1\n        if answer == pattern3[idx%len(pattern3)]:\n            score[2] += 1\n\n    for idx, s in enumerate(score):\n        if s == max(score):\n            result.append(idx+1)\n\n    return result\n```\n","slug":"pgs-42840","published":1,"date":"2019-07-30T15:00:00.000Z","updated":"2020-05-05T08:00:03.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhj005quv59bupef129","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI4NDA=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42840\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code1-Python\"><a href=\"#Code1-Python\" class=\"headerlink\" title=\"Code1 (Python)\"></a>Code1 (Python)</h2><ul>\n<li>answer의 길이가 순환주기의 길이와 같으면 순환주기를 더하는 방식으로 함</li>\n<li>이렇게 하니까 쓸데없이 길어지는 것 같았는데…</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(answers)</span>:</span></span><br><span class=\"line\">    person1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">    person2 = [<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">    person3 = [<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    result = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    winner = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> index, value <span class=\"keyword\">in</span> enumerate(answers):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> len(answers) &gt; len(person1):</span><br><span class=\"line\">            person1 += person1</span><br><span class=\"line\">        <span class=\"keyword\">if</span> len(answers) &gt; len(person2):</span><br><span class=\"line\">            person2 += person2</span><br><span class=\"line\">        <span class=\"keyword\">if</span> len(answers) &gt; len(person3):</span><br><span class=\"line\">            person3 += person3</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> value == person1[index]:</span><br><span class=\"line\">            result[<span class=\"number\">0</span>] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> value == person2[index]:</span><br><span class=\"line\">            result[<span class=\"number\">1</span>] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> value == person3[index]:</span><br><span class=\"line\">            result[<span class=\"number\">2</span>] += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> index, value <span class=\"keyword\">in</span> enumerate(result):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> value == max(result):</span><br><span class=\"line\">            winner.append(index + <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> winner</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code2-Python\"><a href=\"#Code2-Python\" class=\"headerlink\" title=\"Code2 (Python)\"></a>Code2 (Python)</h2><ul>\n<li>이렇게 순환주기로 나눠주면 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(answers)</span>:</span></span><br><span class=\"line\">    pattern1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">    pattern2 = [<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">    pattern3 = [<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">    score = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    result = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> idx, answer <span class=\"keyword\">in</span> enumerate(answers):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> answer == pattern1[idx%len(pattern1)]:</span><br><span class=\"line\">            score[<span class=\"number\">0</span>] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> answer == pattern2[idx%len(pattern2)]:</span><br><span class=\"line\">            score[<span class=\"number\">1</span>] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> answer == pattern3[idx%len(pattern3)]:</span><br><span class=\"line\">            score[<span class=\"number\">2</span>] += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> idx, s <span class=\"keyword\">in</span> enumerate(score):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> s == max(score):</span><br><span class=\"line\">            result.append(idx+<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI4NDA=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42840\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code1-Python\"><a href=\"#Code1-Python\" class=\"headerlink\" title=\"Code1 (Python)\"></a>Code1 (Python)</h2><ul>\n<li>answer의 길이가 순환주기의 길이와 같으면 순환주기를 더하는 방식으로 함</li>\n<li>이렇게 하니까 쓸데없이 길어지는 것 같았는데…</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(answers)</span>:</span></span><br><span class=\"line\">    person1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">    person2 = [<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">    person3 = [<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    result = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    winner = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> index, value <span class=\"keyword\">in</span> enumerate(answers):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> len(answers) &gt; len(person1):</span><br><span class=\"line\">            person1 += person1</span><br><span class=\"line\">        <span class=\"keyword\">if</span> len(answers) &gt; len(person2):</span><br><span class=\"line\">            person2 += person2</span><br><span class=\"line\">        <span class=\"keyword\">if</span> len(answers) &gt; len(person3):</span><br><span class=\"line\">            person3 += person3</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> value == person1[index]:</span><br><span class=\"line\">            result[<span class=\"number\">0</span>] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> value == person2[index]:</span><br><span class=\"line\">            result[<span class=\"number\">1</span>] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> value == person3[index]:</span><br><span class=\"line\">            result[<span class=\"number\">2</span>] += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> index, value <span class=\"keyword\">in</span> enumerate(result):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> value == max(result):</span><br><span class=\"line\">            winner.append(index + <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> winner</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code2-Python\"><a href=\"#Code2-Python\" class=\"headerlink\" title=\"Code2 (Python)\"></a>Code2 (Python)</h2><ul>\n<li>이렇게 순환주기로 나눠주면 된다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(answers)</span>:</span></span><br><span class=\"line\">    pattern1 = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">    pattern2 = [<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">    pattern3 = [<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\">    score = [<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">    result = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> idx, answer <span class=\"keyword\">in</span> enumerate(answers):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> answer == pattern1[idx%len(pattern1)]:</span><br><span class=\"line\">            score[<span class=\"number\">0</span>] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> answer == pattern2[idx%len(pattern2)]:</span><br><span class=\"line\">            score[<span class=\"number\">1</span>] += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> answer == pattern3[idx%len(pattern3)]:</span><br><span class=\"line\">            score[<span class=\"number\">2</span>] += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> idx, s <span class=\"keyword\">in</span> enumerate(score):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> s == max(score):</span><br><span class=\"line\">            result.append(idx+<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/7568] 덩치","_content":"> Baekjoon Online Judge - [7568](https://www.acmicpc.net/problem/7568)\n\n## Code (Python)\n\n* 리스트 정렬해서 풀다가 이건 아니다 싶어서 전수 비교\n* 음 그런데 다른 분이 짠 코드 보니까 for문을 리스트 길이로 돌린 게 뻘짓\n\n```py\nN = int(input())\ndungchi_list = []\nanswer = []\n\nfor i in range(N):\n    dungchi_list.append(list(map(int, input().split())))\n\nfor i in range(len(dungchi_list)): # 현재 덩치\n    count = 1\n    for j in range(len(dungchi_list)): # 비교할 덩치들\n        if dungchi_list[i][0] < dungchi_list[j][0]: # 몸무게도 크고\n            if dungchi_list[i][1] < dungchi_list[j][1]: # 키도 크다면\n                count = count + 1\n    answer.append(count)\n\nprint(' '.join(map(str, answer)))\n```\n\n## References 1 [(출처)](https://claude-u.tistory.com/122)\n\n```python\nnum_student = int(input())\nstudent_list = []\n\nfor _ in range(num_student):\n    weight, height = map(int, input().split())\n    student_list.append((weight, height))\n\nfor i in student_list:\n    rank = 1\n    for j in student_list:\n        if i[0] < j[0] and i[1] < j[1]:\n                rank += 1\n    print(rank, end = \" \")\n```\n","source":"_posts/2019-08-04-boj-7568.md","raw":"---\ntitle: \"[백준/7568] 덩치\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [7568](https://www.acmicpc.net/problem/7568)\n\n## Code (Python)\n\n* 리스트 정렬해서 풀다가 이건 아니다 싶어서 전수 비교\n* 음 그런데 다른 분이 짠 코드 보니까 for문을 리스트 길이로 돌린 게 뻘짓\n\n```py\nN = int(input())\ndungchi_list = []\nanswer = []\n\nfor i in range(N):\n    dungchi_list.append(list(map(int, input().split())))\n\nfor i in range(len(dungchi_list)): # 현재 덩치\n    count = 1\n    for j in range(len(dungchi_list)): # 비교할 덩치들\n        if dungchi_list[i][0] < dungchi_list[j][0]: # 몸무게도 크고\n            if dungchi_list[i][1] < dungchi_list[j][1]: # 키도 크다면\n                count = count + 1\n    answer.append(count)\n\nprint(' '.join(map(str, answer)))\n```\n\n## References 1 [(출처)](https://claude-u.tistory.com/122)\n\n```python\nnum_student = int(input())\nstudent_list = []\n\nfor _ in range(num_student):\n    weight, height = map(int, input().split())\n    student_list.append((weight, height))\n\nfor i in student_list:\n    rank = 1\n    for j in student_list:\n        if i[0] < j[0] and i[1] < j[1]:\n                rank += 1\n    print(rank, end = \" \")\n```\n","slug":"boj-7568","published":1,"date":"2019-08-03T15:00:00.000Z","updated":"2020-05-05T08:00:03.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhk005tuv59fik52h03","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS83NTY4\" title=\"https://www.acmicpc.net/problem/7568\">7568<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>리스트 정렬해서 풀다가 이건 아니다 싶어서 전수 비교</li>\n<li>음 그런데 다른 분이 짠 코드 보니까 for문을 리스트 길이로 돌린 게 뻘짓</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">N = int(input())</span><br><span class=\"line\">dungchi_list = []</span><br><span class=\"line\">answer = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(N):</span><br><span class=\"line\">    dungchi_list.append(list(map(int, input().split())))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(dungchi_list)): <span class=\"comment\"># 현재 덩치</span></span><br><span class=\"line\">    count = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(len(dungchi_list)): <span class=\"comment\"># 비교할 덩치들</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> dungchi_list[i][<span class=\"number\">0</span>] &lt; dungchi_list[j][<span class=\"number\">0</span>]: <span class=\"comment\"># 몸무게도 크고</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> dungchi_list[i][<span class=\"number\">1</span>] &lt; dungchi_list[j][<span class=\"number\">1</span>]: <span class=\"comment\"># 키도 크다면</span></span><br><span class=\"line\">                count = count + <span class=\"number\">1</span></span><br><span class=\"line\">    answer.append(count)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">' '</span>.join(map(str, answer)))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"References-1-출처\"><a href=\"#References-1-출처\" class=\"headerlink\" title=\"References 1 (출처)\"></a>References 1 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGF1ZGUtdS50aXN0b3J5LmNvbS8xMjI=\" title=\"https://claude-u.tistory.com/122\">(출처)<i class=\"fa fa-external-link\"></i></span></h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_student = int(input())</span><br><span class=\"line\">student_list = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(num_student):</span><br><span class=\"line\">    weight, height = map(int, input().split())</span><br><span class=\"line\">    student_list.append((weight, height))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> student_list:</span><br><span class=\"line\">    rank = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> student_list:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i[<span class=\"number\">0</span>] &lt; j[<span class=\"number\">0</span>] <span class=\"keyword\">and</span> i[<span class=\"number\">1</span>] &lt; j[<span class=\"number\">1</span>]:</span><br><span class=\"line\">                rank += <span class=\"number\">1</span></span><br><span class=\"line\">    print(rank, end = <span class=\"string\">\" \"</span>)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS83NTY4\" title=\"https://www.acmicpc.net/problem/7568\">7568<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>리스트 정렬해서 풀다가 이건 아니다 싶어서 전수 비교</li>\n<li>음 그런데 다른 분이 짠 코드 보니까 for문을 리스트 길이로 돌린 게 뻘짓</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">N = int(input())</span><br><span class=\"line\">dungchi_list = []</span><br><span class=\"line\">answer = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(N):</span><br><span class=\"line\">    dungchi_list.append(list(map(int, input().split())))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(dungchi_list)): <span class=\"comment\"># 현재 덩치</span></span><br><span class=\"line\">    count = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(len(dungchi_list)): <span class=\"comment\"># 비교할 덩치들</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> dungchi_list[i][<span class=\"number\">0</span>] &lt; dungchi_list[j][<span class=\"number\">0</span>]: <span class=\"comment\"># 몸무게도 크고</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> dungchi_list[i][<span class=\"number\">1</span>] &lt; dungchi_list[j][<span class=\"number\">1</span>]: <span class=\"comment\"># 키도 크다면</span></span><br><span class=\"line\">                count = count + <span class=\"number\">1</span></span><br><span class=\"line\">    answer.append(count)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">' '</span>.join(map(str, answer)))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"References-1-출처\"><a href=\"#References-1-출처\" class=\"headerlink\" title=\"References 1 (출처)\"></a>References 1 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGF1ZGUtdS50aXN0b3J5LmNvbS8xMjI=\" title=\"https://claude-u.tistory.com/122\">(출처)<i class=\"fa fa-external-link\"></i></span></h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_student = int(input())</span><br><span class=\"line\">student_list = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(num_student):</span><br><span class=\"line\">    weight, height = map(int, input().split())</span><br><span class=\"line\">    student_list.append((weight, height))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> student_list:</span><br><span class=\"line\">    rank = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> student_list:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i[<span class=\"number\">0</span>] &lt; j[<span class=\"number\">0</span>] <span class=\"keyword\">and</span> i[<span class=\"number\">1</span>] &lt; j[<span class=\"number\">1</span>]:</span><br><span class=\"line\">                rank += <span class=\"number\">1</span></span><br><span class=\"line\">    print(rank, end = <span class=\"string\">\" \"</span>)</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/2231] 분해합","_content":"> Baekjoon Online Judge - [2231](https://www.acmicpc.net/problem/2231)\n\n## Code (Python)\n\n* 예외처리를 잘못해서 두 번이나 틀린 문제..~ 분해합이 없을 경우의 처리를 해줘야 한다.\n* 어차피 분해합의 생성자는 분해합보다 작다. 고로 입력값(N)까지만 비교하면 됨.\n* 입력값(N)까지 비교했음에도 분해합을 찾지 못하고, `i == N`이 되면 그냥 0을 출력하면 된다.\n* 문제 이해 잘못해서 슬랙방에 이상한 질문이나 남기고... 아진짜닉변하고싶다...\n\n```py\nN = int(input())\n\nfor i in range(1, N + 1):\n    hap = 0\n    number = i\n    while number != 0:\n        rest = int(number % 10)\n        hap += rest\n        number = int(number/10)\n    hap += i\n    if hap == N:\n        print(i)\n        break\n    if i == N:\n        print(0)\n```\n\n## References 1 [(출처)](https://claude-u.tistory.com/116)\n\n* 자릿수 하나하나 배열에 넣어서 더함\n\n```python\nnum = int(input())\nanswer = 0\n\nfor i in range(1, num+1):\n    coef_num_list = list(map(int, str(i)))\n    answer = i + sum(coef_num_list)\n\n    if answer == num:\n        print(i)\n        break\n\n    if i == num:\n        print(0)\n```\n","source":"_posts/2019-08-06-boj-2231.md","raw":"---\ntitle: \"[백준/2231] 분해합\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [2231](https://www.acmicpc.net/problem/2231)\n\n## Code (Python)\n\n* 예외처리를 잘못해서 두 번이나 틀린 문제..~ 분해합이 없을 경우의 처리를 해줘야 한다.\n* 어차피 분해합의 생성자는 분해합보다 작다. 고로 입력값(N)까지만 비교하면 됨.\n* 입력값(N)까지 비교했음에도 분해합을 찾지 못하고, `i == N`이 되면 그냥 0을 출력하면 된다.\n* 문제 이해 잘못해서 슬랙방에 이상한 질문이나 남기고... 아진짜닉변하고싶다...\n\n```py\nN = int(input())\n\nfor i in range(1, N + 1):\n    hap = 0\n    number = i\n    while number != 0:\n        rest = int(number % 10)\n        hap += rest\n        number = int(number/10)\n    hap += i\n    if hap == N:\n        print(i)\n        break\n    if i == N:\n        print(0)\n```\n\n## References 1 [(출처)](https://claude-u.tistory.com/116)\n\n* 자릿수 하나하나 배열에 넣어서 더함\n\n```python\nnum = int(input())\nanswer = 0\n\nfor i in range(1, num+1):\n    coef_num_list = list(map(int, str(i)))\n    answer = i + sum(coef_num_list)\n\n    if answer == num:\n        print(i)\n        break\n\n    if i == num:\n        print(0)\n```\n","slug":"boj-2231","published":1,"date":"2019-08-05T15:00:00.000Z","updated":"2020-05-05T08:00:03.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhk005wuv5927d9ervu","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yMjMx\" title=\"https://www.acmicpc.net/problem/2231\">2231<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>예외처리를 잘못해서 두 번이나 틀린 문제..~ 분해합이 없을 경우의 처리를 해줘야 한다.</li>\n<li>어차피 분해합의 생성자는 분해합보다 작다. 고로 입력값(N)까지만 비교하면 됨.</li>\n<li>입력값(N)까지 비교했음에도 분해합을 찾지 못하고, <code>i == N</code>이 되면 그냥 0을 출력하면 된다.</li>\n<li>문제 이해 잘못해서 슬랙방에 이상한 질문이나 남기고… 아진짜닉변하고싶다…</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">N = int(input())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, N + <span class=\"number\">1</span>):</span><br><span class=\"line\">    hap = <span class=\"number\">0</span></span><br><span class=\"line\">    number = i</span><br><span class=\"line\">    <span class=\"keyword\">while</span> number != <span class=\"number\">0</span>:</span><br><span class=\"line\">        rest = int(number % <span class=\"number\">10</span>)</span><br><span class=\"line\">        hap += rest</span><br><span class=\"line\">        number = int(number/<span class=\"number\">10</span>)</span><br><span class=\"line\">    hap += i</span><br><span class=\"line\">    <span class=\"keyword\">if</span> hap == N:</span><br><span class=\"line\">        print(i)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> i == N:</span><br><span class=\"line\">        print(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"References-1-출처\"><a href=\"#References-1-출처\" class=\"headerlink\" title=\"References 1 (출처)\"></a>References 1 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGF1ZGUtdS50aXN0b3J5LmNvbS8xMTY=\" title=\"https://claude-u.tistory.com/116\">(출처)<i class=\"fa fa-external-link\"></i></span></h2><ul>\n<li>자릿수 하나하나 배열에 넣어서 더함</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num = int(input())</span><br><span class=\"line\">answer = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, num+<span class=\"number\">1</span>):</span><br><span class=\"line\">    coef_num_list = list(map(int, str(i)))</span><br><span class=\"line\">    answer = i + sum(coef_num_list)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> answer == num:</span><br><span class=\"line\">        print(i)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> i == num:</span><br><span class=\"line\">        print(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yMjMx\" title=\"https://www.acmicpc.net/problem/2231\">2231<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>예외처리를 잘못해서 두 번이나 틀린 문제..~ 분해합이 없을 경우의 처리를 해줘야 한다.</li>\n<li>어차피 분해합의 생성자는 분해합보다 작다. 고로 입력값(N)까지만 비교하면 됨.</li>\n<li>입력값(N)까지 비교했음에도 분해합을 찾지 못하고, <code>i == N</code>이 되면 그냥 0을 출력하면 된다.</li>\n<li>문제 이해 잘못해서 슬랙방에 이상한 질문이나 남기고… 아진짜닉변하고싶다…</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">N = int(input())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, N + <span class=\"number\">1</span>):</span><br><span class=\"line\">    hap = <span class=\"number\">0</span></span><br><span class=\"line\">    number = i</span><br><span class=\"line\">    <span class=\"keyword\">while</span> number != <span class=\"number\">0</span>:</span><br><span class=\"line\">        rest = int(number % <span class=\"number\">10</span>)</span><br><span class=\"line\">        hap += rest</span><br><span class=\"line\">        number = int(number/<span class=\"number\">10</span>)</span><br><span class=\"line\">    hap += i</span><br><span class=\"line\">    <span class=\"keyword\">if</span> hap == N:</span><br><span class=\"line\">        print(i)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> i == N:</span><br><span class=\"line\">        print(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"References-1-출처\"><a href=\"#References-1-출처\" class=\"headerlink\" title=\"References 1 (출처)\"></a>References 1 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbGF1ZGUtdS50aXN0b3J5LmNvbS8xMTY=\" title=\"https://claude-u.tistory.com/116\">(출처)<i class=\"fa fa-external-link\"></i></span></h2><ul>\n<li>자릿수 하나하나 배열에 넣어서 더함</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num = int(input())</span><br><span class=\"line\">answer = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, num+<span class=\"number\">1</span>):</span><br><span class=\"line\">    coef_num_list = list(map(int, str(i)))</span><br><span class=\"line\">    answer = i + sum(coef_num_list)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> answer == num:</span><br><span class=\"line\">        print(i)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> i == num:</span><br><span class=\"line\">        print(<span class=\"number\">0</span>)</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/4673] 셀프 넘버","_content":"> Baekjoon Online Judge - [4673](https://www.acmicpc.net/problem/4673)\n\n## Code (Python)\n\n* [분해합](https://www.acmicpc.net/problem/2231)과 비슷한 문제.\n* 생성자가 없는 숫자를 전부 출력하면 된다.\n* 이래도 되나 싶었는데, 그냥 리스트에 다 집어넣고 집합 연산으로 풀어서 AC가 나왔다.\n\n```py\nnumber_list = []\nhap_list = []\n\nfor i in range(1, 10001):\n    hap = 0\n    number = i\n    number_list.append(i)\n\n    while number != 0:\n        rest = int(number % 10)\n        hap += rest\n        number = int(number/10)\n    hap += i\n    hap_list.append(hap)\n\nnumber_array = sorted(set(number_list) - set(hap_list))\nfor i in number_array:\n    print(i)\n```\n\n## References 1 [(출처)](https://this-programmer.com/entry/%EB%B0%B1%EC%A4%804673%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%85%80%ED%94%84-%EB%84%98%EB%B2%84)\n\n* 음. 굳이 리스트를 안 써도 되는구나. 집합 공부해야겠다.\n* 자릿수를 더하는 방식이 신기하다. 수를 string으로 형변환하고 for문으로 자릿수를 전부 더해버렸다. 지난번 분해합에서 봤던 레퍼펀스랑 비슷한데 다른 느낌.\n\n```python\nnatural_number_set = set(range(1, 10001))\ngenerated_number_set= set()\n\nfor i in range(1, 10001):\n    for j in str(i):\n        i += int(j)\n    generated_number_set.add(i)\n\nself_number_set = natural_number_set - generated_number_set\n\nfor i in sorted(self_number_set):\n    print(i)\n```\n","source":"_posts/2019-08-06-boj-4673.md","raw":"---\ntitle: \"[백준/4673] 셀프 넘버\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [4673](https://www.acmicpc.net/problem/4673)\n\n## Code (Python)\n\n* [분해합](https://www.acmicpc.net/problem/2231)과 비슷한 문제.\n* 생성자가 없는 숫자를 전부 출력하면 된다.\n* 이래도 되나 싶었는데, 그냥 리스트에 다 집어넣고 집합 연산으로 풀어서 AC가 나왔다.\n\n```py\nnumber_list = []\nhap_list = []\n\nfor i in range(1, 10001):\n    hap = 0\n    number = i\n    number_list.append(i)\n\n    while number != 0:\n        rest = int(number % 10)\n        hap += rest\n        number = int(number/10)\n    hap += i\n    hap_list.append(hap)\n\nnumber_array = sorted(set(number_list) - set(hap_list))\nfor i in number_array:\n    print(i)\n```\n\n## References 1 [(출처)](https://this-programmer.com/entry/%EB%B0%B1%EC%A4%804673%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%85%80%ED%94%84-%EB%84%98%EB%B2%84)\n\n* 음. 굳이 리스트를 안 써도 되는구나. 집합 공부해야겠다.\n* 자릿수를 더하는 방식이 신기하다. 수를 string으로 형변환하고 for문으로 자릿수를 전부 더해버렸다. 지난번 분해합에서 봤던 레퍼펀스랑 비슷한데 다른 느낌.\n\n```python\nnatural_number_set = set(range(1, 10001))\ngenerated_number_set= set()\n\nfor i in range(1, 10001):\n    for j in str(i):\n        i += int(j)\n    generated_number_set.add(i)\n\nself_number_set = natural_number_set - generated_number_set\n\nfor i in sorted(self_number_set):\n    print(i)\n```\n","slug":"boj-4673","published":1,"date":"2019-08-05T15:00:00.000Z","updated":"2020-05-05T08:00:03.861Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhl005zuv598yvj4gh2","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS80Njcz\" title=\"https://www.acmicpc.net/problem/4673\">4673<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yMjMx\" title=\"https://www.acmicpc.net/problem/2231\">분해합<i class=\"fa fa-external-link\"></i></span>과 비슷한 문제.</li>\n<li>생성자가 없는 숫자를 전부 출력하면 된다.</li>\n<li>이래도 되나 싶었는데, 그냥 리스트에 다 집어넣고 집합 연산으로 풀어서 AC가 나왔다.</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">number_list = []</span><br><span class=\"line\">hap_list = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">10001</span>):</span><br><span class=\"line\">    hap = <span class=\"number\">0</span></span><br><span class=\"line\">    number = i</span><br><span class=\"line\">    number_list.append(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> number != <span class=\"number\">0</span>:</span><br><span class=\"line\">        rest = int(number % <span class=\"number\">10</span>)</span><br><span class=\"line\">        hap += rest</span><br><span class=\"line\">        number = int(number/<span class=\"number\">10</span>)</span><br><span class=\"line\">    hap += i</span><br><span class=\"line\">    hap_list.append(hap)</span><br><span class=\"line\"></span><br><span class=\"line\">number_array = sorted(set(number_list) - set(hap_list))</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> number_array:</span><br><span class=\"line\">    print(i)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"References-1-출처\"><a href=\"#References-1-출처\" class=\"headerlink\" title=\"References 1 (출처)\"></a>References 1 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGlzLXByb2dyYW1tZXIuY29tL2VudHJ5LyVFQiVCMCVCMSVFQyVBNCU4MDQ2NzMlRUQlOEMlOEMlRUMlOUQlQjQlRUMlOEQlQUMtJUVDJTg1JTgwJUVEJTk0JTg0LSVFQiU4NCU5OCVFQiVCMiU4NA==\" title=\"https://this-programmer.com/entry/%EB%B0%B1%EC%A4%804673%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%85%80%ED%94%84-%EB%84%98%EB%B2%84\">(출처)<i class=\"fa fa-external-link\"></i></span></h2><ul>\n<li>음. 굳이 리스트를 안 써도 되는구나. 집합 공부해야겠다.</li>\n<li>자릿수를 더하는 방식이 신기하다. 수를 string으로 형변환하고 for문으로 자릿수를 전부 더해버렸다. 지난번 분해합에서 봤던 레퍼펀스랑 비슷한데 다른 느낌.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">natural_number_set = set(range(<span class=\"number\">1</span>, <span class=\"number\">10001</span>))</span><br><span class=\"line\">generated_number_set= set()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">10001</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> str(i):</span><br><span class=\"line\">        i += int(j)</span><br><span class=\"line\">    generated_number_set.add(i)</span><br><span class=\"line\"></span><br><span class=\"line\">self_number_set = natural_number_set - generated_number_set</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> sorted(self_number_set):</span><br><span class=\"line\">    print(i)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS80Njcz\" title=\"https://www.acmicpc.net/problem/4673\">4673<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yMjMx\" title=\"https://www.acmicpc.net/problem/2231\">분해합<i class=\"fa fa-external-link\"></i></span>과 비슷한 문제.</li>\n<li>생성자가 없는 숫자를 전부 출력하면 된다.</li>\n<li>이래도 되나 싶었는데, 그냥 리스트에 다 집어넣고 집합 연산으로 풀어서 AC가 나왔다.</li>\n</ul>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">number_list = []</span><br><span class=\"line\">hap_list = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">10001</span>):</span><br><span class=\"line\">    hap = <span class=\"number\">0</span></span><br><span class=\"line\">    number = i</span><br><span class=\"line\">    number_list.append(i)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> number != <span class=\"number\">0</span>:</span><br><span class=\"line\">        rest = int(number % <span class=\"number\">10</span>)</span><br><span class=\"line\">        hap += rest</span><br><span class=\"line\">        number = int(number/<span class=\"number\">10</span>)</span><br><span class=\"line\">    hap += i</span><br><span class=\"line\">    hap_list.append(hap)</span><br><span class=\"line\"></span><br><span class=\"line\">number_array = sorted(set(number_list) - set(hap_list))</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> number_array:</span><br><span class=\"line\">    print(i)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"References-1-출처\"><a href=\"#References-1-출처\" class=\"headerlink\" title=\"References 1 (출처)\"></a>References 1 <span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGlzLXByb2dyYW1tZXIuY29tL2VudHJ5LyVFQiVCMCVCMSVFQyVBNCU4MDQ2NzMlRUQlOEMlOEMlRUMlOUQlQjQlRUMlOEQlQUMtJUVDJTg1JTgwJUVEJTk0JTg0LSVFQiU4NCU5OCVFQiVCMiU4NA==\" title=\"https://this-programmer.com/entry/%EB%B0%B1%EC%A4%804673%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%85%80%ED%94%84-%EB%84%98%EB%B2%84\">(출처)<i class=\"fa fa-external-link\"></i></span></h2><ul>\n<li>음. 굳이 리스트를 안 써도 되는구나. 집합 공부해야겠다.</li>\n<li>자릿수를 더하는 방식이 신기하다. 수를 string으로 형변환하고 for문으로 자릿수를 전부 더해버렸다. 지난번 분해합에서 봤던 레퍼펀스랑 비슷한데 다른 느낌.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">natural_number_set = set(range(<span class=\"number\">1</span>, <span class=\"number\">10001</span>))</span><br><span class=\"line\">generated_number_set= set()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">10001</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> str(i):</span><br><span class=\"line\">        i += int(j)</span><br><span class=\"line\">    generated_number_set.add(i)</span><br><span class=\"line\"></span><br><span class=\"line\">self_number_set = natural_number_set - generated_number_set</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> sorted(self_number_set):</span><br><span class=\"line\">    print(i)</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 소수 찾기","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/42839)\n\n## Code (Python)\n\n- 완전탐색(Brute-Force)\n- itertools 없었으면 절대 못 풀었을 문제다. 그저 갓이썬...\n- `itertools.permutation`로 모든 숫자의 조합을 구해 리스트에 저장.\n- 숫자 조합 리스트의 최대값까지의 소수를 찾는다. 소수는 에라토스테네스의 체를 활용해서 찾으면 된다.\n- 소수 리스트와 숫자 조합 리스트의 합집합을 구하고 길이를 리턴한다.\n- 다음에는 itertools 없이 풀어봐야겠다.\n\n```python\nimport itertools\n\ndef sieve(n):\n    num=set(range(2,n+1))\n\n    for i in range(2,n+1):\n        if i in num:\n            num-=set(range(2*i,n+1,i))\n    return num\n\ndef solution(numbers):\n    numbers_list = []\n    for i in range(1, len(numbers) + 1):\n        numbers_list += list(map(''.join, itertools.permutations(numbers,i)))\n\n    numbers_list = set(map(int, numbers_list))\n    prime_list = sieve(max(numbers_list))\n\n    return len(numbers_list & prime_list)\n```\n\n## References\n\n- [순열과 조합 - combinations, permutations](https://programmers.co.kr/learn/courses/4008/lessons/12836)\n","source":"_posts/2019-08-08-pgs-42839.md","raw":"---\ntitle: \"[프로그래머스] 소수 찾기\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/42839)\n\n## Code (Python)\n\n- 완전탐색(Brute-Force)\n- itertools 없었으면 절대 못 풀었을 문제다. 그저 갓이썬...\n- `itertools.permutation`로 모든 숫자의 조합을 구해 리스트에 저장.\n- 숫자 조합 리스트의 최대값까지의 소수를 찾는다. 소수는 에라토스테네스의 체를 활용해서 찾으면 된다.\n- 소수 리스트와 숫자 조합 리스트의 합집합을 구하고 길이를 리턴한다.\n- 다음에는 itertools 없이 풀어봐야겠다.\n\n```python\nimport itertools\n\ndef sieve(n):\n    num=set(range(2,n+1))\n\n    for i in range(2,n+1):\n        if i in num:\n            num-=set(range(2*i,n+1,i))\n    return num\n\ndef solution(numbers):\n    numbers_list = []\n    for i in range(1, len(numbers) + 1):\n        numbers_list += list(map(''.join, itertools.permutations(numbers,i)))\n\n    numbers_list = set(map(int, numbers_list))\n    prime_list = sieve(max(numbers_list))\n\n    return len(numbers_list & prime_list)\n```\n\n## References\n\n- [순열과 조합 - combinations, permutations](https://programmers.co.kr/learn/courses/4008/lessons/12836)\n","slug":"pgs-42839","published":1,"date":"2019-08-07T15:00:00.000Z","updated":"2020-05-05T08:00:03.861Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhl0062uv59b020hho7","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI4Mzk=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42839\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>완전탐색(Brute-Force)</li>\n<li>itertools 없었으면 절대 못 풀었을 문제다. 그저 갓이썬…</li>\n<li><code>itertools.permutation</code>로 모든 숫자의 조합을 구해 리스트에 저장.</li>\n<li>숫자 조합 리스트의 최대값까지의 소수를 찾는다. 소수는 에라토스테네스의 체를 활용해서 찾으면 된다.</li>\n<li>소수 리스트와 숫자 조합 리스트의 합집합을 구하고 길이를 리턴한다.</li>\n<li>다음에는 itertools 없이 풀어봐야겠다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> itertools</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sieve</span><span class=\"params\">(n)</span>:</span></span><br><span class=\"line\">    num=set(range(<span class=\"number\">2</span>,n+<span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">2</span>,n+<span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i <span class=\"keyword\">in</span> num:</span><br><span class=\"line\">            num-=set(range(<span class=\"number\">2</span>*i,n+<span class=\"number\">1</span>,i))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(numbers)</span>:</span></span><br><span class=\"line\">    numbers_list = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, len(numbers) + <span class=\"number\">1</span>):</span><br><span class=\"line\">        numbers_list += list(map(<span class=\"string\">''</span>.join, itertools.permutations(numbers,i)))</span><br><span class=\"line\"></span><br><span class=\"line\">    numbers_list = set(map(int, numbers_list))</span><br><span class=\"line\">    prime_list = sieve(max(numbers_list))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> len(numbers_list &amp; prime_list)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzQwMDgvbGVzc29ucy8xMjgzNg==\" title=\"https://programmers.co.kr/learn/courses/4008/lessons/12836\">순열과 조합 - combinations, permutations<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI4Mzk=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42839\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>완전탐색(Brute-Force)</li>\n<li>itertools 없었으면 절대 못 풀었을 문제다. 그저 갓이썬…</li>\n<li><code>itertools.permutation</code>로 모든 숫자의 조합을 구해 리스트에 저장.</li>\n<li>숫자 조합 리스트의 최대값까지의 소수를 찾는다. 소수는 에라토스테네스의 체를 활용해서 찾으면 된다.</li>\n<li>소수 리스트와 숫자 조합 리스트의 합집합을 구하고 길이를 리턴한다.</li>\n<li>다음에는 itertools 없이 풀어봐야겠다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> itertools</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sieve</span><span class=\"params\">(n)</span>:</span></span><br><span class=\"line\">    num=set(range(<span class=\"number\">2</span>,n+<span class=\"number\">1</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">2</span>,n+<span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i <span class=\"keyword\">in</span> num:</span><br><span class=\"line\">            num-=set(range(<span class=\"number\">2</span>*i,n+<span class=\"number\">1</span>,i))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(numbers)</span>:</span></span><br><span class=\"line\">    numbers_list = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, len(numbers) + <span class=\"number\">1</span>):</span><br><span class=\"line\">        numbers_list += list(map(<span class=\"string\">''</span>.join, itertools.permutations(numbers,i)))</span><br><span class=\"line\"></span><br><span class=\"line\">    numbers_list = set(map(int, numbers_list))</span><br><span class=\"line\">    prime_list = sieve(max(numbers_list))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> len(numbers_list &amp; prime_list)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzQwMDgvbGVzc29ucy8xMjgzNg==\" title=\"https://programmers.co.kr/learn/courses/4008/lessons/12836\">순열과 조합 - combinations, permutations<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n"},{"title":"[Javascript] Function - Call과 Invoke의 차이","_content":"\n자바스크립트 관련 자료를 원문으로 보다 보면 함수 호출을 **call a function** 대신 **invoke a function** 이라고 하는 경우가 있다. **call**이나 **invoke** 둘 다 함수 호출을 뜻하지만, 둘은 미묘한 차이가 있다.\n\n보통 함수 호출은 **call**이라는 단어를 사용하는데 **invoke**를 사용하는 이유는, 자바스크립트는 직접적으로 호출이 될 수도 있지만 `call()` 와 `apply()` 메소드를 사용해 간접적으로 호출이 될 수도 있기 때문이다.\n\n```js\nfn();\nfn.call();\nfn.apply();\n```\n\n셋 다 함수를 호출하기는 하는데, `fn()`처럼 직접적으로 호출할 때는 **call**이 어울리고, `fn.call()`나 `fn.apply()`로 호출할 때는 **invoke**가 어울린다. (그래봤자 미묘한 어감의 차이일 뿐이지만...)\n\n아래의 그림을 보자.\n\n![Call and Invoke](https://fg4tjq.bn.files.1drv.com/y4mD2kJhpzVhh--1SgEKpH2z_Yr-HNvyEFBqLBlroGVH8_IwFsXzpR7EqKTYgq_TKhTOA_6GxcNdEp24AZjyXK6DI8agA1iFBOv2y3ye7SN8pj4w1PRFOBOvpm4peHDW-9nlgZgY7zzaqyxtZ4t2GkQE7Rc8GcMMN78oRff7sORjNP2E3yySbM-fNQgMbnVz5mdfRHofdYo6jC7LwcBRgS3zA?width=1563&height=723&cropmode=none)\n\n- **call**: 실제로 함수를 호출하는 명령문을 참조\n- **invoke**: 함수를 호출/실행하기 위해 호출문을 간접적으로 참조\n\n## reference\n\n- [Calling vs invoking a function](https://stackoverflow.com/questions/50884893/calling-vs-invoking-a-function)\n","source":"_posts/2019-08-09-js-call-and-invoke.md","raw":"---\ntitle: \"[Javascript] Function - Call과 Invoke의 차이\"\ntags: [javascript]\ncategories: 자바스크립트\n---\n\n자바스크립트 관련 자료를 원문으로 보다 보면 함수 호출을 **call a function** 대신 **invoke a function** 이라고 하는 경우가 있다. **call**이나 **invoke** 둘 다 함수 호출을 뜻하지만, 둘은 미묘한 차이가 있다.\n\n보통 함수 호출은 **call**이라는 단어를 사용하는데 **invoke**를 사용하는 이유는, 자바스크립트는 직접적으로 호출이 될 수도 있지만 `call()` 와 `apply()` 메소드를 사용해 간접적으로 호출이 될 수도 있기 때문이다.\n\n```js\nfn();\nfn.call();\nfn.apply();\n```\n\n셋 다 함수를 호출하기는 하는데, `fn()`처럼 직접적으로 호출할 때는 **call**이 어울리고, `fn.call()`나 `fn.apply()`로 호출할 때는 **invoke**가 어울린다. (그래봤자 미묘한 어감의 차이일 뿐이지만...)\n\n아래의 그림을 보자.\n\n![Call and Invoke](https://fg4tjq.bn.files.1drv.com/y4mD2kJhpzVhh--1SgEKpH2z_Yr-HNvyEFBqLBlroGVH8_IwFsXzpR7EqKTYgq_TKhTOA_6GxcNdEp24AZjyXK6DI8agA1iFBOv2y3ye7SN8pj4w1PRFOBOvpm4peHDW-9nlgZgY7zzaqyxtZ4t2GkQE7Rc8GcMMN78oRff7sORjNP2E3yySbM-fNQgMbnVz5mdfRHofdYo6jC7LwcBRgS3zA?width=1563&height=723&cropmode=none)\n\n- **call**: 실제로 함수를 호출하는 명령문을 참조\n- **invoke**: 함수를 호출/실행하기 위해 호출문을 간접적으로 참조\n\n## reference\n\n- [Calling vs invoking a function](https://stackoverflow.com/questions/50884893/calling-vs-invoking-a-function)\n","slug":"js-call-and-invoke","published":1,"date":"2019-08-08T15:00:00.000Z","updated":"2020-05-05T08:00:03.861Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhm0065uv596lj7ggw7","content":"<p>자바스크립트 관련 자료를 원문으로 보다 보면 함수 호출을 <strong>call a function</strong> 대신 <strong>invoke a function</strong> 이라고 하는 경우가 있다. <strong>call</strong>이나 <strong>invoke</strong> 둘 다 함수 호출을 뜻하지만, 둘은 미묘한 차이가 있다.</p>\n<p>보통 함수 호출은 <strong>call</strong>이라는 단어를 사용하는데 <strong>invoke</strong>를 사용하는 이유는, 자바스크립트는 직접적으로 호출이 될 수도 있지만 <code>call()</code> 와 <code>apply()</code> 메소드를 사용해 간접적으로 호출이 될 수도 있기 때문이다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fn();</span><br><span class=\"line\">fn.call();</span><br><span class=\"line\">fn.apply();</span><br></pre></td></tr></table></figure>\n\n<p>셋 다 함수를 호출하기는 하는데, <code>fn()</code>처럼 직접적으로 호출할 때는 <strong>call</strong>이 어울리고, <code>fn.call()</code>나 <code>fn.apply()</code>로 호출할 때는 <strong>invoke</strong>가 어울린다. (그래봤자 미묘한 어감의 차이일 뿐이지만…)</p>\n<p>아래의 그림을 보자.</p>\n<p><img src=\"https://fg4tjq.bn.files.1drv.com/y4mD2kJhpzVhh--1SgEKpH2z_Yr-HNvyEFBqLBlroGVH8_IwFsXzpR7EqKTYgq_TKhTOA_6GxcNdEp24AZjyXK6DI8agA1iFBOv2y3ye7SN8pj4w1PRFOBOvpm4peHDW-9nlgZgY7zzaqyxtZ4t2GkQE7Rc8GcMMN78oRff7sORjNP2E3yySbM-fNQgMbnVz5mdfRHofdYo6jC7LwcBRgS3zA?width=1563&height=723&cropmode=none\" alt=\"Call and Invoke\"></p>\n<ul>\n<li><strong>call</strong>: 실제로 함수를 호출하는 명령문을 참조</li>\n<li><strong>invoke</strong>: 함수를 호출/실행하기 위해 호출문을 간접적으로 참조</li>\n</ul>\n<h2 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTA4ODQ4OTMvY2FsbGluZy12cy1pbnZva2luZy1hLWZ1bmN0aW9u\" title=\"https://stackoverflow.com/questions/50884893/calling-vs-invoking-a-function\">Calling vs invoking a function<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>자바스크립트 관련 자료를 원문으로 보다 보면 함수 호출을 <strong>call a function</strong> 대신 <strong>invoke a function</strong> 이라고 하는 경우가 있다. <strong>call</strong>이나 <strong>invoke</strong> 둘 다 함수 호출을 뜻하지만, 둘은 미묘한 차이가 있다.</p>\n<p>보통 함수 호출은 <strong>call</strong>이라는 단어를 사용하는데 <strong>invoke</strong>를 사용하는 이유는, 자바스크립트는 직접적으로 호출이 될 수도 있지만 <code>call()</code> 와 <code>apply()</code> 메소드를 사용해 간접적으로 호출이 될 수도 있기 때문이다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fn();</span><br><span class=\"line\">fn.call();</span><br><span class=\"line\">fn.apply();</span><br></pre></td></tr></table></figure>\n\n<p>셋 다 함수를 호출하기는 하는데, <code>fn()</code>처럼 직접적으로 호출할 때는 <strong>call</strong>이 어울리고, <code>fn.call()</code>나 <code>fn.apply()</code>로 호출할 때는 <strong>invoke</strong>가 어울린다. (그래봤자 미묘한 어감의 차이일 뿐이지만…)</p>\n<p>아래의 그림을 보자.</p>\n<p><img src=\"https://fg4tjq.bn.files.1drv.com/y4mD2kJhpzVhh--1SgEKpH2z_Yr-HNvyEFBqLBlroGVH8_IwFsXzpR7EqKTYgq_TKhTOA_6GxcNdEp24AZjyXK6DI8agA1iFBOv2y3ye7SN8pj4w1PRFOBOvpm4peHDW-9nlgZgY7zzaqyxtZ4t2GkQE7Rc8GcMMN78oRff7sORjNP2E3yySbM-fNQgMbnVz5mdfRHofdYo6jC7LwcBRgS3zA?width=1563&height=723&cropmode=none\" alt=\"Call and Invoke\"></p>\n<ul>\n<li><strong>call</strong>: 실제로 함수를 호출하는 명령문을 참조</li>\n<li><strong>invoke</strong>: 함수를 호출/실행하기 위해 호출문을 간접적으로 참조</li>\n</ul>\n<h2 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTA4ODQ4OTMvY2FsbGluZy12cy1pbnZva2luZy1hLWZ1bmN0aW9u\" title=\"https://stackoverflow.com/questions/50884893/calling-vs-invoking-a-function\">Calling vs invoking a function<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n"},{"title":"[프로그래머스] 숫자 야구","_content":"\n> 프로그래머스 - [완전 탐색](https://programmers.co.kr/learn/courses/30/lessons/42841)\n\n## Code (Python)\n\n- 123~987까지의 리스트를 미리 만듦 (baseball_list)\n- baseball_list의 길이만큼 정답 배열(answer)을 만들고 True로 값 초기화\n- 스트라이크와 볼의 갯수가 같지 않을 경우 정답 배열의 값을 False로 변경\n- 배열 내에서 True인 것만 필터링해 출력\n\n```python\nfrom itertools import permutations\n\ndef solution(baseball):\n    baseball_list = list(permutations([1,2,3,4,5,6,7,8,9], 3))\n    answer = []\n\n    for i in range(len(baseball_list)):\n        answer.append(True)\n\n    for i in baseball:\n        number = tuple(map(int, list(str(i[0]))))\n\n        for index, baseball in enumerate(baseball_list):\n            ball = 0\n            strike = 0\n\n            if number[0] == baseball[0]:\n                strike += 1\n            elif number[0] == baseball[1] or number[0] == baseball[2]:\n                ball += 1\n            if number[1] == baseball[1]:\n                strike += 1\n            elif number[1] == baseball[0] or number[1] == baseball[2]:\n                ball += 1\n            if number[2] == baseball[2]:\n                strike += 1\n            elif number[2] == baseball[0] or number[2] == baseball[1]:\n                ball += 1\n\n            if strike != i[1] or ball != i[2]:\n                answer[index] = False\n\n    return len(list(filter(lambda x: x, answer)))\n```\n","source":"_posts/2019-08-11-pgs-42841.md","raw":"---\ntitle: \"[프로그래머스] 숫자 야구\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [완전 탐색](https://programmers.co.kr/learn/courses/30/lessons/42841)\n\n## Code (Python)\n\n- 123~987까지의 리스트를 미리 만듦 (baseball_list)\n- baseball_list의 길이만큼 정답 배열(answer)을 만들고 True로 값 초기화\n- 스트라이크와 볼의 갯수가 같지 않을 경우 정답 배열의 값을 False로 변경\n- 배열 내에서 True인 것만 필터링해 출력\n\n```python\nfrom itertools import permutations\n\ndef solution(baseball):\n    baseball_list = list(permutations([1,2,3,4,5,6,7,8,9], 3))\n    answer = []\n\n    for i in range(len(baseball_list)):\n        answer.append(True)\n\n    for i in baseball:\n        number = tuple(map(int, list(str(i[0]))))\n\n        for index, baseball in enumerate(baseball_list):\n            ball = 0\n            strike = 0\n\n            if number[0] == baseball[0]:\n                strike += 1\n            elif number[0] == baseball[1] or number[0] == baseball[2]:\n                ball += 1\n            if number[1] == baseball[1]:\n                strike += 1\n            elif number[1] == baseball[0] or number[1] == baseball[2]:\n                ball += 1\n            if number[2] == baseball[2]:\n                strike += 1\n            elif number[2] == baseball[0] or number[2] == baseball[1]:\n                ball += 1\n\n            if strike != i[1] or ball != i[2]:\n                answer[index] = False\n\n    return len(list(filter(lambda x: x, answer)))\n```\n","slug":"pgs-42841","published":1,"date":"2019-08-10T15:00:00.000Z","updated":"2020-05-05T08:00:03.861Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhm0068uv59ep3s4wcf","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI4NDE=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42841\">완전 탐색<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>123~987까지의 리스트를 미리 만듦 (baseball_list)</li>\n<li>baseball_list의 길이만큼 정답 배열(answer)을 만들고 True로 값 초기화</li>\n<li>스트라이크와 볼의 갯수가 같지 않을 경우 정답 배열의 값을 False로 변경</li>\n<li>배열 내에서 True인 것만 필터링해 출력</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> itertools <span class=\"keyword\">import</span> permutations</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(baseball)</span>:</span></span><br><span class=\"line\">    baseball_list = list(permutations([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>], <span class=\"number\">3</span>))</span><br><span class=\"line\">    answer = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(baseball_list)):</span><br><span class=\"line\">        answer.append(<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> baseball:</span><br><span class=\"line\">        number = tuple(map(int, list(str(i[<span class=\"number\">0</span>]))))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> index, baseball <span class=\"keyword\">in</span> enumerate(baseball_list):</span><br><span class=\"line\">            ball = <span class=\"number\">0</span></span><br><span class=\"line\">            strike = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> number[<span class=\"number\">0</span>] == baseball[<span class=\"number\">0</span>]:</span><br><span class=\"line\">                strike += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> number[<span class=\"number\">0</span>] == baseball[<span class=\"number\">1</span>] <span class=\"keyword\">or</span> number[<span class=\"number\">0</span>] == baseball[<span class=\"number\">2</span>]:</span><br><span class=\"line\">                ball += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> number[<span class=\"number\">1</span>] == baseball[<span class=\"number\">1</span>]:</span><br><span class=\"line\">                strike += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> number[<span class=\"number\">1</span>] == baseball[<span class=\"number\">0</span>] <span class=\"keyword\">or</span> number[<span class=\"number\">1</span>] == baseball[<span class=\"number\">2</span>]:</span><br><span class=\"line\">                ball += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> number[<span class=\"number\">2</span>] == baseball[<span class=\"number\">2</span>]:</span><br><span class=\"line\">                strike += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> number[<span class=\"number\">2</span>] == baseball[<span class=\"number\">0</span>] <span class=\"keyword\">or</span> number[<span class=\"number\">2</span>] == baseball[<span class=\"number\">1</span>]:</span><br><span class=\"line\">                ball += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> strike != i[<span class=\"number\">1</span>] <span class=\"keyword\">or</span> ball != i[<span class=\"number\">2</span>]:</span><br><span class=\"line\">                answer[index] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> len(list(filter(<span class=\"keyword\">lambda</span> x: x, answer)))</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI4NDE=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42841\">완전 탐색<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>123~987까지의 리스트를 미리 만듦 (baseball_list)</li>\n<li>baseball_list의 길이만큼 정답 배열(answer)을 만들고 True로 값 초기화</li>\n<li>스트라이크와 볼의 갯수가 같지 않을 경우 정답 배열의 값을 False로 변경</li>\n<li>배열 내에서 True인 것만 필터링해 출력</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> itertools <span class=\"keyword\">import</span> permutations</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(baseball)</span>:</span></span><br><span class=\"line\">    baseball_list = list(permutations([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>], <span class=\"number\">3</span>))</span><br><span class=\"line\">    answer = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(baseball_list)):</span><br><span class=\"line\">        answer.append(<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> baseball:</span><br><span class=\"line\">        number = tuple(map(int, list(str(i[<span class=\"number\">0</span>]))))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> index, baseball <span class=\"keyword\">in</span> enumerate(baseball_list):</span><br><span class=\"line\">            ball = <span class=\"number\">0</span></span><br><span class=\"line\">            strike = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> number[<span class=\"number\">0</span>] == baseball[<span class=\"number\">0</span>]:</span><br><span class=\"line\">                strike += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> number[<span class=\"number\">0</span>] == baseball[<span class=\"number\">1</span>] <span class=\"keyword\">or</span> number[<span class=\"number\">0</span>] == baseball[<span class=\"number\">2</span>]:</span><br><span class=\"line\">                ball += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> number[<span class=\"number\">1</span>] == baseball[<span class=\"number\">1</span>]:</span><br><span class=\"line\">                strike += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> number[<span class=\"number\">1</span>] == baseball[<span class=\"number\">0</span>] <span class=\"keyword\">or</span> number[<span class=\"number\">1</span>] == baseball[<span class=\"number\">2</span>]:</span><br><span class=\"line\">                ball += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> number[<span class=\"number\">2</span>] == baseball[<span class=\"number\">2</span>]:</span><br><span class=\"line\">                strike += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> number[<span class=\"number\">2</span>] == baseball[<span class=\"number\">0</span>] <span class=\"keyword\">or</span> number[<span class=\"number\">2</span>] == baseball[<span class=\"number\">1</span>]:</span><br><span class=\"line\">                ball += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> strike != i[<span class=\"number\">1</span>] <span class=\"keyword\">or</span> ball != i[<span class=\"number\">2</span>]:</span><br><span class=\"line\">                answer[index] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> len(list(filter(<span class=\"keyword\">lambda</span> x: x, answer)))</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 카펫","_content":"\n> 프로그래머스 - [완전 탐색](https://programmers.co.kr/learn/courses/30/lessons/42842)\n\n## Code (Python)\n\n- 가로가 x, 세로가 y일 때 red는 `x*y`, 전체 크기(brown+red)는 `(x+2) * (y+2)`\n- `x*y > red`인 경우는 문제의 조건에 안 맞는 것이니 break\n- 참고로 brown은 `2(X+Y)+4`로 구할 수 있다.\n\n```python\ndef solution(brown, red):\n    for y in range(1, red + 1):\n        for x in range(y, red + 1):\n            if x * y == red and (x + 2) * (y + 2) == brown + red:\n                return [x + 2, y + 2]\n            elif x * y > red:\n                break\n```\n\n## 다른 사람의 코드 1\n\n- 이중 for문 쓸 필요 없이, red가 i로 나누어 떨어지는 경우 brown값을 구해보면 된다.\n- for문의 범위는 `int(red**(1/2))+1`\n\n```python\ndef solution(brown, red):\n    for i in range(1, int(red**(1/2))+1):\n        if red % i == 0:\n            if 2*(i + red//i) == brown-4:\n                return [red//i+2, i+2]\n```\n\n## 다른 사람의 코드 2\n\n- 전체 크기만큼 반복문을 돌린다.\n- brown 값이 아닌 red 값으로 정답을 찾는 방식\n\n```python\ndef solution(brown, red):\n    nm = brown + red\n    for n in range(1, nm+1):\n        if nm%n != 0:\n            continue\n        m = nm//n\n        if (n-2)*(m-2) == red:\n            return sorted([n, m], reverse = True)\n```\n","source":"_posts/2019-08-11-pgs-42842.md","raw":"---\ntitle: \"[프로그래머스] 카펫\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [완전 탐색](https://programmers.co.kr/learn/courses/30/lessons/42842)\n\n## Code (Python)\n\n- 가로가 x, 세로가 y일 때 red는 `x*y`, 전체 크기(brown+red)는 `(x+2) * (y+2)`\n- `x*y > red`인 경우는 문제의 조건에 안 맞는 것이니 break\n- 참고로 brown은 `2(X+Y)+4`로 구할 수 있다.\n\n```python\ndef solution(brown, red):\n    for y in range(1, red + 1):\n        for x in range(y, red + 1):\n            if x * y == red and (x + 2) * (y + 2) == brown + red:\n                return [x + 2, y + 2]\n            elif x * y > red:\n                break\n```\n\n## 다른 사람의 코드 1\n\n- 이중 for문 쓸 필요 없이, red가 i로 나누어 떨어지는 경우 brown값을 구해보면 된다.\n- for문의 범위는 `int(red**(1/2))+1`\n\n```python\ndef solution(brown, red):\n    for i in range(1, int(red**(1/2))+1):\n        if red % i == 0:\n            if 2*(i + red//i) == brown-4:\n                return [red//i+2, i+2]\n```\n\n## 다른 사람의 코드 2\n\n- 전체 크기만큼 반복문을 돌린다.\n- brown 값이 아닌 red 값으로 정답을 찾는 방식\n\n```python\ndef solution(brown, red):\n    nm = brown + red\n    for n in range(1, nm+1):\n        if nm%n != 0:\n            continue\n        m = nm//n\n        if (n-2)*(m-2) == red:\n            return sorted([n, m], reverse = True)\n```\n","slug":"pgs-42842","published":1,"date":"2019-08-10T15:00:00.000Z","updated":"2020-05-05T08:00:03.861Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhn006buv591g4kha9h","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI4NDI=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42842\">완전 탐색<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>가로가 x, 세로가 y일 때 red는 <code>x*y</code>, 전체 크기(brown+red)는 <code>(x+2) * (y+2)</code></li>\n<li><code>x*y &gt; red</code>인 경우는 문제의 조건에 안 맞는 것이니 break</li>\n<li>참고로 brown은 <code>2(X+Y)+4</code>로 구할 수 있다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(brown, red)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, red + <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(y, red + <span class=\"number\">1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> x * y == red <span class=\"keyword\">and</span> (x + <span class=\"number\">2</span>) * (y + <span class=\"number\">2</span>) == brown + red:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> [x + <span class=\"number\">2</span>, y + <span class=\"number\">2</span>]</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> x * y &gt; red:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"다른-사람의-코드-1\"><a href=\"#다른-사람의-코드-1\" class=\"headerlink\" title=\"다른 사람의 코드 1\"></a>다른 사람의 코드 1</h2><ul>\n<li>이중 for문 쓸 필요 없이, red가 i로 나누어 떨어지는 경우 brown값을 구해보면 된다.</li>\n<li>for문의 범위는 <code>int(red**(1/2))+1</code></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(brown, red)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(red**(<span class=\"number\">1</span>/<span class=\"number\">2</span>))+<span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> red % i == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"number\">2</span>*(i + red//i) == brown<span class=\"number\">-4</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> [red//i+<span class=\"number\">2</span>, i+<span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"다른-사람의-코드-2\"><a href=\"#다른-사람의-코드-2\" class=\"headerlink\" title=\"다른 사람의 코드 2\"></a>다른 사람의 코드 2</h2><ul>\n<li>전체 크기만큼 반복문을 돌린다.</li>\n<li>brown 값이 아닌 red 값으로 정답을 찾는 방식</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(brown, red)</span>:</span></span><br><span class=\"line\">    nm = brown + red</span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, nm+<span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> nm%n != <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        m = nm//n</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n<span class=\"number\">-2</span>)*(m<span class=\"number\">-2</span>) == red:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> sorted([n, m], reverse = <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI4NDI=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42842\">완전 탐색<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>가로가 x, 세로가 y일 때 red는 <code>x*y</code>, 전체 크기(brown+red)는 <code>(x+2) * (y+2)</code></li>\n<li><code>x*y &gt; red</code>인 경우는 문제의 조건에 안 맞는 것이니 break</li>\n<li>참고로 brown은 <code>2(X+Y)+4</code>로 구할 수 있다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(brown, red)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, red + <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(y, red + <span class=\"number\">1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> x * y == red <span class=\"keyword\">and</span> (x + <span class=\"number\">2</span>) * (y + <span class=\"number\">2</span>) == brown + red:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> [x + <span class=\"number\">2</span>, y + <span class=\"number\">2</span>]</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> x * y &gt; red:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"다른-사람의-코드-1\"><a href=\"#다른-사람의-코드-1\" class=\"headerlink\" title=\"다른 사람의 코드 1\"></a>다른 사람의 코드 1</h2><ul>\n<li>이중 for문 쓸 필요 없이, red가 i로 나누어 떨어지는 경우 brown값을 구해보면 된다.</li>\n<li>for문의 범위는 <code>int(red**(1/2))+1</code></li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(brown, red)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(red**(<span class=\"number\">1</span>/<span class=\"number\">2</span>))+<span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> red % i == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"number\">2</span>*(i + red//i) == brown<span class=\"number\">-4</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> [red//i+<span class=\"number\">2</span>, i+<span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"다른-사람의-코드-2\"><a href=\"#다른-사람의-코드-2\" class=\"headerlink\" title=\"다른 사람의 코드 2\"></a>다른 사람의 코드 2</h2><ul>\n<li>전체 크기만큼 반복문을 돌린다.</li>\n<li>brown 값이 아닌 red 값으로 정답을 찾는 방식</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(brown, red)</span>:</span></span><br><span class=\"line\">    nm = brown + red</span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, nm+<span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> nm%n != <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        m = nm//n</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n<span class=\"number\">-2</span>)*(m<span class=\"number\">-2</span>) == red:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> sorted([n, m], reverse = <span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 탑","_content":"\n> 프로그래머스 - [스택/큐](https://programmers.co.kr/learn/courses/30/lessons/42588)\n\n## Code (Python)\n\n- 스택/큐 문제. 아마 스택으로 풀면 되지 않을까 싶은데 정작 스택으로 안 푼 문제.\n- 끝에서부터 처음까지 비교해, 만약 앞의 수가 클 경우 인덱스를 정답 배열에 넣고, 그게 아닐 경우 0을 정답 배열에 넣는다.\n- 역순으로 저장했으니 reverse() 메소드로 정렬한다.\n\n```python\ndef solution(heights):\n    length = len(heights)\n    answer = []\n    while length > 0:\n        length = length - 1\n        for i in range(length, -1, -1):\n            if heights[length] < heights[i]:\n                answer.append(i + 1)\n                break\n            if i == 0 and heights[length] >= heights[i]:\n                answer.append(0)\n\n    answer.reverse()\n    return answer\n```\n\n## 다른 사람의 코드 1\n\n- 정답 배열에 길이만큼 0을 먼저 집어넣고, 조건(h[i] < h[j])에 맞을 경우에만 값을 바꿔줬다.\n\n```python\ndef solution(h):\n    ans = [0] * len(h)\n    for i in range(len(h)-1, 0, -1):\n        for j in range(i-1, -1, -1):\n            if h[i] < h[j]:\n                ans[i] = j+1\n                break\n    return ans\n```\n","source":"_posts/2019-08-20-pgs-42588.md","raw":"---\ntitle: \"[프로그래머스] 탑\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [스택/큐](https://programmers.co.kr/learn/courses/30/lessons/42588)\n\n## Code (Python)\n\n- 스택/큐 문제. 아마 스택으로 풀면 되지 않을까 싶은데 정작 스택으로 안 푼 문제.\n- 끝에서부터 처음까지 비교해, 만약 앞의 수가 클 경우 인덱스를 정답 배열에 넣고, 그게 아닐 경우 0을 정답 배열에 넣는다.\n- 역순으로 저장했으니 reverse() 메소드로 정렬한다.\n\n```python\ndef solution(heights):\n    length = len(heights)\n    answer = []\n    while length > 0:\n        length = length - 1\n        for i in range(length, -1, -1):\n            if heights[length] < heights[i]:\n                answer.append(i + 1)\n                break\n            if i == 0 and heights[length] >= heights[i]:\n                answer.append(0)\n\n    answer.reverse()\n    return answer\n```\n\n## 다른 사람의 코드 1\n\n- 정답 배열에 길이만큼 0을 먼저 집어넣고, 조건(h[i] < h[j])에 맞을 경우에만 값을 바꿔줬다.\n\n```python\ndef solution(h):\n    ans = [0] * len(h)\n    for i in range(len(h)-1, 0, -1):\n        for j in range(i-1, -1, -1):\n            if h[i] < h[j]:\n                ans[i] = j+1\n                break\n    return ans\n```\n","slug":"pgs-42588","published":1,"date":"2019-08-19T15:00:00.000Z","updated":"2020-05-05T08:00:03.861Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhn006euv59hvju4lwa","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI1ODg=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42588\">스택/큐<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>스택/큐 문제. 아마 스택으로 풀면 되지 않을까 싶은데 정작 스택으로 안 푼 문제.</li>\n<li>끝에서부터 처음까지 비교해, 만약 앞의 수가 클 경우 인덱스를 정답 배열에 넣고, 그게 아닐 경우 0을 정답 배열에 넣는다.</li>\n<li>역순으로 저장했으니 reverse() 메소드로 정렬한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(heights)</span>:</span></span><br><span class=\"line\">    length = len(heights)</span><br><span class=\"line\">    answer = []</span><br><span class=\"line\">    <span class=\"keyword\">while</span> length &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        length = length - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(length, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> heights[length] &lt; heights[i]:</span><br><span class=\"line\">                answer.append(i + <span class=\"number\">1</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> i == <span class=\"number\">0</span> <span class=\"keyword\">and</span> heights[length] &gt;= heights[i]:</span><br><span class=\"line\">                answer.append(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    answer.reverse()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"다른-사람의-코드-1\"><a href=\"#다른-사람의-코드-1\" class=\"headerlink\" title=\"다른 사람의 코드 1\"></a>다른 사람의 코드 1</h2><ul>\n<li>정답 배열에 길이만큼 0을 먼저 집어넣고, 조건(h[i] &lt; h[j])에 맞을 경우에만 값을 바꿔줬다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(h)</span>:</span></span><br><span class=\"line\">    ans = [<span class=\"number\">0</span>] * len(h)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(h)<span class=\"number\">-1</span>, <span class=\"number\">0</span>, <span class=\"number\">-1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i<span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> h[i] &lt; h[j]:</span><br><span class=\"line\">                ans[i] = j+<span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI1ODg=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42588\">스택/큐<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><ul>\n<li>스택/큐 문제. 아마 스택으로 풀면 되지 않을까 싶은데 정작 스택으로 안 푼 문제.</li>\n<li>끝에서부터 처음까지 비교해, 만약 앞의 수가 클 경우 인덱스를 정답 배열에 넣고, 그게 아닐 경우 0을 정답 배열에 넣는다.</li>\n<li>역순으로 저장했으니 reverse() 메소드로 정렬한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(heights)</span>:</span></span><br><span class=\"line\">    length = len(heights)</span><br><span class=\"line\">    answer = []</span><br><span class=\"line\">    <span class=\"keyword\">while</span> length &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">        length = length - <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(length, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> heights[length] &lt; heights[i]:</span><br><span class=\"line\">                answer.append(i + <span class=\"number\">1</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> i == <span class=\"number\">0</span> <span class=\"keyword\">and</span> heights[length] &gt;= heights[i]:</span><br><span class=\"line\">                answer.append(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    answer.reverse()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"다른-사람의-코드-1\"><a href=\"#다른-사람의-코드-1\" class=\"headerlink\" title=\"다른 사람의 코드 1\"></a>다른 사람의 코드 1</h2><ul>\n<li>정답 배열에 길이만큼 0을 먼저 집어넣고, 조건(h[i] &lt; h[j])에 맞을 경우에만 값을 바꿔줬다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(h)</span>:</span></span><br><span class=\"line\">    ans = [<span class=\"number\">0</span>] * len(h)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(h)<span class=\"number\">-1</span>, <span class=\"number\">0</span>, <span class=\"number\">-1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i<span class=\"number\">-1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> h[i] &lt; h[j]:</span><br><span class=\"line\">                ans[i] = j+<span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/1260] DFS와 BFS","_content":"> Baekjoon Online Judge - [1260](https://www.acmicpc.net/problem/1260)\n\n* BFS는 쉽게 했는데 DFS에서 삽질을 많이 했다. 자꾸 1>4>3>2가 출력되길래...\n* 작은 노드부터 탐색을 해야하기 때문에, dfs 함수 내에서 작은 노드부터 탐색할 수 있게끔 자식 노드를 정렬해 스택에 넣어줘야 한다.\n\n```python\nimport collections\n\ndef dfs(v):\n    stack = []\n\n    # 스택과 visited 리스트에 루트 노드 추가\n    visited = [v]\n    # 작은 노드부터 탐색해야하기 때문에 정렬\n    stack.extend(reversed(adj[v]))\n\n    while stack:\n        # 제일 위에 있는 노드 꺼내기\n        node = stack.pop()\n        # 해당 노드가 방문하지 않은 노드일 경우\n        if node not in visited:\n            # 해당 노드를 visited 리스트에 추가\n            visited.append(node)\n            # 해당 노드의 자식노드를 스택에 추가\n            # 작은 노드부터 탐색해야하기 때문에 정렬\n            stack.extend(reversed(adj[node]))\n    return visited\n\ndef bfs(v):\n    queue = collections.deque()\n\n    # 큐와 visited 리스트에 루트 노드 추가\n    visited = [v]\n    queue += adj[v]\n\n    while queue:\n        # 먼저 큐에 들어가있던 노드 꺼내기\n        node = queue.popleft()\n        # 해당 노드가 방문하지 않은 노드일 경우\n        if node not in visited:\n            # 해당 노드의 자식노드를 큐에 추가\n            queue += adj[node]\n            # 해당 노드를 visited 리스트에 추가\n            visited.append(node)\n\n    return visited\n\nN, M, V = (map(int, input().split()))\n\nadj = [[] for _ in range(N+1)]\n\nfor _ in range(M):\n    a, b = (map(int, input().split()))\n    adj[a].append(b)\n    adj[b].append(a)\n\n    # 정점 번호가 작은 순대로 정렬\n    adj[a].sort()\n    adj[b].sort()\n\n# 배열을 문자열로 변환\nanswer1 = \" \".join(str(x) for x in dfs(V))\nanswer2 = \" \".join(str(x) for x in bfs(V))\n\nprint(answer1)\nprint(answer2)\n```\n","source":"_posts/2019-09-25-boj-1260.md","raw":"---\ntitle: \"[백준/1260] DFS와 BFS\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [1260](https://www.acmicpc.net/problem/1260)\n\n* BFS는 쉽게 했는데 DFS에서 삽질을 많이 했다. 자꾸 1>4>3>2가 출력되길래...\n* 작은 노드부터 탐색을 해야하기 때문에, dfs 함수 내에서 작은 노드부터 탐색할 수 있게끔 자식 노드를 정렬해 스택에 넣어줘야 한다.\n\n```python\nimport collections\n\ndef dfs(v):\n    stack = []\n\n    # 스택과 visited 리스트에 루트 노드 추가\n    visited = [v]\n    # 작은 노드부터 탐색해야하기 때문에 정렬\n    stack.extend(reversed(adj[v]))\n\n    while stack:\n        # 제일 위에 있는 노드 꺼내기\n        node = stack.pop()\n        # 해당 노드가 방문하지 않은 노드일 경우\n        if node not in visited:\n            # 해당 노드를 visited 리스트에 추가\n            visited.append(node)\n            # 해당 노드의 자식노드를 스택에 추가\n            # 작은 노드부터 탐색해야하기 때문에 정렬\n            stack.extend(reversed(adj[node]))\n    return visited\n\ndef bfs(v):\n    queue = collections.deque()\n\n    # 큐와 visited 리스트에 루트 노드 추가\n    visited = [v]\n    queue += adj[v]\n\n    while queue:\n        # 먼저 큐에 들어가있던 노드 꺼내기\n        node = queue.popleft()\n        # 해당 노드가 방문하지 않은 노드일 경우\n        if node not in visited:\n            # 해당 노드의 자식노드를 큐에 추가\n            queue += adj[node]\n            # 해당 노드를 visited 리스트에 추가\n            visited.append(node)\n\n    return visited\n\nN, M, V = (map(int, input().split()))\n\nadj = [[] for _ in range(N+1)]\n\nfor _ in range(M):\n    a, b = (map(int, input().split()))\n    adj[a].append(b)\n    adj[b].append(a)\n\n    # 정점 번호가 작은 순대로 정렬\n    adj[a].sort()\n    adj[b].sort()\n\n# 배열을 문자열로 변환\nanswer1 = \" \".join(str(x) for x in dfs(V))\nanswer2 = \" \".join(str(x) for x in bfs(V))\n\nprint(answer1)\nprint(answer2)\n```\n","slug":"boj-1260","published":1,"date":"2019-09-24T15:00:00.000Z","updated":"2020-05-05T08:00:03.861Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afho006huv5977jdgqny","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMjYw\" title=\"https://www.acmicpc.net/problem/1260\">1260<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<ul>\n<li>BFS는 쉽게 했는데 DFS에서 삽질을 많이 했다. 자꾸 1&gt;4&gt;3&gt;2가 출력되길래…</li>\n<li>작은 노드부터 탐색을 해야하기 때문에, dfs 함수 내에서 작은 노드부터 탐색할 수 있게끔 자식 노드를 정렬해 스택에 넣어줘야 한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> collections</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dfs</span><span class=\"params\">(v)</span>:</span></span><br><span class=\"line\">    stack = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 스택과 visited 리스트에 루트 노드 추가</span></span><br><span class=\"line\">    visited = [v]</span><br><span class=\"line\">    <span class=\"comment\"># 작은 노드부터 탐색해야하기 때문에 정렬</span></span><br><span class=\"line\">    stack.extend(reversed(adj[v]))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> stack:</span><br><span class=\"line\">        <span class=\"comment\"># 제일 위에 있는 노드 꺼내기</span></span><br><span class=\"line\">        node = stack.pop()</span><br><span class=\"line\">        <span class=\"comment\"># 해당 노드가 방문하지 않은 노드일 경우</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> node <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> visited:</span><br><span class=\"line\">            <span class=\"comment\"># 해당 노드를 visited 리스트에 추가</span></span><br><span class=\"line\">            visited.append(node)</span><br><span class=\"line\">            <span class=\"comment\"># 해당 노드의 자식노드를 스택에 추가</span></span><br><span class=\"line\">            <span class=\"comment\"># 작은 노드부터 탐색해야하기 때문에 정렬</span></span><br><span class=\"line\">            stack.extend(reversed(adj[node]))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> visited</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bfs</span><span class=\"params\">(v)</span>:</span></span><br><span class=\"line\">    queue = collections.deque()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 큐와 visited 리스트에 루트 노드 추가</span></span><br><span class=\"line\">    visited = [v]</span><br><span class=\"line\">    queue += adj[v]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> queue:</span><br><span class=\"line\">        <span class=\"comment\"># 먼저 큐에 들어가있던 노드 꺼내기</span></span><br><span class=\"line\">        node = queue.popleft()</span><br><span class=\"line\">        <span class=\"comment\"># 해당 노드가 방문하지 않은 노드일 경우</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> node <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> visited:</span><br><span class=\"line\">            <span class=\"comment\"># 해당 노드의 자식노드를 큐에 추가</span></span><br><span class=\"line\">            queue += adj[node]</span><br><span class=\"line\">            <span class=\"comment\"># 해당 노드를 visited 리스트에 추가</span></span><br><span class=\"line\">            visited.append(node)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> visited</span><br><span class=\"line\"></span><br><span class=\"line\">N, M, V = (map(int, input().split()))</span><br><span class=\"line\"></span><br><span class=\"line\">adj = [[] <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(N+<span class=\"number\">1</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(M):</span><br><span class=\"line\">    a, b = (map(int, input().split()))</span><br><span class=\"line\">    adj[a].append(b)</span><br><span class=\"line\">    adj[b].append(a)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 정점 번호가 작은 순대로 정렬</span></span><br><span class=\"line\">    adj[a].sort()</span><br><span class=\"line\">    adj[b].sort()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 배열을 문자열로 변환</span></span><br><span class=\"line\">answer1 = <span class=\"string\">\" \"</span>.join(str(x) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> dfs(V))</span><br><span class=\"line\">answer2 = <span class=\"string\">\" \"</span>.join(str(x) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> bfs(V))</span><br><span class=\"line\"></span><br><span class=\"line\">print(answer1)</span><br><span class=\"line\">print(answer2)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8xMjYw\" title=\"https://www.acmicpc.net/problem/1260\">1260<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<ul>\n<li>BFS는 쉽게 했는데 DFS에서 삽질을 많이 했다. 자꾸 1&gt;4&gt;3&gt;2가 출력되길래…</li>\n<li>작은 노드부터 탐색을 해야하기 때문에, dfs 함수 내에서 작은 노드부터 탐색할 수 있게끔 자식 노드를 정렬해 스택에 넣어줘야 한다.</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> collections</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dfs</span><span class=\"params\">(v)</span>:</span></span><br><span class=\"line\">    stack = []</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 스택과 visited 리스트에 루트 노드 추가</span></span><br><span class=\"line\">    visited = [v]</span><br><span class=\"line\">    <span class=\"comment\"># 작은 노드부터 탐색해야하기 때문에 정렬</span></span><br><span class=\"line\">    stack.extend(reversed(adj[v]))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> stack:</span><br><span class=\"line\">        <span class=\"comment\"># 제일 위에 있는 노드 꺼내기</span></span><br><span class=\"line\">        node = stack.pop()</span><br><span class=\"line\">        <span class=\"comment\"># 해당 노드가 방문하지 않은 노드일 경우</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> node <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> visited:</span><br><span class=\"line\">            <span class=\"comment\"># 해당 노드를 visited 리스트에 추가</span></span><br><span class=\"line\">            visited.append(node)</span><br><span class=\"line\">            <span class=\"comment\"># 해당 노드의 자식노드를 스택에 추가</span></span><br><span class=\"line\">            <span class=\"comment\"># 작은 노드부터 탐색해야하기 때문에 정렬</span></span><br><span class=\"line\">            stack.extend(reversed(adj[node]))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> visited</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bfs</span><span class=\"params\">(v)</span>:</span></span><br><span class=\"line\">    queue = collections.deque()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 큐와 visited 리스트에 루트 노드 추가</span></span><br><span class=\"line\">    visited = [v]</span><br><span class=\"line\">    queue += adj[v]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> queue:</span><br><span class=\"line\">        <span class=\"comment\"># 먼저 큐에 들어가있던 노드 꺼내기</span></span><br><span class=\"line\">        node = queue.popleft()</span><br><span class=\"line\">        <span class=\"comment\"># 해당 노드가 방문하지 않은 노드일 경우</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> node <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> visited:</span><br><span class=\"line\">            <span class=\"comment\"># 해당 노드의 자식노드를 큐에 추가</span></span><br><span class=\"line\">            queue += adj[node]</span><br><span class=\"line\">            <span class=\"comment\"># 해당 노드를 visited 리스트에 추가</span></span><br><span class=\"line\">            visited.append(node)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> visited</span><br><span class=\"line\"></span><br><span class=\"line\">N, M, V = (map(int, input().split()))</span><br><span class=\"line\"></span><br><span class=\"line\">adj = [[] <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(N+<span class=\"number\">1</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(M):</span><br><span class=\"line\">    a, b = (map(int, input().split()))</span><br><span class=\"line\">    adj[a].append(b)</span><br><span class=\"line\">    adj[b].append(a)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 정점 번호가 작은 순대로 정렬</span></span><br><span class=\"line\">    adj[a].sort()</span><br><span class=\"line\">    adj[b].sort()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 배열을 문자열로 변환</span></span><br><span class=\"line\">answer1 = <span class=\"string\">\" \"</span>.join(str(x) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> dfs(V))</span><br><span class=\"line\">answer2 = <span class=\"string\">\" \"</span>.join(str(x) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> bfs(V))</span><br><span class=\"line\"></span><br><span class=\"line\">print(answer1)</span><br><span class=\"line\">print(answer2)</span><br></pre></td></tr></table></figure>\n"},{"title":"[백준/2606] 바이러스","_content":"> Baekjoon Online Judge - [2606](https://www.acmicpc.net/problem/2606)\n\n* 방문한 노드의 갯수를 새면 되는 문제\n\n```python\nimport collections\n\ndef bfs(start):\n    queue = collections.deque()\n    visited = [start]\n    queue += graph[start]\n    count = 0\n\n    while queue:\n        node = queue.popleft()\n        if node not in visited:\n            queue += graph[node]\n            visited.append(node)\n            # visited 리스트에 노드를 넣을 때마다 count 1씩 증가\n            count += 1\n    return count\n\nV = int(input())\nE = int(input())\n\ngraph = [[] for _ in range(V+1)]\n\nfor _ in range(E):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\nprint(bfs(1))\n```\n","source":"_posts/2019-09-26-boj-2606.md","raw":"---\ntitle: \"[백준/2606] 바이러스\"\ntags: [boj, algorithm]\ncategories: 백준\n---\n> Baekjoon Online Judge - [2606](https://www.acmicpc.net/problem/2606)\n\n* 방문한 노드의 갯수를 새면 되는 문제\n\n```python\nimport collections\n\ndef bfs(start):\n    queue = collections.deque()\n    visited = [start]\n    queue += graph[start]\n    count = 0\n\n    while queue:\n        node = queue.popleft()\n        if node not in visited:\n            queue += graph[node]\n            visited.append(node)\n            # visited 리스트에 노드를 넣을 때마다 count 1씩 증가\n            count += 1\n    return count\n\nV = int(input())\nE = int(input())\n\ngraph = [[] for _ in range(V+1)]\n\nfor _ in range(E):\n    a, b = map(int, input().split())\n    graph[a].append(b)\n    graph[b].append(a)\n\nprint(bfs(1))\n```\n","slug":"boj-2606","published":1,"date":"2019-09-25T15:00:00.000Z","updated":"2020-05-05T08:00:03.861Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhp006kuv599y9m5pco","content":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNjA2\" title=\"https://www.acmicpc.net/problem/2606\">2606<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<ul>\n<li>방문한 노드의 갯수를 새면 되는 문제</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> collections</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bfs</span><span class=\"params\">(start)</span>:</span></span><br><span class=\"line\">    queue = collections.deque()</span><br><span class=\"line\">    visited = [start]</span><br><span class=\"line\">    queue += graph[start]</span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> queue:</span><br><span class=\"line\">        node = queue.popleft()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> node <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> visited:</span><br><span class=\"line\">            queue += graph[node]</span><br><span class=\"line\">            visited.append(node)</span><br><span class=\"line\">            <span class=\"comment\"># visited 리스트에 노드를 넣을 때마다 count 1씩 증가</span></span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> count</span><br><span class=\"line\"></span><br><span class=\"line\">V = int(input())</span><br><span class=\"line\">E = int(input())</span><br><span class=\"line\"></span><br><span class=\"line\">graph = [[] <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(V+<span class=\"number\">1</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(E):</span><br><span class=\"line\">    a, b = map(int, input().split())</span><br><span class=\"line\">    graph[a].append(b)</span><br><span class=\"line\">    graph[b].append(a)</span><br><span class=\"line\"></span><br><span class=\"line\">print(bfs(<span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Baekjoon Online Judge - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWNtaWNwYy5uZXQvcHJvYmxlbS8yNjA2\" title=\"https://www.acmicpc.net/problem/2606\">2606<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<ul>\n<li>방문한 노드의 갯수를 새면 되는 문제</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> collections</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">bfs</span><span class=\"params\">(start)</span>:</span></span><br><span class=\"line\">    queue = collections.deque()</span><br><span class=\"line\">    visited = [start]</span><br><span class=\"line\">    queue += graph[start]</span><br><span class=\"line\">    count = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> queue:</span><br><span class=\"line\">        node = queue.popleft()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> node <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> visited:</span><br><span class=\"line\">            queue += graph[node]</span><br><span class=\"line\">            visited.append(node)</span><br><span class=\"line\">            <span class=\"comment\"># visited 리스트에 노드를 넣을 때마다 count 1씩 증가</span></span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> count</span><br><span class=\"line\"></span><br><span class=\"line\">V = int(input())</span><br><span class=\"line\">E = int(input())</span><br><span class=\"line\"></span><br><span class=\"line\">graph = [[] <span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(V+<span class=\"number\">1</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> range(E):</span><br><span class=\"line\">    a, b = map(int, input().split())</span><br><span class=\"line\">    graph[a].append(b)</span><br><span class=\"line\">    graph[b].append(a)</span><br><span class=\"line\"></span><br><span class=\"line\">print(bfs(<span class=\"number\">1</span>))</span><br></pre></td></tr></table></figure>\n"},{"title":"[Leetcode/832] Flipping an Image","_content":"> Leetcode - [832](https://leetcode.com/problems/flipping-an-image/)\n\n## 풀이과정\n\n* 각 배열의 값을 좌우 대칭으로 변경하고 값을 반전시켜주면 되는 문제.\n* front, back 변수 두 개 만든 다음, 중간을 기점으로 루프 돌 때마다 front를 증가시키고 back을 감소시켜 변경할 값들의 인덱스를 구한 다음에 값을 swap했다.\n* 그렇게 좌우 대칭한 배열의 값들을 반전시켜주면 끝.\n\n## Code (Javascript)\n\n```js\nvar flipAndInvertImage = function (A) {\n  for (let array of A) {\n    let front = 0;\n    let back = array.length - 1;\n\n    // flip horizontally\n    while (array.length / 2 > front) {\n      // swap\n      let temp;\n      temp = array[front];\n      array[front] = array[back];\n      array[back] = temp;\n\n      front += 1;\n      back -= 1;\n    }\n\n    // invert\n    for (let i = 0; i < A.length; i++) {\n      array[i] = array[i] === 0 ? 1 : 0;\n    }\n  }\n  return A;\n};\n```\n\n요새 리트코드로 많이 풀길래 한번 풀어봄.. 간만에 자바스크립트로 풀었다..\n\n리트코드는 다른 사람 코드 어떻게 보는 건지 모르겠다.. 구글링인가..?\n","source":"_posts/2019-10-17-leetcode-832.md","raw":"---\ntitle: \"[Leetcode/832] Flipping an Image\"\ntags: [Leetcode, algorithm]\ncategories: leetcode\n---\n> Leetcode - [832](https://leetcode.com/problems/flipping-an-image/)\n\n## 풀이과정\n\n* 각 배열의 값을 좌우 대칭으로 변경하고 값을 반전시켜주면 되는 문제.\n* front, back 변수 두 개 만든 다음, 중간을 기점으로 루프 돌 때마다 front를 증가시키고 back을 감소시켜 변경할 값들의 인덱스를 구한 다음에 값을 swap했다.\n* 그렇게 좌우 대칭한 배열의 값들을 반전시켜주면 끝.\n\n## Code (Javascript)\n\n```js\nvar flipAndInvertImage = function (A) {\n  for (let array of A) {\n    let front = 0;\n    let back = array.length - 1;\n\n    // flip horizontally\n    while (array.length / 2 > front) {\n      // swap\n      let temp;\n      temp = array[front];\n      array[front] = array[back];\n      array[back] = temp;\n\n      front += 1;\n      back -= 1;\n    }\n\n    // invert\n    for (let i = 0; i < A.length; i++) {\n      array[i] = array[i] === 0 ? 1 : 0;\n    }\n  }\n  return A;\n};\n```\n\n요새 리트코드로 많이 풀길래 한번 풀어봄.. 간만에 자바스크립트로 풀었다..\n\n리트코드는 다른 사람 코드 어떻게 보는 건지 모르겠다.. 구글링인가..?\n","slug":"leetcode-832","published":1,"date":"2019-10-16T15:00:00.000Z","updated":"2020-05-05T08:00:03.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhp006nuv59ccqdeddc","content":"<blockquote>\n<p>Leetcode - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmxpcHBpbmctYW4taW1hZ2Uv\" title=\"https://leetcode.com/problems/flipping-an-image/\">832<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"풀이과정\"><a href=\"#풀이과정\" class=\"headerlink\" title=\"풀이과정\"></a>풀이과정</h2><ul>\n<li>각 배열의 값을 좌우 대칭으로 변경하고 값을 반전시켜주면 되는 문제.</li>\n<li>front, back 변수 두 개 만든 다음, 중간을 기점으로 루프 돌 때마다 front를 증가시키고 back을 감소시켜 변경할 값들의 인덱스를 구한 다음에 값을 swap했다.</li>\n<li>그렇게 좌우 대칭한 배열의 값들을 반전시켜주면 끝.</li>\n</ul>\n<h2 id=\"Code-Javascript\"><a href=\"#Code-Javascript\" class=\"headerlink\" title=\"Code (Javascript)\"></a>Code (Javascript)</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> flipAndInvertImage = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> array <span class=\"keyword\">of</span> A) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> front = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> back = array.length - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// flip horizontally</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (array.length / <span class=\"number\">2</span> &gt; front) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// swap</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> temp;</span><br><span class=\"line\">      temp = array[front];</span><br><span class=\"line\">      array[front] = array[back];</span><br><span class=\"line\">      array[back] = temp;</span><br><span class=\"line\"></span><br><span class=\"line\">      front += <span class=\"number\">1</span>;</span><br><span class=\"line\">      back -= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// invert</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; A.length; i++) &#123;</span><br><span class=\"line\">      array[i] = array[i] === <span class=\"number\">0</span> ? <span class=\"number\">1</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> A;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>요새 리트코드로 많이 풀길래 한번 풀어봄.. 간만에 자바스크립트로 풀었다..</p>\n<p>리트코드는 다른 사람 코드 어떻게 보는 건지 모르겠다.. 구글링인가..?</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Leetcode - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvZmxpcHBpbmctYW4taW1hZ2Uv\" title=\"https://leetcode.com/problems/flipping-an-image/\">832<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"풀이과정\"><a href=\"#풀이과정\" class=\"headerlink\" title=\"풀이과정\"></a>풀이과정</h2><ul>\n<li>각 배열의 값을 좌우 대칭으로 변경하고 값을 반전시켜주면 되는 문제.</li>\n<li>front, back 변수 두 개 만든 다음, 중간을 기점으로 루프 돌 때마다 front를 증가시키고 back을 감소시켜 변경할 값들의 인덱스를 구한 다음에 값을 swap했다.</li>\n<li>그렇게 좌우 대칭한 배열의 값들을 반전시켜주면 끝.</li>\n</ul>\n<h2 id=\"Code-Javascript\"><a href=\"#Code-Javascript\" class=\"headerlink\" title=\"Code (Javascript)\"></a>Code (Javascript)</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> flipAndInvertImage = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> array <span class=\"keyword\">of</span> A) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> front = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> back = array.length - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// flip horizontally</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (array.length / <span class=\"number\">2</span> &gt; front) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// swap</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> temp;</span><br><span class=\"line\">      temp = array[front];</span><br><span class=\"line\">      array[front] = array[back];</span><br><span class=\"line\">      array[back] = temp;</span><br><span class=\"line\"></span><br><span class=\"line\">      front += <span class=\"number\">1</span>;</span><br><span class=\"line\">      back -= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// invert</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; A.length; i++) &#123;</span><br><span class=\"line\">      array[i] = array[i] === <span class=\"number\">0</span> ? <span class=\"number\">1</span> : <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> A;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>요새 리트코드로 많이 풀길래 한번 풀어봄.. 간만에 자바스크립트로 풀었다..</p>\n<p>리트코드는 다른 사람 코드 어떻게 보는 건지 모르겠다.. 구글링인가..?</p>\n"},{"title":"[Javascript] 해시뱅 (HashBang)","_content":"\n## 해시뱅?\n\n얼마 전 신기한 URL을 봤다.\n\n```text\nwww.test.com/#/\nwww.test.com/#/settings\nwww.test.com/#/register\n```\n\n이런 식으로 URL에 #이 붙는 것이다. 처음에는 뭔지 몰라 그냥 지나갔는데 오늘 이것의 정체가 해시뱅이라는 것을 알게 되었다. 샵 다음에 느낌표(#!)를 붙이기도 하나 보다. 이름부터가 해시뱅(#!)인 걸 보면... 아무튼 해시뱅은 [이 블로그](https://blog.outsider.ne.kr/698)에 엄청나게 자세히 설명이 되어 있다.\n\n블로그 글을 요약하자면, 해시뱅을 사용하는 이유는 **단일 페이지 애플리케이션(SPA)** 구현을 위해서다. 해시뱅을 사용하면 페이지 갱신 없이 URL을 변경할 수 있다. 정확히는 변경되는 것처럼 보이는 거지만. 해시뱅에서 # 다음 부분을 `fragment identifier`라고 하는데, 위 예제에서는 settings, register이 `fragment identifier`가 된다. 해시뱅의 원리는 html의 네임 앵커를 이용한 것이다.\n\n꽤 오래 전에 사용했던 기술이고 지금은 deprecated 되었다. (하지만 내가 사용하게 되는데...)\n\n## React에 해시뱅 적용하기\n\n적용 방법은 단순하다. [HashRouter](https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/docs/api/HashRouter.md)를 사용하면 된다.\n\n`BrowserRouter` 에서\n\n```text\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\n\n\nconst Routes = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nexport default Routes;\n```\n\n`HashRouter`로 바꿔주었다.\n\n```text\nimport React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\n\nconst Routes = () => (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n\nexport default Routes;\n```\n\nHashRouter를 굳이 사용해야 할 이유를 하나 꼽자면 레거시 브라우저(IE9 이하) 지원 정도...? 그 이외에는 사용해야 할 이유를 잘 모르겠다.\n\n## References\n\n* [해시뱅(#!)에 대해서...](https://blog.outsider.ne.kr/698)\n* [What's the shebang/hashbang (#!) in Facebook and new Twitter URLs for?](https://stackoverflow.com/questions/3009380/whats-the-shebang-hashbang-in-facebook-and-new-twitter-urls-for)\n","source":"_posts/2019-10-21-js-hashbang.md","raw":"---\ntitle: \"[Javascript] 해시뱅 (HashBang)\"\ntags: [javascript]\n---\n\n## 해시뱅?\n\n얼마 전 신기한 URL을 봤다.\n\n```text\nwww.test.com/#/\nwww.test.com/#/settings\nwww.test.com/#/register\n```\n\n이런 식으로 URL에 #이 붙는 것이다. 처음에는 뭔지 몰라 그냥 지나갔는데 오늘 이것의 정체가 해시뱅이라는 것을 알게 되었다. 샵 다음에 느낌표(#!)를 붙이기도 하나 보다. 이름부터가 해시뱅(#!)인 걸 보면... 아무튼 해시뱅은 [이 블로그](https://blog.outsider.ne.kr/698)에 엄청나게 자세히 설명이 되어 있다.\n\n블로그 글을 요약하자면, 해시뱅을 사용하는 이유는 **단일 페이지 애플리케이션(SPA)** 구현을 위해서다. 해시뱅을 사용하면 페이지 갱신 없이 URL을 변경할 수 있다. 정확히는 변경되는 것처럼 보이는 거지만. 해시뱅에서 # 다음 부분을 `fragment identifier`라고 하는데, 위 예제에서는 settings, register이 `fragment identifier`가 된다. 해시뱅의 원리는 html의 네임 앵커를 이용한 것이다.\n\n꽤 오래 전에 사용했던 기술이고 지금은 deprecated 되었다. (하지만 내가 사용하게 되는데...)\n\n## React에 해시뱅 적용하기\n\n적용 방법은 단순하다. [HashRouter](https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/docs/api/HashRouter.md)를 사용하면 된다.\n\n`BrowserRouter` 에서\n\n```text\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\n\n\nconst Routes = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nexport default Routes;\n```\n\n`HashRouter`로 바꿔주었다.\n\n```text\nimport React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\n\nconst Routes = () => (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n\nexport default Routes;\n```\n\nHashRouter를 굳이 사용해야 할 이유를 하나 꼽자면 레거시 브라우저(IE9 이하) 지원 정도...? 그 이외에는 사용해야 할 이유를 잘 모르겠다.\n\n## References\n\n* [해시뱅(#!)에 대해서...](https://blog.outsider.ne.kr/698)\n* [What's the shebang/hashbang (#!) in Facebook and new Twitter URLs for?](https://stackoverflow.com/questions/3009380/whats-the-shebang-hashbang-in-facebook-and-new-twitter-urls-for)\n","slug":"js-hashbang","published":1,"date":"2019-10-20T15:00:00.000Z","updated":"2020-05-05T08:00:03.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhq006quv59bwb33r3o","content":"<h2 id=\"해시뱅\"><a href=\"#해시뱅\" class=\"headerlink\" title=\"해시뱅?\"></a>해시뱅?</h2><p>얼마 전 신기한 URL을 봤다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">www.test.com&#x2F;#&#x2F;</span><br><span class=\"line\">www.test.com&#x2F;#&#x2F;settings</span><br><span class=\"line\">www.test.com&#x2F;#&#x2F;register</span><br></pre></td></tr></table></figure>\n\n<p>이런 식으로 URL에 #이 붙는 것이다. 처음에는 뭔지 몰라 그냥 지나갔는데 오늘 이것의 정체가 해시뱅이라는 것을 알게 되었다. 샵 다음에 느낌표(#!)를 붙이기도 하나 보다. 이름부터가 해시뱅(#!)인 걸 보면… 아무튼 해시뱅은 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm91dHNpZGVyLm5lLmtyLzY5OA==\" title=\"https://blog.outsider.ne.kr/698\">이 블로그<i class=\"fa fa-external-link\"></i></span>에 엄청나게 자세히 설명이 되어 있다.</p>\n<p>블로그 글을 요약하자면, 해시뱅을 사용하는 이유는 <strong>단일 페이지 애플리케이션(SPA)</strong> 구현을 위해서다. 해시뱅을 사용하면 페이지 갱신 없이 URL을 변경할 수 있다. 정확히는 변경되는 것처럼 보이는 거지만. 해시뱅에서 # 다음 부분을 <code>fragment identifier</code>라고 하는데, 위 예제에서는 settings, register이 <code>fragment identifier</code>가 된다. 해시뱅의 원리는 html의 네임 앵커를 이용한 것이다.</p>\n<p>꽤 오래 전에 사용했던 기술이고 지금은 deprecated 되었다. (하지만 내가 사용하게 되는데…)</p>\n<h2 id=\"React에-해시뱅-적용하기\"><a href=\"#React에-해시뱅-적용하기\" class=\"headerlink\" title=\"React에 해시뱅 적용하기\"></a>React에 해시뱅 적용하기</h2><p>적용 방법은 단순하다. <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvcmVhY3Qtcm91dGVyL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3JlYWN0LXJvdXRlci1kb20vZG9jcy9hcGkvSGFzaFJvdXRlci5tZA==\" title=\"https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/docs/api/HashRouter.md\">HashRouter<i class=\"fa fa-external-link\"></i></span>를 사용하면 된다.</p>\n<p><code>BrowserRouter</code> 에서</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import React from &#39;react&#39;;</span><br><span class=\"line\">import &#123; BrowserRouter &#125; from &#39;react-router-dom&#39;;</span><br><span class=\"line\">import App from &#39;.&#x2F;components&#x2F;App&#39;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">const Routes &#x3D; () &#x3D;&gt; (</span><br><span class=\"line\">  &lt;BrowserRouter&gt;</span><br><span class=\"line\">    &lt;App &#x2F;&gt;</span><br><span class=\"line\">  &lt;&#x2F;BrowserRouter&gt;</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">export default Routes;</span><br></pre></td></tr></table></figure>\n\n<p><code>HashRouter</code>로 바꿔주었다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import React from &#39;react&#39;;</span><br><span class=\"line\">import &#123; HashRouter &#125; from &#39;react-router-dom&#39;;</span><br><span class=\"line\">import App from &#39;.&#x2F;components&#x2F;App&#39;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">const Routes &#x3D; () &#x3D;&gt; (</span><br><span class=\"line\">  &lt;HashRouter&gt;</span><br><span class=\"line\">    &lt;App &#x2F;&gt;</span><br><span class=\"line\">  &lt;&#x2F;HashRouter&gt;</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">export default Routes;</span><br></pre></td></tr></table></figure>\n\n<p>HashRouter를 굳이 사용해야 할 이유를 하나 꼽자면 레거시 브라우저(IE9 이하) 지원 정도…? 그 이외에는 사용해야 할 이유를 잘 모르겠다.</p>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm91dHNpZGVyLm5lLmtyLzY5OA==\" title=\"https://blog.outsider.ne.kr/698\">해시뱅(#!)에 대해서…<i class=\"fa fa-external-link\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzAwOTM4MC93aGF0cy10aGUtc2hlYmFuZy1oYXNoYmFuZy1pbi1mYWNlYm9vay1hbmQtbmV3LXR3aXR0ZXItdXJscy1mb3I=\" title=\"https://stackoverflow.com/questions/3009380/whats-the-shebang-hashbang-in-facebook-and-new-twitter-urls-for\">What’s the shebang/hashbang (#!) in Facebook and new Twitter URLs for?<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"해시뱅\"><a href=\"#해시뱅\" class=\"headerlink\" title=\"해시뱅?\"></a>해시뱅?</h2><p>얼마 전 신기한 URL을 봤다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">www.test.com&#x2F;#&#x2F;</span><br><span class=\"line\">www.test.com&#x2F;#&#x2F;settings</span><br><span class=\"line\">www.test.com&#x2F;#&#x2F;register</span><br></pre></td></tr></table></figure>\n\n<p>이런 식으로 URL에 #이 붙는 것이다. 처음에는 뭔지 몰라 그냥 지나갔는데 오늘 이것의 정체가 해시뱅이라는 것을 알게 되었다. 샵 다음에 느낌표(#!)를 붙이기도 하나 보다. 이름부터가 해시뱅(#!)인 걸 보면… 아무튼 해시뱅은 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm91dHNpZGVyLm5lLmtyLzY5OA==\" title=\"https://blog.outsider.ne.kr/698\">이 블로그<i class=\"fa fa-external-link\"></i></span>에 엄청나게 자세히 설명이 되어 있다.</p>\n<p>블로그 글을 요약하자면, 해시뱅을 사용하는 이유는 <strong>단일 페이지 애플리케이션(SPA)</strong> 구현을 위해서다. 해시뱅을 사용하면 페이지 갱신 없이 URL을 변경할 수 있다. 정확히는 변경되는 것처럼 보이는 거지만. 해시뱅에서 # 다음 부분을 <code>fragment identifier</code>라고 하는데, 위 예제에서는 settings, register이 <code>fragment identifier</code>가 된다. 해시뱅의 원리는 html의 네임 앵커를 이용한 것이다.</p>\n<p>꽤 오래 전에 사용했던 기술이고 지금은 deprecated 되었다. (하지만 내가 사용하게 되는데…)</p>\n<h2 id=\"React에-해시뱅-적용하기\"><a href=\"#React에-해시뱅-적용하기\" class=\"headerlink\" title=\"React에 해시뱅 적용하기\"></a>React에 해시뱅 적용하기</h2><p>적용 방법은 단순하다. <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JlYWN0VHJhaW5pbmcvcmVhY3Qtcm91dGVyL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3JlYWN0LXJvdXRlci1kb20vZG9jcy9hcGkvSGFzaFJvdXRlci5tZA==\" title=\"https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/docs/api/HashRouter.md\">HashRouter<i class=\"fa fa-external-link\"></i></span>를 사용하면 된다.</p>\n<p><code>BrowserRouter</code> 에서</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import React from &#39;react&#39;;</span><br><span class=\"line\">import &#123; BrowserRouter &#125; from &#39;react-router-dom&#39;;</span><br><span class=\"line\">import App from &#39;.&#x2F;components&#x2F;App&#39;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">const Routes &#x3D; () &#x3D;&gt; (</span><br><span class=\"line\">  &lt;BrowserRouter&gt;</span><br><span class=\"line\">    &lt;App &#x2F;&gt;</span><br><span class=\"line\">  &lt;&#x2F;BrowserRouter&gt;</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">export default Routes;</span><br></pre></td></tr></table></figure>\n\n<p><code>HashRouter</code>로 바꿔주었다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import React from &#39;react&#39;;</span><br><span class=\"line\">import &#123; HashRouter &#125; from &#39;react-router-dom&#39;;</span><br><span class=\"line\">import App from &#39;.&#x2F;components&#x2F;App&#39;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">const Routes &#x3D; () &#x3D;&gt; (</span><br><span class=\"line\">  &lt;HashRouter&gt;</span><br><span class=\"line\">    &lt;App &#x2F;&gt;</span><br><span class=\"line\">  &lt;&#x2F;HashRouter&gt;</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">export default Routes;</span><br></pre></td></tr></table></figure>\n\n<p>HashRouter를 굳이 사용해야 할 이유를 하나 꼽자면 레거시 브라우저(IE9 이하) 지원 정도…? 그 이외에는 사용해야 할 이유를 잘 모르겠다.</p>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLm91dHNpZGVyLm5lLmtyLzY5OA==\" title=\"https://blog.outsider.ne.kr/698\">해시뱅(#!)에 대해서…<i class=\"fa fa-external-link\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzAwOTM4MC93aGF0cy10aGUtc2hlYmFuZy1oYXNoYmFuZy1pbi1mYWNlYm9vay1hbmQtbmV3LXR3aXR0ZXItdXJscy1mb3I=\" title=\"https://stackoverflow.com/questions/3009380/whats-the-shebang-hashbang-in-facebook-and-new-twitter-urls-for\">What’s the shebang/hashbang (#!) in Facebook and new Twitter URLs for?<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n"},{"title":"[프로그래머스] 주식가격","_content":"\n> 프로그래머스 - [스택/큐](https://programmers.co.kr/learn/courses/30/lessons/42584)\n\n## 풀이과정\n\n- 가격이 오르든 안 오르든 일단 1을 증가시킨다.\n- 현재 시점의 가격이 이후 가격보다 클 경우 break를 걸면 된다.\n- 마지막 시점은 무조건 0이니 정답 리스트에 0을 추가하면 된다.\n\n## Code (Python)\n\n```python\ndef solution(prices):\n    answer = []\n    for i in range(len(prices) - 1):\n        count = 0\n        for j in range(i + 1, len(prices)):\n            count += 1\n            if (prices[i] > prices[j]):\n                break\n\n        answer.append(count)\n\n    answer.append(0)\n    return answer\n```\n","source":"_posts/2019-10-22-pgs-42584.md","raw":"---\ntitle: \"[프로그래머스] 주식가격\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [스택/큐](https://programmers.co.kr/learn/courses/30/lessons/42584)\n\n## 풀이과정\n\n- 가격이 오르든 안 오르든 일단 1을 증가시킨다.\n- 현재 시점의 가격이 이후 가격보다 클 경우 break를 걸면 된다.\n- 마지막 시점은 무조건 0이니 정답 리스트에 0을 추가하면 된다.\n\n## Code (Python)\n\n```python\ndef solution(prices):\n    answer = []\n    for i in range(len(prices) - 1):\n        count = 0\n        for j in range(i + 1, len(prices)):\n            count += 1\n            if (prices[i] > prices[j]):\n                break\n\n        answer.append(count)\n\n    answer.append(0)\n    return answer\n```\n","slug":"pgs-42584","published":1,"date":"2019-10-21T15:00:00.000Z","updated":"2020-05-05T08:00:03.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhr006vuv59cpskflqc","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI1ODQ=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42584\">스택/큐<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"풀이과정\"><a href=\"#풀이과정\" class=\"headerlink\" title=\"풀이과정\"></a>풀이과정</h2><ul>\n<li>가격이 오르든 안 오르든 일단 1을 증가시킨다.</li>\n<li>현재 시점의 가격이 이후 가격보다 클 경우 break를 걸면 된다.</li>\n<li>마지막 시점은 무조건 0이니 정답 리스트에 0을 추가하면 된다.</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(prices)</span>:</span></span><br><span class=\"line\">    answer = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(prices) - <span class=\"number\">1</span>):</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i + <span class=\"number\">1</span>, len(prices)):</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (prices[i] &gt; prices[j]):</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">        answer.append(count)</span><br><span class=\"line\"></span><br><span class=\"line\">    answer.append(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI1ODQ=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42584\">스택/큐<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"풀이과정\"><a href=\"#풀이과정\" class=\"headerlink\" title=\"풀이과정\"></a>풀이과정</h2><ul>\n<li>가격이 오르든 안 오르든 일단 1을 증가시킨다.</li>\n<li>현재 시점의 가격이 이후 가격보다 클 경우 break를 걸면 된다.</li>\n<li>마지막 시점은 무조건 0이니 정답 리스트에 0을 추가하면 된다.</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(prices)</span>:</span></span><br><span class=\"line\">    answer = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(prices) - <span class=\"number\">1</span>):</span><br><span class=\"line\">        count = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i + <span class=\"number\">1</span>, len(prices)):</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (prices[i] &gt; prices[j]):</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">        answer.append(count)</span><br><span class=\"line\"></span><br><span class=\"line\">    answer.append(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> answer</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 구명보트","_content":"\n> 프로그래머스 - [탐욕법(Greedy)](https://programmers.co.kr/learn/courses/30/lessons/42885)\n\n## 풀이 과정\n\n이 문제는 O(n^2)로 풀면 시간 초과가 나오는 문제이다.\n\n나는 이 문제를 처음 풀 때, 오름차순으로 정렬한 다음 앞에서부터 차례대로 더해갔는데 이렇게 풀면 무조건 틀린다.\n아래 케이스를 보자.\n\n```text\n[10,20,30,40,50,60,70,80,90], 100\n```\n\n제한 사항에 각 사람의 몸무게는 40kg 이상 240kg으로 되어있지만, 저건 문제를 이해하는데 사용하는 예시이기 때문에 지금은 중요하지 않다.\n\n앞에서부터 차례대로 계산하면\n\n```text\n10, 20, 30, 40\n50\n60\n70\n80\n90\n-> 6\n```\n\n6이 나오지만, 이 예제는 5가 반환되어야 한다.\n\n```text\n10, 90\n20, 80\n30, 70\n40, 60\n50\n-> 5\n```\n\n이렇게 가장 큰 수와 가장 작은 수를 서로 더해주면 최솟값을 구할 수 있다.\n\n이를 구현하려면, 일단 people 배열을 오름차순으로 정렬\b한다.\n그리고 가장 큰 수와 가장 작은 수를 더한 값이 limit보다 작거나 같으면 start와 count를 증가시킨다.\n\n이런 식으로 start와 end가 만나는 지점까지 반복한다.\nstart와 end가 만나는 상황은 비교할 대상이 한개(자기자신)밖에는 없을 때이다.\n그런 경우에는 무조건 혼자 타야하기 때문에 count를 증가시킨다.\n\n가장 작은 수와 가장 큰 수를 더했을 때 limit보다 크면 가장 큰 수는 혼자 타야하기 때문에 count를 증가시킨다.\n\n이렇게 구현하는 경우 반복문 한 번만 사용하기 때문에 시간복잡도는 O(n)이 된다.\n\n## Code (Javascript)\n\n```js\nfunction solution(people, limit) {\n  var count = 0;\n  var start = 0;\n  var end = people.length - 1;\n\n  // 오름차순으로 정렬\n  people.sort(function(a, b) {\n    return a - b;\n  });\n\n  // start와 end가 만나는 지점까지 반복\n  // 뒤에서부터 앞으로 반복한다\n  for (end; end >= start; end--) {\n    // 가장 큰 수와 가장 작은 수를 더한 값이 limit보다 작거나 같으면\n    if (people[end] + people[start] <= limit) {\n      // start 증가\n      start++;\n    }\n    count++;\n  }\n\n  return count;\n}\n```\n\n만만하게 보고 풀었다가 정확도 60점 나와서 당황했고, 고쳐서 풀었더니 시간 초과를 보고, 시간복잡도를 줄일 방법이 도저히 생각나지 않아 결국 구글링을 했다.. 눈물.. ㅋ\n","source":"_posts/2019-10-26-pgs-42885.md","raw":"---\ntitle: \"[프로그래머스] 구명보트\"\ntags: [programmers, algorithm, greedy]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [탐욕법(Greedy)](https://programmers.co.kr/learn/courses/30/lessons/42885)\n\n## 풀이 과정\n\n이 문제는 O(n^2)로 풀면 시간 초과가 나오는 문제이다.\n\n나는 이 문제를 처음 풀 때, 오름차순으로 정렬한 다음 앞에서부터 차례대로 더해갔는데 이렇게 풀면 무조건 틀린다.\n아래 케이스를 보자.\n\n```text\n[10,20,30,40,50,60,70,80,90], 100\n```\n\n제한 사항에 각 사람의 몸무게는 40kg 이상 240kg으로 되어있지만, 저건 문제를 이해하는데 사용하는 예시이기 때문에 지금은 중요하지 않다.\n\n앞에서부터 차례대로 계산하면\n\n```text\n10, 20, 30, 40\n50\n60\n70\n80\n90\n-> 6\n```\n\n6이 나오지만, 이 예제는 5가 반환되어야 한다.\n\n```text\n10, 90\n20, 80\n30, 70\n40, 60\n50\n-> 5\n```\n\n이렇게 가장 큰 수와 가장 작은 수를 서로 더해주면 최솟값을 구할 수 있다.\n\n이를 구현하려면, 일단 people 배열을 오름차순으로 정렬\b한다.\n그리고 가장 큰 수와 가장 작은 수를 더한 값이 limit보다 작거나 같으면 start와 count를 증가시킨다.\n\n이런 식으로 start와 end가 만나는 지점까지 반복한다.\nstart와 end가 만나는 상황은 비교할 대상이 한개(자기자신)밖에는 없을 때이다.\n그런 경우에는 무조건 혼자 타야하기 때문에 count를 증가시킨다.\n\n가장 작은 수와 가장 큰 수를 더했을 때 limit보다 크면 가장 큰 수는 혼자 타야하기 때문에 count를 증가시킨다.\n\n이렇게 구현하는 경우 반복문 한 번만 사용하기 때문에 시간복잡도는 O(n)이 된다.\n\n## Code (Javascript)\n\n```js\nfunction solution(people, limit) {\n  var count = 0;\n  var start = 0;\n  var end = people.length - 1;\n\n  // 오름차순으로 정렬\n  people.sort(function(a, b) {\n    return a - b;\n  });\n\n  // start와 end가 만나는 지점까지 반복\n  // 뒤에서부터 앞으로 반복한다\n  for (end; end >= start; end--) {\n    // 가장 큰 수와 가장 작은 수를 더한 값이 limit보다 작거나 같으면\n    if (people[end] + people[start] <= limit) {\n      // start 증가\n      start++;\n    }\n    count++;\n  }\n\n  return count;\n}\n```\n\n만만하게 보고 풀었다가 정확도 60점 나와서 당황했고, 고쳐서 풀었더니 시간 초과를 보고, 시간복잡도를 줄일 방법이 도저히 생각나지 않아 결국 구글링을 했다.. 눈물.. ㅋ\n","slug":"pgs-42885","published":1,"date":"2019-10-25T15:00:00.000Z","updated":"2020-05-05T08:00:03.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhr006yuv59ewl050gl","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI4ODU=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42885\">탐욕법(Greedy)<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"풀이-과정\"><a href=\"#풀이-과정\" class=\"headerlink\" title=\"풀이 과정\"></a>풀이 과정</h2><p>이 문제는 O(n^2)로 풀면 시간 초과가 나오는 문제이다.</p>\n<p>나는 이 문제를 처음 풀 때, 오름차순으로 정렬한 다음 앞에서부터 차례대로 더해갔는데 이렇게 풀면 무조건 틀린다.<br>아래 케이스를 보자.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[10,20,30,40,50,60,70,80,90], 100</span><br></pre></td></tr></table></figure>\n\n<p>제한 사항에 각 사람의 몸무게는 40kg 이상 240kg으로 되어있지만, 저건 문제를 이해하는데 사용하는 예시이기 때문에 지금은 중요하지 않다.</p>\n<p>앞에서부터 차례대로 계산하면</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10, 20, 30, 40</span><br><span class=\"line\">50</span><br><span class=\"line\">60</span><br><span class=\"line\">70</span><br><span class=\"line\">80</span><br><span class=\"line\">90</span><br><span class=\"line\">-&gt; 6</span><br></pre></td></tr></table></figure>\n\n<p>6이 나오지만, 이 예제는 5가 반환되어야 한다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10, 90</span><br><span class=\"line\">20, 80</span><br><span class=\"line\">30, 70</span><br><span class=\"line\">40, 60</span><br><span class=\"line\">50</span><br><span class=\"line\">-&gt; 5</span><br></pre></td></tr></table></figure>\n\n<p>이렇게 가장 큰 수와 가장 작은 수를 서로 더해주면 최솟값을 구할 수 있다.</p>\n<p>이를 구현하려면, 일단 people 배열을 오름차순으로 정렬\b한다.<br>그리고 가장 큰 수와 가장 작은 수를 더한 값이 limit보다 작거나 같으면 start와 count를 증가시킨다.</p>\n<p>이런 식으로 start와 end가 만나는 지점까지 반복한다.<br>start와 end가 만나는 상황은 비교할 대상이 한개(자기자신)밖에는 없을 때이다.<br>그런 경우에는 무조건 혼자 타야하기 때문에 count를 증가시킨다.</p>\n<p>가장 작은 수와 가장 큰 수를 더했을 때 limit보다 크면 가장 큰 수는 혼자 타야하기 때문에 count를 증가시킨다.</p>\n<p>이렇게 구현하는 경우 반복문 한 번만 사용하기 때문에 시간복잡도는 O(n)이 된다.</p>\n<h2 id=\"Code-Javascript\"><a href=\"#Code-Javascript\" class=\"headerlink\" title=\"Code (Javascript)\"></a>Code (Javascript)</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">solution</span>(<span class=\"params\">people, limit</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> end = people.length - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 오름차순으로 정렬</span></span><br><span class=\"line\">  people.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// start와 end가 만나는 지점까지 반복</span></span><br><span class=\"line\">  <span class=\"comment\">// 뒤에서부터 앞으로 반복한다</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (end; end &gt;= start; end--) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 가장 큰 수와 가장 작은 수를 더한 값이 limit보다 작거나 같으면</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (people[end] + people[start] &lt;= limit) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// start 증가</span></span><br><span class=\"line\">      start++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    count++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>만만하게 보고 풀었다가 정확도 60점 나와서 당황했고, 고쳐서 풀었더니 시간 초과를 보고, 시간복잡도를 줄일 방법이 도저히 생각나지 않아 결국 구글링을 했다.. 눈물.. ㅋ</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI4ODU=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42885\">탐욕법(Greedy)<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"풀이-과정\"><a href=\"#풀이-과정\" class=\"headerlink\" title=\"풀이 과정\"></a>풀이 과정</h2><p>이 문제는 O(n^2)로 풀면 시간 초과가 나오는 문제이다.</p>\n<p>나는 이 문제를 처음 풀 때, 오름차순으로 정렬한 다음 앞에서부터 차례대로 더해갔는데 이렇게 풀면 무조건 틀린다.<br>아래 케이스를 보자.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[10,20,30,40,50,60,70,80,90], 100</span><br></pre></td></tr></table></figure>\n\n<p>제한 사항에 각 사람의 몸무게는 40kg 이상 240kg으로 되어있지만, 저건 문제를 이해하는데 사용하는 예시이기 때문에 지금은 중요하지 않다.</p>\n<p>앞에서부터 차례대로 계산하면</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10, 20, 30, 40</span><br><span class=\"line\">50</span><br><span class=\"line\">60</span><br><span class=\"line\">70</span><br><span class=\"line\">80</span><br><span class=\"line\">90</span><br><span class=\"line\">-&gt; 6</span><br></pre></td></tr></table></figure>\n\n<p>6이 나오지만, 이 예제는 5가 반환되어야 한다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10, 90</span><br><span class=\"line\">20, 80</span><br><span class=\"line\">30, 70</span><br><span class=\"line\">40, 60</span><br><span class=\"line\">50</span><br><span class=\"line\">-&gt; 5</span><br></pre></td></tr></table></figure>\n\n<p>이렇게 가장 큰 수와 가장 작은 수를 서로 더해주면 최솟값을 구할 수 있다.</p>\n<p>이를 구현하려면, 일단 people 배열을 오름차순으로 정렬\b한다.<br>그리고 가장 큰 수와 가장 작은 수를 더한 값이 limit보다 작거나 같으면 start와 count를 증가시킨다.</p>\n<p>이런 식으로 start와 end가 만나는 지점까지 반복한다.<br>start와 end가 만나는 상황은 비교할 대상이 한개(자기자신)밖에는 없을 때이다.<br>그런 경우에는 무조건 혼자 타야하기 때문에 count를 증가시킨다.</p>\n<p>가장 작은 수와 가장 큰 수를 더했을 때 limit보다 크면 가장 큰 수는 혼자 타야하기 때문에 count를 증가시킨다.</p>\n<p>이렇게 구현하는 경우 반복문 한 번만 사용하기 때문에 시간복잡도는 O(n)이 된다.</p>\n<h2 id=\"Code-Javascript\"><a href=\"#Code-Javascript\" class=\"headerlink\" title=\"Code (Javascript)\"></a>Code (Javascript)</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">solution</span>(<span class=\"params\">people, limit</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> end = people.length - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 오름차순으로 정렬</span></span><br><span class=\"line\">  people.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a - b;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// start와 end가 만나는 지점까지 반복</span></span><br><span class=\"line\">  <span class=\"comment\">// 뒤에서부터 앞으로 반복한다</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (end; end &gt;= start; end--) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 가장 큰 수와 가장 작은 수를 더한 값이 limit보다 작거나 같으면</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (people[end] + people[start] &lt;= limit) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// start 증가</span></span><br><span class=\"line\">      start++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    count++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>만만하게 보고 풀었다가 정확도 60점 나와서 당황했고, 고쳐서 풀었더니 시간 초과를 보고, 시간복잡도를 줄일 방법이 도저히 생각나지 않아 결국 구글링을 했다.. 눈물.. ㅋ</p>\n"},{"title":"[프로그래머스] 기능 개발","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/42586)\n\n## 풀이과정\n\n- progresses[0]이 100 이상일 때, 다음 원소가 100 이상일 경우 count 증감\n- count는 array에 push하고, count만큼 배열을 잘라버린다\n- 이렇게 배열에 원소가 없을 때까지 반복한다\n- count가 0 이상일 때만 array에 push해야 하는데 나는 그냥 필터로 함...\n\n## Code (Javascript)\n\n```js\nfunction solution(progresses, speeds) {\n  var array = [];\n  while (progresses.length > 0) {\n    var count = 0;\n    // 개발\n    if (progresses[0] <= 100) {\n      for (var i = 0; i < progresses.length; i++) {\n        progresses[i] = progresses[i] + speeds[i];\n      }\n    }\n\n    // 배포\n    if (progresses[0] >= 100) {\n      for (var progress of progresses) {\n        if (progress >= 100) {\n          count += 1;\n        } else {\n          break;\n        }\n      }\n    }\n    progresses.splice(0, count);\n    speeds.splice(0, count);\n    array.push(count);\n  }\n  var answer = array.filter(el => el > 0);\n  return answer;\n}\n```\n\n## 다른 사람의 코드\n\n`progresses[0] >= 100`일 때 배열 첫 번째 요소 제거 및 count 증감, 그리고 count가 0 이상일 때만 정답 배열에 삽입했다. 깔끔하다...\n\n```js\nfunction solution(progresses, speeds) {\n  var answer = [];\n\n  while (speeds.length > 0) {\n    // 개발\n    for (let i in speeds) {\n      if (progresses[i] < 100) {\n        progresses[i] += speeds[i];\n      }\n    }\n\n    // 배포\n    let deploy_count = 0;\n    while (progresses[0] >= 100) {\n      progresses.shift();\n      speeds.shift();\n      deploy_count++;\n    }\n    if (deploy_count > 0) {\n      answer.push(deploy_count);\n    }\n  }\n\n  return answer;\n}\n```\n","source":"_posts/2019-10-24-pgs-42586.md","raw":"---\ntitle: \"[프로그래머스] 기능 개발\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/42586)\n\n## 풀이과정\n\n- progresses[0]이 100 이상일 때, 다음 원소가 100 이상일 경우 count 증감\n- count는 array에 push하고, count만큼 배열을 잘라버린다\n- 이렇게 배열에 원소가 없을 때까지 반복한다\n- count가 0 이상일 때만 array에 push해야 하는데 나는 그냥 필터로 함...\n\n## Code (Javascript)\n\n```js\nfunction solution(progresses, speeds) {\n  var array = [];\n  while (progresses.length > 0) {\n    var count = 0;\n    // 개발\n    if (progresses[0] <= 100) {\n      for (var i = 0; i < progresses.length; i++) {\n        progresses[i] = progresses[i] + speeds[i];\n      }\n    }\n\n    // 배포\n    if (progresses[0] >= 100) {\n      for (var progress of progresses) {\n        if (progress >= 100) {\n          count += 1;\n        } else {\n          break;\n        }\n      }\n    }\n    progresses.splice(0, count);\n    speeds.splice(0, count);\n    array.push(count);\n  }\n  var answer = array.filter(el => el > 0);\n  return answer;\n}\n```\n\n## 다른 사람의 코드\n\n`progresses[0] >= 100`일 때 배열 첫 번째 요소 제거 및 count 증감, 그리고 count가 0 이상일 때만 정답 배열에 삽입했다. 깔끔하다...\n\n```js\nfunction solution(progresses, speeds) {\n  var answer = [];\n\n  while (speeds.length > 0) {\n    // 개발\n    for (let i in speeds) {\n      if (progresses[i] < 100) {\n        progresses[i] += speeds[i];\n      }\n    }\n\n    // 배포\n    let deploy_count = 0;\n    while (progresses[0] >= 100) {\n      progresses.shift();\n      speeds.shift();\n      deploy_count++;\n    }\n    if (deploy_count > 0) {\n      answer.push(deploy_count);\n    }\n  }\n\n  return answer;\n}\n```\n","slug":"pgs-42586","published":1,"date":"2019-10-23T15:00:00.000Z","updated":"2020-05-05T08:00:03.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhs0071uv5964r00bwm","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI1ODY=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42586\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"풀이과정\"><a href=\"#풀이과정\" class=\"headerlink\" title=\"풀이과정\"></a>풀이과정</h2><ul>\n<li>progresses[0]이 100 이상일 때, 다음 원소가 100 이상일 경우 count 증감</li>\n<li>count는 array에 push하고, count만큼 배열을 잘라버린다</li>\n<li>이렇게 배열에 원소가 없을 때까지 반복한다</li>\n<li>count가 0 이상일 때만 array에 push해야 하는데 나는 그냥 필터로 함…</li>\n</ul>\n<h2 id=\"Code-Javascript\"><a href=\"#Code-Javascript\" class=\"headerlink\" title=\"Code (Javascript)\"></a>Code (Javascript)</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">solution</span>(<span class=\"params\">progresses, speeds</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> array = [];</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (progresses.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 개발</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (progresses[<span class=\"number\">0</span>] &lt;= <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; progresses.length; i++) &#123;</span><br><span class=\"line\">        progresses[i] = progresses[i] + speeds[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 배포</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (progresses[<span class=\"number\">0</span>] &gt;= <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> progress <span class=\"keyword\">of</span> progresses) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (progress &gt;= <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">          count += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    progresses.splice(<span class=\"number\">0</span>, count);</span><br><span class=\"line\">    speeds.splice(<span class=\"number\">0</span>, count);</span><br><span class=\"line\">    array.push(count);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> answer = array.filter(<span class=\"function\"><span class=\"params\">el</span> =&gt;</span> el &gt; <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> answer;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"다른-사람의-코드\"><a href=\"#다른-사람의-코드\" class=\"headerlink\" title=\"다른 사람의 코드\"></a>다른 사람의 코드</h2><p><code>progresses[0] &gt;= 100</code>일 때 배열 첫 번째 요소 제거 및 count 증감, 그리고 count가 0 이상일 때만 정답 배열에 삽입했다. 깔끔하다…</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">solution</span>(<span class=\"params\">progresses, speeds</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> answer = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (speeds.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 개발</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> speeds) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (progresses[i] &lt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">        progresses[i] += speeds[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 배포</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> deploy_count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (progresses[<span class=\"number\">0</span>] &gt;= <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">      progresses.shift();</span><br><span class=\"line\">      speeds.shift();</span><br><span class=\"line\">      deploy_count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (deploy_count &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      answer.push(deploy_count);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> answer;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvNDI1ODY=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/42586\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"풀이과정\"><a href=\"#풀이과정\" class=\"headerlink\" title=\"풀이과정\"></a>풀이과정</h2><ul>\n<li>progresses[0]이 100 이상일 때, 다음 원소가 100 이상일 경우 count 증감</li>\n<li>count는 array에 push하고, count만큼 배열을 잘라버린다</li>\n<li>이렇게 배열에 원소가 없을 때까지 반복한다</li>\n<li>count가 0 이상일 때만 array에 push해야 하는데 나는 그냥 필터로 함…</li>\n</ul>\n<h2 id=\"Code-Javascript\"><a href=\"#Code-Javascript\" class=\"headerlink\" title=\"Code (Javascript)\"></a>Code (Javascript)</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">solution</span>(<span class=\"params\">progresses, speeds</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> array = [];</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (progresses.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 개발</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (progresses[<span class=\"number\">0</span>] &lt;= <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; progresses.length; i++) &#123;</span><br><span class=\"line\">        progresses[i] = progresses[i] + speeds[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 배포</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (progresses[<span class=\"number\">0</span>] &gt;= <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> progress <span class=\"keyword\">of</span> progresses) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (progress &gt;= <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">          count += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    progresses.splice(<span class=\"number\">0</span>, count);</span><br><span class=\"line\">    speeds.splice(<span class=\"number\">0</span>, count);</span><br><span class=\"line\">    array.push(count);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> answer = array.filter(<span class=\"function\"><span class=\"params\">el</span> =&gt;</span> el &gt; <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> answer;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"다른-사람의-코드\"><a href=\"#다른-사람의-코드\" class=\"headerlink\" title=\"다른 사람의 코드\"></a>다른 사람의 코드</h2><p><code>progresses[0] &gt;= 100</code>일 때 배열 첫 번째 요소 제거 및 count 증감, 그리고 count가 0 이상일 때만 정답 배열에 삽입했다. 깔끔하다…</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">solution</span>(<span class=\"params\">progresses, speeds</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> answer = [];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (speeds.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 개발</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> speeds) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (progresses[i] &lt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">        progresses[i] += speeds[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 배포</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> deploy_count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (progresses[<span class=\"number\">0</span>] &gt;= <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">      progresses.shift();</span><br><span class=\"line\">      speeds.shift();</span><br><span class=\"line\">      deploy_count++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (deploy_count &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      answer.push(deploy_count);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> answer;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"[프로그래머스] 올바른 괄호","_content":"\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12909)\n\n## 풀이과정\n\n- '(' 면 count를 1 증가시키고 ')'면 1을 감소시킨다.\n- 만약 count가 0보다 작으면 중간에 ')'이 나온 경우이니 반복문을 멈춘다.\n- count가 0인 경우에는 올바른 괄호이니 true 반환.\n- count가 0이 아니고, 시작이 ')'이거나 끝이 '('라면 올바른 괄호가 아니니 false 반환.\n\n## Code (Python)\n\n```python\ndef solution(s):\n    count = 0;\n\n    for string in s:\n        if string == '(':\n            count += 1\n        else:\n            count -= 1\n        if count < 0:\n            break\n    if count != 0 or s[0] == ')' or s[len(s) - 1] == '(':\n        return False\n    else:\n        return True\n```\n\n어디서 많이 봤던 문제다 했더니 [백준 괄호](https://seonghui.github.io/bj-9012/)랑 똑같은 문제였네... 그때는 왜 이렇게 힘들게 풀었을까.\n","source":"_posts/2019-10-23-pgs-12909.md","raw":"---\ntitle: \"[프로그래머스] 올바른 괄호\"\ntags: [programmers, algorithm]\ncategories: 프로그래머스\n---\n\n> 프로그래머스 - [연습 문제](https://programmers.co.kr/learn/courses/30/lessons/12909)\n\n## 풀이과정\n\n- '(' 면 count를 1 증가시키고 ')'면 1을 감소시킨다.\n- 만약 count가 0보다 작으면 중간에 ')'이 나온 경우이니 반복문을 멈춘다.\n- count가 0인 경우에는 올바른 괄호이니 true 반환.\n- count가 0이 아니고, 시작이 ')'이거나 끝이 '('라면 올바른 괄호가 아니니 false 반환.\n\n## Code (Python)\n\n```python\ndef solution(s):\n    count = 0;\n\n    for string in s:\n        if string == '(':\n            count += 1\n        else:\n            count -= 1\n        if count < 0:\n            break\n    if count != 0 or s[0] == ')' or s[len(s) - 1] == '(':\n        return False\n    else:\n        return True\n```\n\n어디서 많이 봤던 문제다 했더니 [백준 괄호](https://seonghui.github.io/bj-9012/)랑 똑같은 문제였네... 그때는 왜 이렇게 힘들게 풀었을까.\n","slug":"pgs-12909","published":1,"date":"2019-10-22T15:00:00.000Z","updated":"2020-05-05T08:00:03.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afht0075uv5956uy487v","content":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5MDk=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12909\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"풀이과정\"><a href=\"#풀이과정\" class=\"headerlink\" title=\"풀이과정\"></a>풀이과정</h2><ul>\n<li>‘(‘ 면 count를 1 증가시키고 ‘)’면 1을 감소시킨다.</li>\n<li>만약 count가 0보다 작으면 중간에 ‘)’이 나온 경우이니 반복문을 멈춘다.</li>\n<li>count가 0인 경우에는 올바른 괄호이니 true 반환.</li>\n<li>count가 0이 아니고, 시작이 ‘)’이거나 끝이 ‘(‘라면 올바른 괄호가 아니니 false 반환.</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    count = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> string <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> string == <span class=\"string\">'('</span>:</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            count -= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> count != <span class=\"number\">0</span> <span class=\"keyword\">or</span> s[<span class=\"number\">0</span>] == <span class=\"string\">')'</span> <span class=\"keyword\">or</span> s[len(s) - <span class=\"number\">1</span>] == <span class=\"string\">'('</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n\n<p>어디서 많이 봤던 문제다 했더니 <a href=\"https://seonghui.github.io/bj-9012/\">백준 괄호</a>랑 똑같은 문제였네… 그때는 왜 이렇게 힘들게 풀었을까.</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>프로그래머스 - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcm9ncmFtbWVycy5jby5rci9sZWFybi9jb3Vyc2VzLzMwL2xlc3NvbnMvMTI5MDk=\" title=\"https://programmers.co.kr/learn/courses/30/lessons/12909\">연습 문제<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"풀이과정\"><a href=\"#풀이과정\" class=\"headerlink\" title=\"풀이과정\"></a>풀이과정</h2><ul>\n<li>‘(‘ 면 count를 1 증가시키고 ‘)’면 1을 감소시킨다.</li>\n<li>만약 count가 0보다 작으면 중간에 ‘)’이 나온 경우이니 반복문을 멈춘다.</li>\n<li>count가 0인 경우에는 올바른 괄호이니 true 반환.</li>\n<li>count가 0이 아니고, 시작이 ‘)’이거나 끝이 ‘(‘라면 올바른 괄호가 아니니 false 반환.</li>\n</ul>\n<h2 id=\"Code-Python\"><a href=\"#Code-Python\" class=\"headerlink\" title=\"Code (Python)\"></a>Code (Python)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">solution</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    count = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> string <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> string == <span class=\"string\">'('</span>:</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            count -= <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> count &lt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> count != <span class=\"number\">0</span> <span class=\"keyword\">or</span> s[<span class=\"number\">0</span>] == <span class=\"string\">')'</span> <span class=\"keyword\">or</span> s[len(s) - <span class=\"number\">1</span>] == <span class=\"string\">'('</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n\n<p>어디서 많이 봤던 문제다 했더니 <a href=\"https://seonghui.github.io/bj-9012/\">백준 괄호</a>랑 똑같은 문제였네… 그때는 왜 이렇게 힘들게 풀었을까.</p>\n"},{"title":"[React] index.html에는 index.js를 불러오는 코드가 없는데, index.js는 어떻게 index.html 파일 내에 있는 root div를 참조하는 것일까?","_content":"\ncreate-react-app으로 리액트 프로젝트를 생성해 보자. create-react-app은 리액트의 보일러 플레이트 코드를 생성하기 때문에 직접 개발 환경을 구성하지 않더라도 별도의 설정 없이 프로젝트를 바로 시작할 수 있다.\n\npackage.json 내의 script 명령을 보면 이런 게 있다.\n\n    \"start\": \"react-scripts start\",\n\n이 코드는 node_modules./bin 폴더에 있는 react-scripts.js 파일을 실행시킨다.\n\nreact-scripts는 create-react-app의 스크립트를 모아놓은 곳이다. react-scripts start는 개발 환경을 셋업하고, 핫 리로딩이 적용된 서버를 실행시킨다.\n\nreact-scripts.js 파일을 열어보면 대략 다음과 같이 되어있다.\n\n    ...생략\n    if (['build', 'eject', 'start', 'test'].includes(script)) {\n      const result = spawn.sync(\n        'node',\n        nodeArgs\n          .concat(require.resolve('../scripts/' + script))\n          .concat(args.slice(scriptIndex + 1)),\n        { stdio: 'inherit' }\n      );\n      ...생략\n      process.exit(result.status);\n    }\n    ...생략\n\nbuild, eject, start, test 키워드가 있을 경우, `../scripts/` 폴더 내의 파일을 찾게 된다.\n\n![example](/images/react-index/index-1.png)\n\nreact-scripts start 명령어의 경우, 키워드는 start니까 `../scripts/` 폴더 내에 있는 start.js 파일을 열어보자.\n\n    ...생략\n    const paths = require('../config/paths');\n\n    // Warn and crash if required files are missing\n    if (!checkRequiredFiles([paths.appHtml, paths.appIndexJs])) {\n      process.exit(1);\n    }\n    ...생략\n\n`checkRequiredFiles()` 로 배열 내의 파일 경로가 유효한 경로인지 확인한다. `checkRequiredFiles()` 는 react-dev-utill 내에 있다. 만약 파일이 없거나 경로가 유효하지 확인하고, 전부 존재한다면 if문 아래에 있는 개발 서버 실행 코드를 실행시킨다.\n\n`../config/paths` 내에 있는 paths.appHtml, paths.appIndexJs을 확인해보자.\n\npaths.js 파일은 eject 이전의 경로, eject 이후의 경로 그리고 publish 이전의 경로를 나눠서 관리한다.\n\n    const moduleFileExtensions = [\n      'web.mjs',\n      'mjs',\n      'web.js',\n      'js',\n      'web.ts',\n      'ts',\n      'web.tsx',\n      'tsx',\n      'json',\n      'web.jsx',\n      'jsx',\n    ];\n\n    const resolveModule = (resolveFn, filePath) => {\n      const extension = moduleFileExtensions.find(extension =>\n        fs.existsSync(resolveFn(`${filePath}.${extension}`))\n      );\n\n      if (extension) {\n        return resolveFn(`${filePath}.${extension}`);\n      }\n\n      return resolveFn(`${filePath}.js`);\n    };\n\n    const resolveOwn = relativePath => path.resolve(__dirname, '..', relativePath);\n\n    module.exports = {\n        appHtml: resolveOwn('template/public/index.html'),\n        appIndexJs: resolveModule(resolveOwn, 'template/src/index'),\n    };\n\n`resolveModule(resolveOwn, 'template/src/index')` 인 이유는 appIndexJs가 자바스크립트 파일이 아닐 수도 있기 때문이다. (ts, jsx 등등...)\n\nresolveOwn()을 호출하면 현재 모듈의 디렉토리 이름을 포함한 경로를 반환한다.\n\nresolveModule()에 resolveOwn()함수와 `template/src/index` 를 넘기면 현재 모듈의 디렉토리 + 파일 경로 + 확장자를 합쳐 경로를 만들고 resolveOwn()를 호출하게 된다.\n\n결론적으로는 현재 프로젝트에 있는 index.js와 index.html가 존재하는지 파악해, 경로에 파일이 존재하는 경우 개발 서버를 실행시키는 거라 할 수 있겠다.\n\n# References\n\n- [https://stackoverflow.com/questions/41738421/how-react-js-index-js-file-contacting-index-html-for-id-references](https://stackoverflow.com/questions/41738421/how-react-js-index-js-file-contacting-index-html-for-id-references)\n- [https://stackoverflow.com/questions/50722133/what-exactly-is-the-react-scripts-start-command](https://stackoverflow.com/questions/50722133/what-exactly-is-the-react-scripts-start-command)\n","source":"_posts/2019-11-25-react-index.md","raw":"---\ntitle: \"[React] index.html에는 index.js를 불러오는 코드가 없는데, index.js는 어떻게 index.html 파일 내에 있는 root div를 참조하는 것일까?\"\ntags: [react]\ncategories: React\n---\n\ncreate-react-app으로 리액트 프로젝트를 생성해 보자. create-react-app은 리액트의 보일러 플레이트 코드를 생성하기 때문에 직접 개발 환경을 구성하지 않더라도 별도의 설정 없이 프로젝트를 바로 시작할 수 있다.\n\npackage.json 내의 script 명령을 보면 이런 게 있다.\n\n    \"start\": \"react-scripts start\",\n\n이 코드는 node_modules./bin 폴더에 있는 react-scripts.js 파일을 실행시킨다.\n\nreact-scripts는 create-react-app의 스크립트를 모아놓은 곳이다. react-scripts start는 개발 환경을 셋업하고, 핫 리로딩이 적용된 서버를 실행시킨다.\n\nreact-scripts.js 파일을 열어보면 대략 다음과 같이 되어있다.\n\n    ...생략\n    if (['build', 'eject', 'start', 'test'].includes(script)) {\n      const result = spawn.sync(\n        'node',\n        nodeArgs\n          .concat(require.resolve('../scripts/' + script))\n          .concat(args.slice(scriptIndex + 1)),\n        { stdio: 'inherit' }\n      );\n      ...생략\n      process.exit(result.status);\n    }\n    ...생략\n\nbuild, eject, start, test 키워드가 있을 경우, `../scripts/` 폴더 내의 파일을 찾게 된다.\n\n![example](/images/react-index/index-1.png)\n\nreact-scripts start 명령어의 경우, 키워드는 start니까 `../scripts/` 폴더 내에 있는 start.js 파일을 열어보자.\n\n    ...생략\n    const paths = require('../config/paths');\n\n    // Warn and crash if required files are missing\n    if (!checkRequiredFiles([paths.appHtml, paths.appIndexJs])) {\n      process.exit(1);\n    }\n    ...생략\n\n`checkRequiredFiles()` 로 배열 내의 파일 경로가 유효한 경로인지 확인한다. `checkRequiredFiles()` 는 react-dev-utill 내에 있다. 만약 파일이 없거나 경로가 유효하지 확인하고, 전부 존재한다면 if문 아래에 있는 개발 서버 실행 코드를 실행시킨다.\n\n`../config/paths` 내에 있는 paths.appHtml, paths.appIndexJs을 확인해보자.\n\npaths.js 파일은 eject 이전의 경로, eject 이후의 경로 그리고 publish 이전의 경로를 나눠서 관리한다.\n\n    const moduleFileExtensions = [\n      'web.mjs',\n      'mjs',\n      'web.js',\n      'js',\n      'web.ts',\n      'ts',\n      'web.tsx',\n      'tsx',\n      'json',\n      'web.jsx',\n      'jsx',\n    ];\n\n    const resolveModule = (resolveFn, filePath) => {\n      const extension = moduleFileExtensions.find(extension =>\n        fs.existsSync(resolveFn(`${filePath}.${extension}`))\n      );\n\n      if (extension) {\n        return resolveFn(`${filePath}.${extension}`);\n      }\n\n      return resolveFn(`${filePath}.js`);\n    };\n\n    const resolveOwn = relativePath => path.resolve(__dirname, '..', relativePath);\n\n    module.exports = {\n        appHtml: resolveOwn('template/public/index.html'),\n        appIndexJs: resolveModule(resolveOwn, 'template/src/index'),\n    };\n\n`resolveModule(resolveOwn, 'template/src/index')` 인 이유는 appIndexJs가 자바스크립트 파일이 아닐 수도 있기 때문이다. (ts, jsx 등등...)\n\nresolveOwn()을 호출하면 현재 모듈의 디렉토리 이름을 포함한 경로를 반환한다.\n\nresolveModule()에 resolveOwn()함수와 `template/src/index` 를 넘기면 현재 모듈의 디렉토리 + 파일 경로 + 확장자를 합쳐 경로를 만들고 resolveOwn()를 호출하게 된다.\n\n결론적으로는 현재 프로젝트에 있는 index.js와 index.html가 존재하는지 파악해, 경로에 파일이 존재하는 경우 개발 서버를 실행시키는 거라 할 수 있겠다.\n\n# References\n\n- [https://stackoverflow.com/questions/41738421/how-react-js-index-js-file-contacting-index-html-for-id-references](https://stackoverflow.com/questions/41738421/how-react-js-index-js-file-contacting-index-html-for-id-references)\n- [https://stackoverflow.com/questions/50722133/what-exactly-is-the-react-scripts-start-command](https://stackoverflow.com/questions/50722133/what-exactly-is-the-react-scripts-start-command)\n","slug":"react-index","published":1,"date":"2019-11-24T15:00:00.000Z","updated":"2020-05-05T08:00:03.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afht0078uv59bm3qe97i","content":"<p>create-react-app으로 리액트 프로젝트를 생성해 보자. create-react-app은 리액트의 보일러 플레이트 코드를 생성하기 때문에 직접 개발 환경을 구성하지 않더라도 별도의 설정 없이 프로젝트를 바로 시작할 수 있다.</p>\n<p>package.json 내의 script 명령을 보면 이런 게 있다.</p>\n<pre><code>&quot;start&quot;: &quot;react-scripts start&quot;,</code></pre><p>이 코드는 node_modules./bin 폴더에 있는 react-scripts.js 파일을 실행시킨다.</p>\n<p>react-scripts는 create-react-app의 스크립트를 모아놓은 곳이다. react-scripts start는 개발 환경을 셋업하고, 핫 리로딩이 적용된 서버를 실행시킨다.</p>\n<p>react-scripts.js 파일을 열어보면 대략 다음과 같이 되어있다.</p>\n<pre><code>...생략\nif ([&apos;build&apos;, &apos;eject&apos;, &apos;start&apos;, &apos;test&apos;].includes(script)) {\n  const result = spawn.sync(\n    &apos;node&apos;,\n    nodeArgs\n      .concat(require.resolve(&apos;../scripts/&apos; + script))\n      .concat(args.slice(scriptIndex + 1)),\n    { stdio: &apos;inherit&apos; }\n  );\n  ...생략\n  process.exit(result.status);\n}\n...생략</code></pre><p>build, eject, start, test 키워드가 있을 경우, <code>../scripts/</code> 폴더 내의 파일을 찾게 된다.</p>\n<p><img src=\"/images/react-index/index-1.png\" alt=\"example\"></p>\n<p>react-scripts start 명령어의 경우, 키워드는 start니까 <code>../scripts/</code> 폴더 내에 있는 start.js 파일을 열어보자.</p>\n<pre><code>...생략\nconst paths = require(&apos;../config/paths&apos;);\n\n// Warn and crash if required files are missing\nif (!checkRequiredFiles([paths.appHtml, paths.appIndexJs])) {\n  process.exit(1);\n}\n...생략</code></pre><p><code>checkRequiredFiles()</code> 로 배열 내의 파일 경로가 유효한 경로인지 확인한다. <code>checkRequiredFiles()</code> 는 react-dev-utill 내에 있다. 만약 파일이 없거나 경로가 유효하지 확인하고, 전부 존재한다면 if문 아래에 있는 개발 서버 실행 코드를 실행시킨다.</p>\n<p><code>../config/paths</code> 내에 있는 paths.appHtml, paths.appIndexJs을 확인해보자.</p>\n<p>paths.js 파일은 eject 이전의 경로, eject 이후의 경로 그리고 publish 이전의 경로를 나눠서 관리한다.</p>\n<pre><code>const moduleFileExtensions = [\n  &apos;web.mjs&apos;,\n  &apos;mjs&apos;,\n  &apos;web.js&apos;,\n  &apos;js&apos;,\n  &apos;web.ts&apos;,\n  &apos;ts&apos;,\n  &apos;web.tsx&apos;,\n  &apos;tsx&apos;,\n  &apos;json&apos;,\n  &apos;web.jsx&apos;,\n  &apos;jsx&apos;,\n];\n\nconst resolveModule = (resolveFn, filePath) =&gt; {\n  const extension = moduleFileExtensions.find(extension =&gt;\n    fs.existsSync(resolveFn(`${filePath}.${extension}`))\n  );\n\n  if (extension) {\n    return resolveFn(`${filePath}.${extension}`);\n  }\n\n  return resolveFn(`${filePath}.js`);\n};\n\nconst resolveOwn = relativePath =&gt; path.resolve(__dirname, &apos;..&apos;, relativePath);\n\nmodule.exports = {\n    appHtml: resolveOwn(&apos;template/public/index.html&apos;),\n    appIndexJs: resolveModule(resolveOwn, &apos;template/src/index&apos;),\n};</code></pre><p><code>resolveModule(resolveOwn, &#39;template/src/index&#39;)</code> 인 이유는 appIndexJs가 자바스크립트 파일이 아닐 수도 있기 때문이다. (ts, jsx 등등…)</p>\n<p>resolveOwn()을 호출하면 현재 모듈의 디렉토리 이름을 포함한 경로를 반환한다.</p>\n<p>resolveModule()에 resolveOwn()함수와 <code>template/src/index</code> 를 넘기면 현재 모듈의 디렉토리 + 파일 경로 + 확장자를 합쳐 경로를 만들고 resolveOwn()를 호출하게 된다.</p>\n<p>결론적으로는 현재 프로젝트에 있는 index.js와 index.html가 존재하는지 파악해, 경로에 파일이 존재하는 경우 개발 서버를 실행시키는 거라 할 수 있겠다.</p>\n<h1 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h1><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDE3Mzg0MjEvaG93LXJlYWN0LWpzLWluZGV4LWpzLWZpbGUtY29udGFjdGluZy1pbmRleC1odG1sLWZvci1pZC1yZWZlcmVuY2Vz\" title=\"https://stackoverflow.com/questions/41738421/how-react-js-index-js-file-contacting-index-html-for-id-references\">https://stackoverflow.com/questions/41738421/how-react-js-index-js-file-contacting-index-html-for-id-references<i class=\"fa fa-external-link\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTA3MjIxMzMvd2hhdC1leGFjdGx5LWlzLXRoZS1yZWFjdC1zY3JpcHRzLXN0YXJ0LWNvbW1hbmQ=\" title=\"https://stackoverflow.com/questions/50722133/what-exactly-is-the-react-scripts-start-command\">https://stackoverflow.com/questions/50722133/what-exactly-is-the-react-scripts-start-command<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>create-react-app으로 리액트 프로젝트를 생성해 보자. create-react-app은 리액트의 보일러 플레이트 코드를 생성하기 때문에 직접 개발 환경을 구성하지 않더라도 별도의 설정 없이 프로젝트를 바로 시작할 수 있다.</p>\n<p>package.json 내의 script 명령을 보면 이런 게 있다.</p>\n<pre><code>&quot;start&quot;: &quot;react-scripts start&quot;,</code></pre><p>이 코드는 node_modules./bin 폴더에 있는 react-scripts.js 파일을 실행시킨다.</p>\n<p>react-scripts는 create-react-app의 스크립트를 모아놓은 곳이다. react-scripts start는 개발 환경을 셋업하고, 핫 리로딩이 적용된 서버를 실행시킨다.</p>\n<p>react-scripts.js 파일을 열어보면 대략 다음과 같이 되어있다.</p>\n<pre><code>...생략\nif ([&apos;build&apos;, &apos;eject&apos;, &apos;start&apos;, &apos;test&apos;].includes(script)) {\n  const result = spawn.sync(\n    &apos;node&apos;,\n    nodeArgs\n      .concat(require.resolve(&apos;../scripts/&apos; + script))\n      .concat(args.slice(scriptIndex + 1)),\n    { stdio: &apos;inherit&apos; }\n  );\n  ...생략\n  process.exit(result.status);\n}\n...생략</code></pre><p>build, eject, start, test 키워드가 있을 경우, <code>../scripts/</code> 폴더 내의 파일을 찾게 된다.</p>\n<p><img src=\"/images/react-index/index-1.png\" alt=\"example\"></p>\n<p>react-scripts start 명령어의 경우, 키워드는 start니까 <code>../scripts/</code> 폴더 내에 있는 start.js 파일을 열어보자.</p>\n<pre><code>...생략\nconst paths = require(&apos;../config/paths&apos;);\n\n// Warn and crash if required files are missing\nif (!checkRequiredFiles([paths.appHtml, paths.appIndexJs])) {\n  process.exit(1);\n}\n...생략</code></pre><p><code>checkRequiredFiles()</code> 로 배열 내의 파일 경로가 유효한 경로인지 확인한다. <code>checkRequiredFiles()</code> 는 react-dev-utill 내에 있다. 만약 파일이 없거나 경로가 유효하지 확인하고, 전부 존재한다면 if문 아래에 있는 개발 서버 실행 코드를 실행시킨다.</p>\n<p><code>../config/paths</code> 내에 있는 paths.appHtml, paths.appIndexJs을 확인해보자.</p>\n<p>paths.js 파일은 eject 이전의 경로, eject 이후의 경로 그리고 publish 이전의 경로를 나눠서 관리한다.</p>\n<pre><code>const moduleFileExtensions = [\n  &apos;web.mjs&apos;,\n  &apos;mjs&apos;,\n  &apos;web.js&apos;,\n  &apos;js&apos;,\n  &apos;web.ts&apos;,\n  &apos;ts&apos;,\n  &apos;web.tsx&apos;,\n  &apos;tsx&apos;,\n  &apos;json&apos;,\n  &apos;web.jsx&apos;,\n  &apos;jsx&apos;,\n];\n\nconst resolveModule = (resolveFn, filePath) =&gt; {\n  const extension = moduleFileExtensions.find(extension =&gt;\n    fs.existsSync(resolveFn(`${filePath}.${extension}`))\n  );\n\n  if (extension) {\n    return resolveFn(`${filePath}.${extension}`);\n  }\n\n  return resolveFn(`${filePath}.js`);\n};\n\nconst resolveOwn = relativePath =&gt; path.resolve(__dirname, &apos;..&apos;, relativePath);\n\nmodule.exports = {\n    appHtml: resolveOwn(&apos;template/public/index.html&apos;),\n    appIndexJs: resolveModule(resolveOwn, &apos;template/src/index&apos;),\n};</code></pre><p><code>resolveModule(resolveOwn, &#39;template/src/index&#39;)</code> 인 이유는 appIndexJs가 자바스크립트 파일이 아닐 수도 있기 때문이다. (ts, jsx 등등…)</p>\n<p>resolveOwn()을 호출하면 현재 모듈의 디렉토리 이름을 포함한 경로를 반환한다.</p>\n<p>resolveModule()에 resolveOwn()함수와 <code>template/src/index</code> 를 넘기면 현재 모듈의 디렉토리 + 파일 경로 + 확장자를 합쳐 경로를 만들고 resolveOwn()를 호출하게 된다.</p>\n<p>결론적으로는 현재 프로젝트에 있는 index.js와 index.html가 존재하는지 파악해, 경로에 파일이 존재하는 경우 개발 서버를 실행시키는 거라 할 수 있겠다.</p>\n<h1 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h1><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDE3Mzg0MjEvaG93LXJlYWN0LWpzLWluZGV4LWpzLWZpbGUtY29udGFjdGluZy1pbmRleC1odG1sLWZvci1pZC1yZWZlcmVuY2Vz\" title=\"https://stackoverflow.com/questions/41738421/how-react-js-index-js-file-contacting-index-html-for-id-references\">https://stackoverflow.com/questions/41738421/how-react-js-index-js-file-contacting-index-html-for-id-references<i class=\"fa fa-external-link\"></i></span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNTA3MjIxMzMvd2hhdC1leGFjdGx5LWlzLXRoZS1yZWFjdC1zY3JpcHRzLXN0YXJ0LWNvbW1hbmQ=\" title=\"https://stackoverflow.com/questions/50722133/what-exactly-is-the-react-scripts-start-command\">https://stackoverflow.com/questions/50722133/what-exactly-is-the-react-scripts-start-command<i class=\"fa fa-external-link\"></i></span></li>\n</ul>\n"},{"title":"[Leetcode] valid-parentheses","_content":"\n> Leetcode - [20](https://leetcode.com/problems/valid-parentheses/submissions/)\n\n## Code 1 (Javascript)\n\n1. ({[ 은 배열에 push 한다.\n2. ]}) 은 짝이 맞을 경우 pop을 한다. 이때 배열의 가장 마지막 요소를 체크하면 된다. 만약 짝이 맞지 않을 경우 false를 반환한다.\n3. 배열에 아무것도 없으면 짝이 맞는 거니까 true를 반환한다.\n\n```js\nvar isValid = function(s) {\n  let array = [];\n  for (char of s) {\n    switch (char) {\n      case \")\":\n        if (array[array.length - 1] === \"(\") {\n          array.pop();\n        } else {\n          return false;\n        }\n        break;\n      case \"}\":\n        if (array[array.length - 1] === \"{\") {\n          array.pop();\n        } else {\n          return false;\n        }\n        break;\n      case \"]\":\n        if (array[array.length - 1] === \"[\") {\n          array.pop();\n        } else {\n          return false;\n        }\n        break;\n      default:\n        array.push(char);\n    }\n  }\n  return array.length ? false : true;\n};\n```\n\n## Code 2 (Javascript)\n\n- 미리 괄호들을 object로 선언. ([{을 키로, }])을 값으로 지정 후 짝이 맞는지를 판단하면 된다.\n- 이때 배열의 마지막 값은 stack.pop()으로 알아낸다. 키와 값이 맞지 않을 경우 false를 반환한다.\n\n```js\nvar isValid = function(s) {\n  let stack = [];\n  const pair = {\n    \"(\": \")\",\n    \"[\": \"]\",\n    \"{\": \"}\"\n  };\n\n  for (let char of s) {\n    if (char in pair) stack.push(char);\n    else if (pair[stack.pop()] !== char) return false;\n  }\n\n  return stack.length ? false : true;\n};\n```\n","source":"_posts/2019-12-14-leetcode-20.md","raw":"---\ntitle: \"[Leetcode] valid-parentheses\"\ntags: [Leetcode, algorithm]\ncategories: leetcode\n---\n\n> Leetcode - [20](https://leetcode.com/problems/valid-parentheses/submissions/)\n\n## Code 1 (Javascript)\n\n1. ({[ 은 배열에 push 한다.\n2. ]}) 은 짝이 맞을 경우 pop을 한다. 이때 배열의 가장 마지막 요소를 체크하면 된다. 만약 짝이 맞지 않을 경우 false를 반환한다.\n3. 배열에 아무것도 없으면 짝이 맞는 거니까 true를 반환한다.\n\n```js\nvar isValid = function(s) {\n  let array = [];\n  for (char of s) {\n    switch (char) {\n      case \")\":\n        if (array[array.length - 1] === \"(\") {\n          array.pop();\n        } else {\n          return false;\n        }\n        break;\n      case \"}\":\n        if (array[array.length - 1] === \"{\") {\n          array.pop();\n        } else {\n          return false;\n        }\n        break;\n      case \"]\":\n        if (array[array.length - 1] === \"[\") {\n          array.pop();\n        } else {\n          return false;\n        }\n        break;\n      default:\n        array.push(char);\n    }\n  }\n  return array.length ? false : true;\n};\n```\n\n## Code 2 (Javascript)\n\n- 미리 괄호들을 object로 선언. ([{을 키로, }])을 값으로 지정 후 짝이 맞는지를 판단하면 된다.\n- 이때 배열의 마지막 값은 stack.pop()으로 알아낸다. 키와 값이 맞지 않을 경우 false를 반환한다.\n\n```js\nvar isValid = function(s) {\n  let stack = [];\n  const pair = {\n    \"(\": \")\",\n    \"[\": \"]\",\n    \"{\": \"}\"\n  };\n\n  for (let char of s) {\n    if (char in pair) stack.push(char);\n    else if (pair[stack.pop()] !== char) return false;\n  }\n\n  return stack.length ? false : true;\n};\n```\n","slug":"leetcode-20","published":1,"date":"2019-12-13T15:00:00.000Z","updated":"2020-05-05T08:00:03.863Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhu007buv59auu58hep","content":"<blockquote>\n<p>Leetcode - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdmFsaWQtcGFyZW50aGVzZXMvc3VibWlzc2lvbnMv\" title=\"https://leetcode.com/problems/valid-parentheses/submissions/\">20<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-1-Javascript\"><a href=\"#Code-1-Javascript\" class=\"headerlink\" title=\"Code 1 (Javascript)\"></a>Code 1 (Javascript)</h2><ol>\n<li>({[ 은 배열에 push 한다.</li>\n<li>]}) 은 짝이 맞을 경우 pop을 한다. 이때 배열의 가장 마지막 요소를 체크하면 된다. 만약 짝이 맞지 않을 경우 false를 반환한다.</li>\n<li>배열에 아무것도 없으면 짝이 맞는 거니까 true를 반환한다.</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isValid = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> array = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (char <span class=\"keyword\">of</span> s) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (char) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\")\"</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array[array.length - <span class=\"number\">1</span>] === <span class=\"string\">\"(\"</span>) &#123;</span><br><span class=\"line\">          array.pop();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"&#125;\"</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array[array.length - <span class=\"number\">1</span>] === <span class=\"string\">\"&#123;\"</span>) &#123;</span><br><span class=\"line\">          array.pop();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"]\"</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array[array.length - <span class=\"number\">1</span>] === <span class=\"string\">\"[\"</span>) &#123;</span><br><span class=\"line\">          array.pop();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        array.push(char);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> array.length ? <span class=\"literal\">false</span> : <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-2-Javascript\"><a href=\"#Code-2-Javascript\" class=\"headerlink\" title=\"Code 2 (Javascript)\"></a>Code 2 (Javascript)</h2><ul>\n<li>미리 괄호들을 object로 선언. ([{을 키로, }])을 값으로 지정 후 짝이 맞는지를 판단하면 된다.</li>\n<li>이때 배열의 마지막 값은 stack.pop()으로 알아낸다. 키와 값이 맞지 않을 경우 false를 반환한다.</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isValid = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> stack = [];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> pair = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"(\"</span>: <span class=\"string\">\")\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"[\"</span>: <span class=\"string\">\"]\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"&#123;\"</span>: <span class=\"string\">\"&#125;\"</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> char <span class=\"keyword\">of</span> s) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (char <span class=\"keyword\">in</span> pair) stack.push(char);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pair[stack.pop()] !== char) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> stack.length ? <span class=\"literal\">false</span> : <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Leetcode - <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS5jb20vcHJvYmxlbXMvdmFsaWQtcGFyZW50aGVzZXMvc3VibWlzc2lvbnMv\" title=\"https://leetcode.com/problems/valid-parentheses/submissions/\">20<i class=\"fa fa-external-link\"></i></span></p>\n</blockquote>\n<h2 id=\"Code-1-Javascript\"><a href=\"#Code-1-Javascript\" class=\"headerlink\" title=\"Code 1 (Javascript)\"></a>Code 1 (Javascript)</h2><ol>\n<li>({[ 은 배열에 push 한다.</li>\n<li>]}) 은 짝이 맞을 경우 pop을 한다. 이때 배열의 가장 마지막 요소를 체크하면 된다. 만약 짝이 맞지 않을 경우 false를 반환한다.</li>\n<li>배열에 아무것도 없으면 짝이 맞는 거니까 true를 반환한다.</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isValid = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> array = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (char <span class=\"keyword\">of</span> s) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (char) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\")\"</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array[array.length - <span class=\"number\">1</span>] === <span class=\"string\">\"(\"</span>) &#123;</span><br><span class=\"line\">          array.pop();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"&#125;\"</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array[array.length - <span class=\"number\">1</span>] === <span class=\"string\">\"&#123;\"</span>) &#123;</span><br><span class=\"line\">          array.pop();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">\"]\"</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (array[array.length - <span class=\"number\">1</span>] === <span class=\"string\">\"[\"</span>) &#123;</span><br><span class=\"line\">          array.pop();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        array.push(char);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> array.length ? <span class=\"literal\">false</span> : <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code-2-Javascript\"><a href=\"#Code-2-Javascript\" class=\"headerlink\" title=\"Code 2 (Javascript)\"></a>Code 2 (Javascript)</h2><ul>\n<li>미리 괄호들을 object로 선언. ([{을 키로, }])을 값으로 지정 후 짝이 맞는지를 판단하면 된다.</li>\n<li>이때 배열의 마지막 값은 stack.pop()으로 알아낸다. 키와 값이 맞지 않을 경우 false를 반환한다.</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> isValid = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">s</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> stack = [];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> pair = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"(\"</span>: <span class=\"string\">\")\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"[\"</span>: <span class=\"string\">\"]\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"&#123;\"</span>: <span class=\"string\">\"&#125;\"</span></span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> char <span class=\"keyword\">of</span> s) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (char <span class=\"keyword\">in</span> pair) stack.push(char);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (pair[stack.pop()] !== char) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> stack.length ? <span class=\"literal\">false</span> : <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"Next.js에 Styled-components 적용하기","date":"2020-07-26T13:50:02.000Z","_content":"\nNext.js에 Styled Components를 적용하고 새로고침을 하면 콘솔에 아래와 같이 나온다.\n\n![/blog/images/2020-07-26-next-styled-components/2020-07-11__12.06.58.png](/blog/images/2020-07-26-next-styled-components/2020-07-11__12.06.58.png)\n\n왜일까? 🤔\nserver와 client 어쩌고 나오는 것을 보니 ssr 문제처럼 보인다.\n구글링을 해보자.\n\n![/blog/images/2020-07-26-next-styled-components/2020-07-11__1.23.42.png](/blog/images/2020-07-26-next-styled-components/2020-07-11__1.23.42.png)\n\n[https://github.com/vercel/next.js/tree/canary/examples/with-styled-components](https://github.com/vercel/next.js/tree/canary/examples/with-styled-components)\n\n관련 예제가 있다. (살았다.)\n예제의 목적은 요약하면 다음과 같다.\n\n- <Document />를 확장하고 <head>에 서버 사이드 렌더링된 스타일을 주입\n- 서버 사이드 렌더링에 필요한 babel-plugin-styled-components 플러그인을 추가\n\n# 적용 방법\n\n## 1. babel 플러그인 설치 및 설정\n\nbabel-plugin-styled-components를 설치한다.\n\n```\nnpm install --save-dev babel-plugin-styled-components\n```\n\n그리고 다음과 같이 .babelrc 설정을 해주자.\n\n```\n{\n  \"presets\": [\"next/babel\"],\n  \"plugins\": [[\"styled-components\", { \"ssr\": true }]]\n}\n```\n\n## 2. \\_document.js 파일 생성\n\npages 폴더에 \\_document.js 파일을 생성한다. 이 파일에서 <Documents />를 확장해 <head>에 서버 사이드 렌더링된 스타일을 주입한다.\n한마디로 next.js의 index.html head에 서버 사이드 렌더링 스타일을 주입시켜 주는 것이다.\n\n```jsx\nimport Document from \"next/document\";\nimport { ServerStyleSheet } from \"styled-components\";\n\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      // sheet을 사용해 정의된 모든 스타일을 수집\n      ctx.renderPage = () =>\n        originalRenderPage({\n          enhanceApp: (App) => (props) =>\n            sheet.collectStyles(<App {...props} />),\n        });\n\n      // Documents의 initial props\n      const initialProps = await Document.getInitialProps(ctx);\n\n      // props와 styles를 반환\n      return {\n        ...initialProps,\n        styles: (\n          <>\n            {initialProps.styles}\n            {sheet.getStyleElement()}\n          </>\n        ),\n      };\n    } finally {\n      sheet.seal();\n    }\n  }\n}\n```\n\nStyled component에서 제공하는 ServerStyleSheet를 활용해 정의된 모든 스타일을 수집하고, 페이지가 렌더링되기 전에 props와 styles를 채워준다. 수집된 스타일은 getStyleElement 메소드로 `<style>` 태그에 감싸져 head에 뿌려지게 된다.\n","source":"_posts/2020-07-26-next-styled-components.md","raw":"---\ntitle: Next.js에 Styled-components 적용하기\n\ndate: 2020-07-26 22:50:02\ntags: [react, next]\ncategories: React\n---\n\nNext.js에 Styled Components를 적용하고 새로고침을 하면 콘솔에 아래와 같이 나온다.\n\n![/blog/images/2020-07-26-next-styled-components/2020-07-11__12.06.58.png](/blog/images/2020-07-26-next-styled-components/2020-07-11__12.06.58.png)\n\n왜일까? 🤔\nserver와 client 어쩌고 나오는 것을 보니 ssr 문제처럼 보인다.\n구글링을 해보자.\n\n![/blog/images/2020-07-26-next-styled-components/2020-07-11__1.23.42.png](/blog/images/2020-07-26-next-styled-components/2020-07-11__1.23.42.png)\n\n[https://github.com/vercel/next.js/tree/canary/examples/with-styled-components](https://github.com/vercel/next.js/tree/canary/examples/with-styled-components)\n\n관련 예제가 있다. (살았다.)\n예제의 목적은 요약하면 다음과 같다.\n\n- <Document />를 확장하고 <head>에 서버 사이드 렌더링된 스타일을 주입\n- 서버 사이드 렌더링에 필요한 babel-plugin-styled-components 플러그인을 추가\n\n# 적용 방법\n\n## 1. babel 플러그인 설치 및 설정\n\nbabel-plugin-styled-components를 설치한다.\n\n```\nnpm install --save-dev babel-plugin-styled-components\n```\n\n그리고 다음과 같이 .babelrc 설정을 해주자.\n\n```\n{\n  \"presets\": [\"next/babel\"],\n  \"plugins\": [[\"styled-components\", { \"ssr\": true }]]\n}\n```\n\n## 2. \\_document.js 파일 생성\n\npages 폴더에 \\_document.js 파일을 생성한다. 이 파일에서 <Documents />를 확장해 <head>에 서버 사이드 렌더링된 스타일을 주입한다.\n한마디로 next.js의 index.html head에 서버 사이드 렌더링 스타일을 주입시켜 주는 것이다.\n\n```jsx\nimport Document from \"next/document\";\nimport { ServerStyleSheet } from \"styled-components\";\n\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      // sheet을 사용해 정의된 모든 스타일을 수집\n      ctx.renderPage = () =>\n        originalRenderPage({\n          enhanceApp: (App) => (props) =>\n            sheet.collectStyles(<App {...props} />),\n        });\n\n      // Documents의 initial props\n      const initialProps = await Document.getInitialProps(ctx);\n\n      // props와 styles를 반환\n      return {\n        ...initialProps,\n        styles: (\n          <>\n            {initialProps.styles}\n            {sheet.getStyleElement()}\n          </>\n        ),\n      };\n    } finally {\n      sheet.seal();\n    }\n  }\n}\n```\n\nStyled component에서 제공하는 ServerStyleSheet를 활용해 정의된 모든 스타일을 수집하고, 페이지가 렌더링되기 전에 props와 styles를 채워준다. 수집된 스타일은 getStyleElement 메소드로 `<style>` 태그에 감싸져 head에 뿌려지게 된다.\n","slug":"next-styled-components","published":1,"updated":"2020-07-26T13:54:22.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhv007euv59eay0hn49","content":"<p>Next.js에 Styled Components를 적용하고 새로고침을 하면 콘솔에 아래와 같이 나온다.</p>\n<p><img src=\"/blog/images/2020-07-26-next-styled-components/2020-07-11__12.06.58.png\" alt=\"/blog/images/2020-07-26-next-styled-components/2020-07-11__12.06.58.png\"></p>\n<p>왜일까? 🤔<br>server와 client 어쩌고 나오는 것을 보니 ssr 문제처럼 보인다.<br>구글링을 해보자.</p>\n<p><img src=\"/blog/images/2020-07-26-next-styled-components/2020-07-11__1.23.42.png\" alt=\"/blog/images/2020-07-26-next-styled-components/2020-07-11__1.23.42.png\"></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZlcmNlbC9uZXh0LmpzL3RyZWUvY2FuYXJ5L2V4YW1wbGVzL3dpdGgtc3R5bGVkLWNvbXBvbmVudHM=\" title=\"https://github.com/vercel/next.js/tree/canary/examples/with-styled-components\">https://github.com/vercel/next.js/tree/canary/examples/with-styled-components<i class=\"fa fa-external-link\"></i></span></p>\n<p>관련 예제가 있다. (살았다.)<br>예제의 목적은 요약하면 다음과 같다.</p>\n<ul>\n<li><Document />를 확장하고 <head>에 서버 사이드 렌더링된 스타일을 주입</li>\n<li>서버 사이드 렌더링에 필요한 babel-plugin-styled-components 플러그인을 추가</li>\n</ul>\n<h1 id=\"적용-방법\"><a href=\"#적용-방법\" class=\"headerlink\" title=\"적용 방법\"></a>적용 방법</h1><h2 id=\"1-babel-플러그인-설치-및-설정\"><a href=\"#1-babel-플러그인-설치-및-설정\" class=\"headerlink\" title=\"1. babel 플러그인 설치 및 설정\"></a>1. babel 플러그인 설치 및 설정</h2><p>babel-plugin-styled-components를 설치한다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save-dev babel-plugin-styled-components</span><br></pre></td></tr></table></figure>\n\n<p>그리고 다음과 같이 .babelrc 설정을 해주자.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;presets&quot;: [&quot;next&#x2F;babel&quot;],</span><br><span class=\"line\">  &quot;plugins&quot;: [[&quot;styled-components&quot;, &#123; &quot;ssr&quot;: true &#125;]]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-document-js-파일-생성\"><a href=\"#2-document-js-파일-생성\" class=\"headerlink\" title=\"2. _document.js 파일 생성\"></a>2. _document.js 파일 생성</h2><p>pages 폴더에 _document.js 파일을 생성한다. 이 파일에서 <Documents />를 확장해 <head>에 서버 사이드 렌더링된 스타일을 주입한다.<br>한마디로 next.js의 index.html head에 서버 사이드 렌더링 스타일을 주입시켜 주는 것이다.</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Document <span class=\"keyword\">from</span> <span class=\"string\">\"next/document\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; ServerStyleSheet &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"styled-components\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyDocument</span> <span class=\"keyword\">extends</span> <span class=\"title\">Document</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">async</span> getInitialProps(ctx) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sheet = <span class=\"keyword\">new</span> ServerStyleSheet();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> originalRenderPage = ctx.renderPage;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// sheet을 사용해 정의된 모든 스타일을 수집</span></span><br><span class=\"line\">      ctx.renderPage = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span></span><br><span class=\"line\">        originalRenderPage(&#123;</span><br><span class=\"line\">          enhanceApp: <span class=\"function\">(<span class=\"params\">App</span>) =&gt;</span> <span class=\"function\">(<span class=\"params\">props</span>) =&gt;</span></span><br><span class=\"line\">            sheet.collectStyles(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> &#123;<span class=\"attr\">...props</span>&#125; /&gt;</span></span>),</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Documents의 initial props</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> initialProps = <span class=\"keyword\">await</span> Document.getInitialProps(ctx);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// props와 styles를 반환</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ...initialProps,</span><br><span class=\"line\">        styles: (</span><br><span class=\"line\">          &lt;&gt;</span><br><span class=\"line\">            &#123;initialProps.styles&#125;</span><br><span class=\"line\">            &#123;sheet.getStyleElement()&#125;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        ),</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125; finally &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      sheet.seal();</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>Styled component에서 제공하는 ServerStyleSheet를 활용해 정의된 모든 스타일을 수집하고, 페이지가 렌더링되기 전에 props와 styles를 채워준다. 수집된 스타일은 getStyleElement 메소드로 <code>&lt;style&gt;</code> 태그에 감싸져 head에 뿌려지게 된다.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Next.js에 Styled Components를 적용하고 새로고침을 하면 콘솔에 아래와 같이 나온다.</p>\n<p><img src=\"/blog/images/2020-07-26-next-styled-components/2020-07-11__12.06.58.png\" alt=\"/blog/images/2020-07-26-next-styled-components/2020-07-11__12.06.58.png\"></p>\n<p>왜일까? 🤔<br>server와 client 어쩌고 나오는 것을 보니 ssr 문제처럼 보인다.<br>구글링을 해보자.</p>\n<p><img src=\"/blog/images/2020-07-26-next-styled-components/2020-07-11__1.23.42.png\" alt=\"/blog/images/2020-07-26-next-styled-components/2020-07-11__1.23.42.png\"></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZlcmNlbC9uZXh0LmpzL3RyZWUvY2FuYXJ5L2V4YW1wbGVzL3dpdGgtc3R5bGVkLWNvbXBvbmVudHM=\" title=\"https://github.com/vercel/next.js/tree/canary/examples/with-styled-components\">https://github.com/vercel/next.js/tree/canary/examples/with-styled-components<i class=\"fa fa-external-link\"></i></span></p>\n<p>관련 예제가 있다. (살았다.)<br>예제의 목적은 요약하면 다음과 같다.</p>\n<ul>\n<li><Document />를 확장하고 <head>에 서버 사이드 렌더링된 스타일을 주입</li>\n<li>서버 사이드 렌더링에 필요한 babel-plugin-styled-components 플러그인을 추가</li>\n</ul>\n<h1 id=\"적용-방법\"><a href=\"#적용-방법\" class=\"headerlink\" title=\"적용 방법\"></a>적용 방법</h1><h2 id=\"1-babel-플러그인-설치-및-설정\"><a href=\"#1-babel-플러그인-설치-및-설정\" class=\"headerlink\" title=\"1. babel 플러그인 설치 및 설정\"></a>1. babel 플러그인 설치 및 설정</h2><p>babel-plugin-styled-components를 설치한다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save-dev babel-plugin-styled-components</span><br></pre></td></tr></table></figure>\n\n<p>그리고 다음과 같이 .babelrc 설정을 해주자.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;presets&quot;: [&quot;next&#x2F;babel&quot;],</span><br><span class=\"line\">  &quot;plugins&quot;: [[&quot;styled-components&quot;, &#123; &quot;ssr&quot;: true &#125;]]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-document-js-파일-생성\"><a href=\"#2-document-js-파일-생성\" class=\"headerlink\" title=\"2. _document.js 파일 생성\"></a>2. _document.js 파일 생성</h2><p>pages 폴더에 _document.js 파일을 생성한다. 이 파일에서 <Documents />를 확장해 <head>에 서버 사이드 렌더링된 스타일을 주입한다.<br>한마디로 next.js의 index.html head에 서버 사이드 렌더링 스타일을 주입시켜 주는 것이다.</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Document <span class=\"keyword\">from</span> <span class=\"string\">\"next/document\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; ServerStyleSheet &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"styled-components\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyDocument</span> <span class=\"keyword\">extends</span> <span class=\"title\">Document</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">async</span> getInitialProps(ctx) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sheet = <span class=\"keyword\">new</span> ServerStyleSheet();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> originalRenderPage = ctx.renderPage;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// sheet을 사용해 정의된 모든 스타일을 수집</span></span><br><span class=\"line\">      ctx.renderPage = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span></span><br><span class=\"line\">        originalRenderPage(&#123;</span><br><span class=\"line\">          enhanceApp: <span class=\"function\">(<span class=\"params\">App</span>) =&gt;</span> <span class=\"function\">(<span class=\"params\">props</span>) =&gt;</span></span><br><span class=\"line\">            sheet.collectStyles(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">App</span> &#123;<span class=\"attr\">...props</span>&#125; /&gt;</span></span>),</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Documents의 initial props</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> initialProps = <span class=\"keyword\">await</span> Document.getInitialProps(ctx);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// props와 styles를 반환</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ...initialProps,</span><br><span class=\"line\">        styles: (</span><br><span class=\"line\">          &lt;&gt;</span><br><span class=\"line\">            &#123;initialProps.styles&#125;</span><br><span class=\"line\">            &#123;sheet.getStyleElement()&#125;</span><br><span class=\"line\">          &lt;<span class=\"regexp\">/&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        ),</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125; finally &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      sheet.seal();</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>Styled component에서 제공하는 ServerStyleSheet를 활용해 정의된 모든 스타일을 수집하고, 페이지가 렌더링되기 전에 props와 styles를 채워준다. 수집된 스타일은 getStyleElement 메소드로 <code>&lt;style&gt;</code> 태그에 감싸져 head에 뿌려지게 된다.</p>\n"},{"title":"[Javascript] 크롬 개발자 도구를 이용해서 알아보는 클로저","date":"2020-07-26T07:15:19.000Z","_content":"\n클로저의 대표적인 개념은 다음과 같습니다.\n\n1. 클로저는 이미 생명 주기가 끝난 외부 함수의 변수를 참조하는 현상이다.\n2. 클로저는 선언될 당시의 정보를 담는다.\n3. 선언될 당시의 정보를 외부로 노출시킬 수 있는 유일한 방법은 함수 내부에서 return하는 것이다.\n\n처음 자바스크립트를 배울 때 이 개념이 너무 어려웠었던 기억이 납니다. ~~(물론 지금도 어렵...)~~\n그래서 클로저 예제를 크롬 개발자 도구로 디버깅해서 어떻게 동작하는지 확인해봅시다.\n\n```js\nvar outer = function () {\n  var count = 1;\n  var inner = function () {\n    return ++count;\n  };\n  return inner;\n};\nvar outer2 = outer();\nconsole.log(outer2());\nconsole.log(outer2());\n```\n\n검색하면 흔하게 볼 수 있는 클로저 예제입니다.\nouter 함수에서 inner 함수를 반환하고, 그걸 outer2 변수에 담아 실행하는 예제입니다. **선언된 당시의 정보인 inner를 함수 내부에서 return 하여 외부로 노출(개념 3번)**시키고 있습니다.\n\n이때 outer() 함수의 실행은 끝났다고 볼 수 있습니다. 하지만 outer2 변수가 참조하고 있죠.\n따라서 outer2는 실행이 끝나버린 outer() 함수의 inner에 접근할 수 있습니다.\n그런데 어떻게 실행이 끝나버린 함수의 내부에 접근할 수 있을까요?\n\n이는 실행이 끝났어도 그것을 참조하는 대상이 하나라도 있는 경우 가비지 컬렉션의 대상이 되지 않아서입니다.\n그래서 클로저를 더이상 실행하지 않을 경우 참조를 다 끊어버려 가비지 컬렉터가 수거해가게 만들면 메모리 관리를 효율적으로 할 수 있겠죠.\n아무튼 이렇게 글로만 봐서는 잘 안 와닿을 수 있습니다.\n\n![2020-07-26-debug-closure/2020-07-26_1.58.25.png](/blog/images/2020-07-26-debug-closure/2020-07-26_1.58.25.png)\n\n해당 부분에 breakpoint를 지정합니다. breakpoint를 지정하면 해당 파일을 실행할 때 breakpoint에서 실행이 멈추게 됩니다.\nbreakpoint를 지정하면 우측 breakpoints 패널에 현재 지정한 breakpoint들이 나옵니다.\n지정이 끝났으면 새로고침을 해봅시다.\n\n![2020-07-26-debug-closure/2020-07-26_1.59.00.png](/blog/images/2020-07-26-debug-closure/2020-07-26_1.59.00.png)\n\n8번 라인이 실행된 상태로 실행이 중단됩니다.\n우선 콜 스택 부분을 봅시다. 처음에는 전역 컨텍스트가 실행되기 때문에 anoymous 함수가 쌓입니다. 실행 컨텍스트를 설명하는 다른 글에서는 main 함수가 쌓인다고도 하는데 anoymous 함수나 main 함수나 동일합니다. 단지 표현의 차이일 뿐입니다. (크롬은 anoymous로 표현)\n전역 컨텍스트이기 때문에 스코프는 글로벌이 됩니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.00.20.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.00.20.png)\n\nStep(빨간 박스) 버튼을 눌러 다음 실행으로 이동합니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.01.52.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.01.52.png)\n\nouter 함수가 실행되면서 콜스택에 쌓입니다.\n\n이때 함수가 호출된 상태이기 때문에 자바스크립트 엔진이 outer에 대한 환경 정보를 수집해서 실행 컨텍스트를 생성합니다. 환경 정보는 함수 내에 있는 모든 것(변수, 함수 선언, 스코프, this)이라 생각하면 편합니다. 그래서 scope에 count, inner, this가 생성되는 것입니다. **위에서 클로저는 선언된 당시의 정보를 담는다고 그랬죠?(개념 2번) outer 스코프 내에 있는 count와 inner, this가 바로 outer 함수의 정보라 할 수 있습니다**.\n\n참고로 count와 inner의 값이 undefined인 이유는 아직 할당 단계에 다다르지 않았기 때문입니다. 실행 컨텍스트에서 변수는 선언 단계 → 초기화 단계 → 할당 단계를 거쳐 값이 할당되게 되는데, var 키워드로 선언된 변수의 경우 선언 단계와 초기화 단계가 한번에 이루어지게 됩니다. 이 상태에서 count 변수나 inner 함수에 접근하면 undefined를 반환하는데요, 이게 그 유명한 호이스팅입니다.\n\n잠시 딴 길로 샜는데요. Step 버튼을 눌러 다음 라인으로 가봅시다.\n\n![2020-07-26-debug-closure/2020-07-26_2.18.18.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.18.18.png)\n\n변수 count는 할당 단계를 거쳐 1을 할당받았습니다.\n\n한번 더 Step 버튼을 눌러봅시다.\n\n![2020-07-26-debug-closure/2020-07-26_2.19.55.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.19.55.png)\n\ninner는 할당 단계를 거쳐 익명 함수(`function() {return ++count;}`)를 할당받았습니다.\n이때 outer 함수의 스코프에는 return value가 생깁니다. 이때의 return value는 inner겠죠?\nreturn value가 함수로 나오는 이유는 inner가 익명 함수를 할당받았기 때문입니다.\n다음 Step으로 가봅시다.\n\n![2020-07-26-debug-closure/2020-07-26_2.25.15.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.25.15.png)\n\nouter 함수의 실행이 종료되었습니다. 우측 콜 스택 패널을 보면 outer 함수가 사라진 것을 확인할 수 있습니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.26.10.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.26.10.png)\n\n9번 라인에서 outer2()가 실행된 모습입니다. **위에서 클로저는 이미 생명 주기가 끝난 외부 함수의 변수를 참조하는 현상(개념 1번)이라고 했었습니다. outer2()는 이미 생명 주기가 끝난 outer() 함수의 변수 inner를 참조하고 있기 때문에 4번 라인으로 이동하게 됩니다.**\n\nouter2로 inner 함수를 실행한 상태이기 때문에 콜 스택에는 inner가 쌓이게 됩니다.\n우측 스코프 패널을 보시면 스코프에 outer 클로저가 보입니다. 이때 count의 값은 1입니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.35.36.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.35.36.png)\n\n전위 연산을 하고 있기 때문에 count는 1이 증가된 2로 반환됩니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.36.58.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.36.58.png)\n\ninner() 함수가 종료되며 콜 스택에서 사라졌습니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.38.10.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.38.10.png)\n\n그리고 콘솔에는 2가 출력이 됩니다.\n10번째 줄을 실행할 차례입니다. 9번 라인을 실행했을 때와 동일합니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.39.16.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.39.16.png)\n\n여기서 한가지 주의깊게 보아야 할 것은, 10번 라인을 실행할 때 9번 라인에서 실행한 값을 기억하고 있다는 것입니다. outer2에서 값을 참조하고 있기 때문이죠.\n우측 scope 패널의 count를 보면 값이 2인 것을 확인할 수 있습니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.40.36.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.40.36.png)\n\n전위 연산이 되어 count의 return value는 3이 됩니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.41.25.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.41.25.png)\n\ninner() 함수가 종료되며 콜 스택에서 사라졌습니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.42.14.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.42.14.png)\n\n마지막으로 3을 출력한 모습입니다.\n","source":"_posts/2020-07-26-debug-closure.md","raw":"---\ntitle: \"[Javascript] 크롬 개발자 도구를 이용해서 알아보는 클로저\"\ndate: 2020-07-26 16:15:19\ntags: [javascript]\ncategories: 자바스크립트\n---\n\n클로저의 대표적인 개념은 다음과 같습니다.\n\n1. 클로저는 이미 생명 주기가 끝난 외부 함수의 변수를 참조하는 현상이다.\n2. 클로저는 선언될 당시의 정보를 담는다.\n3. 선언될 당시의 정보를 외부로 노출시킬 수 있는 유일한 방법은 함수 내부에서 return하는 것이다.\n\n처음 자바스크립트를 배울 때 이 개념이 너무 어려웠었던 기억이 납니다. ~~(물론 지금도 어렵...)~~\n그래서 클로저 예제를 크롬 개발자 도구로 디버깅해서 어떻게 동작하는지 확인해봅시다.\n\n```js\nvar outer = function () {\n  var count = 1;\n  var inner = function () {\n    return ++count;\n  };\n  return inner;\n};\nvar outer2 = outer();\nconsole.log(outer2());\nconsole.log(outer2());\n```\n\n검색하면 흔하게 볼 수 있는 클로저 예제입니다.\nouter 함수에서 inner 함수를 반환하고, 그걸 outer2 변수에 담아 실행하는 예제입니다. **선언된 당시의 정보인 inner를 함수 내부에서 return 하여 외부로 노출(개념 3번)**시키고 있습니다.\n\n이때 outer() 함수의 실행은 끝났다고 볼 수 있습니다. 하지만 outer2 변수가 참조하고 있죠.\n따라서 outer2는 실행이 끝나버린 outer() 함수의 inner에 접근할 수 있습니다.\n그런데 어떻게 실행이 끝나버린 함수의 내부에 접근할 수 있을까요?\n\n이는 실행이 끝났어도 그것을 참조하는 대상이 하나라도 있는 경우 가비지 컬렉션의 대상이 되지 않아서입니다.\n그래서 클로저를 더이상 실행하지 않을 경우 참조를 다 끊어버려 가비지 컬렉터가 수거해가게 만들면 메모리 관리를 효율적으로 할 수 있겠죠.\n아무튼 이렇게 글로만 봐서는 잘 안 와닿을 수 있습니다.\n\n![2020-07-26-debug-closure/2020-07-26_1.58.25.png](/blog/images/2020-07-26-debug-closure/2020-07-26_1.58.25.png)\n\n해당 부분에 breakpoint를 지정합니다. breakpoint를 지정하면 해당 파일을 실행할 때 breakpoint에서 실행이 멈추게 됩니다.\nbreakpoint를 지정하면 우측 breakpoints 패널에 현재 지정한 breakpoint들이 나옵니다.\n지정이 끝났으면 새로고침을 해봅시다.\n\n![2020-07-26-debug-closure/2020-07-26_1.59.00.png](/blog/images/2020-07-26-debug-closure/2020-07-26_1.59.00.png)\n\n8번 라인이 실행된 상태로 실행이 중단됩니다.\n우선 콜 스택 부분을 봅시다. 처음에는 전역 컨텍스트가 실행되기 때문에 anoymous 함수가 쌓입니다. 실행 컨텍스트를 설명하는 다른 글에서는 main 함수가 쌓인다고도 하는데 anoymous 함수나 main 함수나 동일합니다. 단지 표현의 차이일 뿐입니다. (크롬은 anoymous로 표현)\n전역 컨텍스트이기 때문에 스코프는 글로벌이 됩니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.00.20.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.00.20.png)\n\nStep(빨간 박스) 버튼을 눌러 다음 실행으로 이동합니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.01.52.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.01.52.png)\n\nouter 함수가 실행되면서 콜스택에 쌓입니다.\n\n이때 함수가 호출된 상태이기 때문에 자바스크립트 엔진이 outer에 대한 환경 정보를 수집해서 실행 컨텍스트를 생성합니다. 환경 정보는 함수 내에 있는 모든 것(변수, 함수 선언, 스코프, this)이라 생각하면 편합니다. 그래서 scope에 count, inner, this가 생성되는 것입니다. **위에서 클로저는 선언된 당시의 정보를 담는다고 그랬죠?(개념 2번) outer 스코프 내에 있는 count와 inner, this가 바로 outer 함수의 정보라 할 수 있습니다**.\n\n참고로 count와 inner의 값이 undefined인 이유는 아직 할당 단계에 다다르지 않았기 때문입니다. 실행 컨텍스트에서 변수는 선언 단계 → 초기화 단계 → 할당 단계를 거쳐 값이 할당되게 되는데, var 키워드로 선언된 변수의 경우 선언 단계와 초기화 단계가 한번에 이루어지게 됩니다. 이 상태에서 count 변수나 inner 함수에 접근하면 undefined를 반환하는데요, 이게 그 유명한 호이스팅입니다.\n\n잠시 딴 길로 샜는데요. Step 버튼을 눌러 다음 라인으로 가봅시다.\n\n![2020-07-26-debug-closure/2020-07-26_2.18.18.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.18.18.png)\n\n변수 count는 할당 단계를 거쳐 1을 할당받았습니다.\n\n한번 더 Step 버튼을 눌러봅시다.\n\n![2020-07-26-debug-closure/2020-07-26_2.19.55.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.19.55.png)\n\ninner는 할당 단계를 거쳐 익명 함수(`function() {return ++count;}`)를 할당받았습니다.\n이때 outer 함수의 스코프에는 return value가 생깁니다. 이때의 return value는 inner겠죠?\nreturn value가 함수로 나오는 이유는 inner가 익명 함수를 할당받았기 때문입니다.\n다음 Step으로 가봅시다.\n\n![2020-07-26-debug-closure/2020-07-26_2.25.15.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.25.15.png)\n\nouter 함수의 실행이 종료되었습니다. 우측 콜 스택 패널을 보면 outer 함수가 사라진 것을 확인할 수 있습니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.26.10.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.26.10.png)\n\n9번 라인에서 outer2()가 실행된 모습입니다. **위에서 클로저는 이미 생명 주기가 끝난 외부 함수의 변수를 참조하는 현상(개념 1번)이라고 했었습니다. outer2()는 이미 생명 주기가 끝난 outer() 함수의 변수 inner를 참조하고 있기 때문에 4번 라인으로 이동하게 됩니다.**\n\nouter2로 inner 함수를 실행한 상태이기 때문에 콜 스택에는 inner가 쌓이게 됩니다.\n우측 스코프 패널을 보시면 스코프에 outer 클로저가 보입니다. 이때 count의 값은 1입니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.35.36.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.35.36.png)\n\n전위 연산을 하고 있기 때문에 count는 1이 증가된 2로 반환됩니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.36.58.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.36.58.png)\n\ninner() 함수가 종료되며 콜 스택에서 사라졌습니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.38.10.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.38.10.png)\n\n그리고 콘솔에는 2가 출력이 됩니다.\n10번째 줄을 실행할 차례입니다. 9번 라인을 실행했을 때와 동일합니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.39.16.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.39.16.png)\n\n여기서 한가지 주의깊게 보아야 할 것은, 10번 라인을 실행할 때 9번 라인에서 실행한 값을 기억하고 있다는 것입니다. outer2에서 값을 참조하고 있기 때문이죠.\n우측 scope 패널의 count를 보면 값이 2인 것을 확인할 수 있습니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.40.36.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.40.36.png)\n\n전위 연산이 되어 count의 return value는 3이 됩니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.41.25.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.41.25.png)\n\ninner() 함수가 종료되며 콜 스택에서 사라졌습니다.\n\n![2020-07-26-debug-closure/2020-07-26_2.42.14.png](/blog/images/2020-07-26-debug-closure/2020-07-26_2.42.14.png)\n\n마지막으로 3을 출력한 모습입니다.\n","slug":"debug-closure","published":1,"updated":"2020-07-26T13:49:21.420Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhw007huv596eb9fbo2","content":"<p>클로저의 대표적인 개념은 다음과 같습니다.</p>\n<ol>\n<li>클로저는 이미 생명 주기가 끝난 외부 함수의 변수를 참조하는 현상이다.</li>\n<li>클로저는 선언될 당시의 정보를 담는다.</li>\n<li>선언될 당시의 정보를 외부로 노출시킬 수 있는 유일한 방법은 함수 내부에서 return하는 것이다.</li>\n</ol>\n<p>처음 자바스크립트를 배울 때 이 개념이 너무 어려웠었던 기억이 납니다. <del>(물론 지금도 어렵…)</del><br>그래서 클로저 예제를 크롬 개발자 도구로 디버깅해서 어떻게 동작하는지 확인해봅시다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> outer = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> count = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> inner = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ++count;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> inner;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> outer2 = outer();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(outer2());</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(outer2());</span><br></pre></td></tr></table></figure>\n\n<p>검색하면 흔하게 볼 수 있는 클로저 예제입니다.<br>outer 함수에서 inner 함수를 반환하고, 그걸 outer2 변수에 담아 실행하는 예제입니다. <strong>선언된 당시의 정보인 inner를 함수 내부에서 return 하여 외부로 노출(개념 3번)</strong>시키고 있습니다.</p>\n<p>이때 outer() 함수의 실행은 끝났다고 볼 수 있습니다. 하지만 outer2 변수가 참조하고 있죠.<br>따라서 outer2는 실행이 끝나버린 outer() 함수의 inner에 접근할 수 있습니다.<br>그런데 어떻게 실행이 끝나버린 함수의 내부에 접근할 수 있을까요?</p>\n<p>이는 실행이 끝났어도 그것을 참조하는 대상이 하나라도 있는 경우 가비지 컬렉션의 대상이 되지 않아서입니다.<br>그래서 클로저를 더이상 실행하지 않을 경우 참조를 다 끊어버려 가비지 컬렉터가 수거해가게 만들면 메모리 관리를 효율적으로 할 수 있겠죠.<br>아무튼 이렇게 글로만 봐서는 잘 안 와닿을 수 있습니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_1.58.25.png\" alt=\"2020-07-26-debug-closure/2020-07-26_1.58.25.png\"></p>\n<p>해당 부분에 breakpoint를 지정합니다. breakpoint를 지정하면 해당 파일을 실행할 때 breakpoint에서 실행이 멈추게 됩니다.<br>breakpoint를 지정하면 우측 breakpoints 패널에 현재 지정한 breakpoint들이 나옵니다.<br>지정이 끝났으면 새로고침을 해봅시다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_1.59.00.png\" alt=\"2020-07-26-debug-closure/2020-07-26_1.59.00.png\"></p>\n<p>8번 라인이 실행된 상태로 실행이 중단됩니다.<br>우선 콜 스택 부분을 봅시다. 처음에는 전역 컨텍스트가 실행되기 때문에 anoymous 함수가 쌓입니다. 실행 컨텍스트를 설명하는 다른 글에서는 main 함수가 쌓인다고도 하는데 anoymous 함수나 main 함수나 동일합니다. 단지 표현의 차이일 뿐입니다. (크롬은 anoymous로 표현)<br>전역 컨텍스트이기 때문에 스코프는 글로벌이 됩니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.00.20.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.00.20.png\"></p>\n<p>Step(빨간 박스) 버튼을 눌러 다음 실행으로 이동합니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.01.52.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.01.52.png\"></p>\n<p>outer 함수가 실행되면서 콜스택에 쌓입니다.</p>\n<p>이때 함수가 호출된 상태이기 때문에 자바스크립트 엔진이 outer에 대한 환경 정보를 수집해서 실행 컨텍스트를 생성합니다. 환경 정보는 함수 내에 있는 모든 것(변수, 함수 선언, 스코프, this)이라 생각하면 편합니다. 그래서 scope에 count, inner, this가 생성되는 것입니다. <strong>위에서 클로저는 선언된 당시의 정보를 담는다고 그랬죠?(개념 2번) outer 스코프 내에 있는 count와 inner, this가 바로 outer 함수의 정보라 할 수 있습니다</strong>.</p>\n<p>참고로 count와 inner의 값이 undefined인 이유는 아직 할당 단계에 다다르지 않았기 때문입니다. 실행 컨텍스트에서 변수는 선언 단계 → 초기화 단계 → 할당 단계를 거쳐 값이 할당되게 되는데, var 키워드로 선언된 변수의 경우 선언 단계와 초기화 단계가 한번에 이루어지게 됩니다. 이 상태에서 count 변수나 inner 함수에 접근하면 undefined를 반환하는데요, 이게 그 유명한 호이스팅입니다.</p>\n<p>잠시 딴 길로 샜는데요. Step 버튼을 눌러 다음 라인으로 가봅시다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.18.18.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.18.18.png\"></p>\n<p>변수 count는 할당 단계를 거쳐 1을 할당받았습니다.</p>\n<p>한번 더 Step 버튼을 눌러봅시다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.19.55.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.19.55.png\"></p>\n<p>inner는 할당 단계를 거쳐 익명 함수(<code>function() {return ++count;}</code>)를 할당받았습니다.<br>이때 outer 함수의 스코프에는 return value가 생깁니다. 이때의 return value는 inner겠죠?<br>return value가 함수로 나오는 이유는 inner가 익명 함수를 할당받았기 때문입니다.<br>다음 Step으로 가봅시다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.25.15.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.25.15.png\"></p>\n<p>outer 함수의 실행이 종료되었습니다. 우측 콜 스택 패널을 보면 outer 함수가 사라진 것을 확인할 수 있습니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.26.10.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.26.10.png\"></p>\n<p>9번 라인에서 outer2()가 실행된 모습입니다. <strong>위에서 클로저는 이미 생명 주기가 끝난 외부 함수의 변수를 참조하는 현상(개념 1번)이라고 했었습니다. outer2()는 이미 생명 주기가 끝난 outer() 함수의 변수 inner를 참조하고 있기 때문에 4번 라인으로 이동하게 됩니다.</strong></p>\n<p>outer2로 inner 함수를 실행한 상태이기 때문에 콜 스택에는 inner가 쌓이게 됩니다.<br>우측 스코프 패널을 보시면 스코프에 outer 클로저가 보입니다. 이때 count의 값은 1입니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.35.36.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.35.36.png\"></p>\n<p>전위 연산을 하고 있기 때문에 count는 1이 증가된 2로 반환됩니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.36.58.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.36.58.png\"></p>\n<p>inner() 함수가 종료되며 콜 스택에서 사라졌습니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.38.10.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.38.10.png\"></p>\n<p>그리고 콘솔에는 2가 출력이 됩니다.<br>10번째 줄을 실행할 차례입니다. 9번 라인을 실행했을 때와 동일합니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.39.16.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.39.16.png\"></p>\n<p>여기서 한가지 주의깊게 보아야 할 것은, 10번 라인을 실행할 때 9번 라인에서 실행한 값을 기억하고 있다는 것입니다. outer2에서 값을 참조하고 있기 때문이죠.<br>우측 scope 패널의 count를 보면 값이 2인 것을 확인할 수 있습니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.40.36.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.40.36.png\"></p>\n<p>전위 연산이 되어 count의 return value는 3이 됩니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.41.25.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.41.25.png\"></p>\n<p>inner() 함수가 종료되며 콜 스택에서 사라졌습니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.42.14.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.42.14.png\"></p>\n<p>마지막으로 3을 출력한 모습입니다.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>클로저의 대표적인 개념은 다음과 같습니다.</p>\n<ol>\n<li>클로저는 이미 생명 주기가 끝난 외부 함수의 변수를 참조하는 현상이다.</li>\n<li>클로저는 선언될 당시의 정보를 담는다.</li>\n<li>선언될 당시의 정보를 외부로 노출시킬 수 있는 유일한 방법은 함수 내부에서 return하는 것이다.</li>\n</ol>\n<p>처음 자바스크립트를 배울 때 이 개념이 너무 어려웠었던 기억이 납니다. <del>(물론 지금도 어렵…)</del><br>그래서 클로저 예제를 크롬 개발자 도구로 디버깅해서 어떻게 동작하는지 확인해봅시다.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> outer = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> count = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> inner = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ++count;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> inner;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> outer2 = outer();</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(outer2());</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(outer2());</span><br></pre></td></tr></table></figure>\n\n<p>검색하면 흔하게 볼 수 있는 클로저 예제입니다.<br>outer 함수에서 inner 함수를 반환하고, 그걸 outer2 변수에 담아 실행하는 예제입니다. <strong>선언된 당시의 정보인 inner를 함수 내부에서 return 하여 외부로 노출(개념 3번)</strong>시키고 있습니다.</p>\n<p>이때 outer() 함수의 실행은 끝났다고 볼 수 있습니다. 하지만 outer2 변수가 참조하고 있죠.<br>따라서 outer2는 실행이 끝나버린 outer() 함수의 inner에 접근할 수 있습니다.<br>그런데 어떻게 실행이 끝나버린 함수의 내부에 접근할 수 있을까요?</p>\n<p>이는 실행이 끝났어도 그것을 참조하는 대상이 하나라도 있는 경우 가비지 컬렉션의 대상이 되지 않아서입니다.<br>그래서 클로저를 더이상 실행하지 않을 경우 참조를 다 끊어버려 가비지 컬렉터가 수거해가게 만들면 메모리 관리를 효율적으로 할 수 있겠죠.<br>아무튼 이렇게 글로만 봐서는 잘 안 와닿을 수 있습니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_1.58.25.png\" alt=\"2020-07-26-debug-closure/2020-07-26_1.58.25.png\"></p>\n<p>해당 부분에 breakpoint를 지정합니다. breakpoint를 지정하면 해당 파일을 실행할 때 breakpoint에서 실행이 멈추게 됩니다.<br>breakpoint를 지정하면 우측 breakpoints 패널에 현재 지정한 breakpoint들이 나옵니다.<br>지정이 끝났으면 새로고침을 해봅시다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_1.59.00.png\" alt=\"2020-07-26-debug-closure/2020-07-26_1.59.00.png\"></p>\n<p>8번 라인이 실행된 상태로 실행이 중단됩니다.<br>우선 콜 스택 부분을 봅시다. 처음에는 전역 컨텍스트가 실행되기 때문에 anoymous 함수가 쌓입니다. 실행 컨텍스트를 설명하는 다른 글에서는 main 함수가 쌓인다고도 하는데 anoymous 함수나 main 함수나 동일합니다. 단지 표현의 차이일 뿐입니다. (크롬은 anoymous로 표현)<br>전역 컨텍스트이기 때문에 스코프는 글로벌이 됩니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.00.20.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.00.20.png\"></p>\n<p>Step(빨간 박스) 버튼을 눌러 다음 실행으로 이동합니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.01.52.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.01.52.png\"></p>\n<p>outer 함수가 실행되면서 콜스택에 쌓입니다.</p>\n<p>이때 함수가 호출된 상태이기 때문에 자바스크립트 엔진이 outer에 대한 환경 정보를 수집해서 실행 컨텍스트를 생성합니다. 환경 정보는 함수 내에 있는 모든 것(변수, 함수 선언, 스코프, this)이라 생각하면 편합니다. 그래서 scope에 count, inner, this가 생성되는 것입니다. <strong>위에서 클로저는 선언된 당시의 정보를 담는다고 그랬죠?(개념 2번) outer 스코프 내에 있는 count와 inner, this가 바로 outer 함수의 정보라 할 수 있습니다</strong>.</p>\n<p>참고로 count와 inner의 값이 undefined인 이유는 아직 할당 단계에 다다르지 않았기 때문입니다. 실행 컨텍스트에서 변수는 선언 단계 → 초기화 단계 → 할당 단계를 거쳐 값이 할당되게 되는데, var 키워드로 선언된 변수의 경우 선언 단계와 초기화 단계가 한번에 이루어지게 됩니다. 이 상태에서 count 변수나 inner 함수에 접근하면 undefined를 반환하는데요, 이게 그 유명한 호이스팅입니다.</p>\n<p>잠시 딴 길로 샜는데요. Step 버튼을 눌러 다음 라인으로 가봅시다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.18.18.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.18.18.png\"></p>\n<p>변수 count는 할당 단계를 거쳐 1을 할당받았습니다.</p>\n<p>한번 더 Step 버튼을 눌러봅시다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.19.55.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.19.55.png\"></p>\n<p>inner는 할당 단계를 거쳐 익명 함수(<code>function() {return ++count;}</code>)를 할당받았습니다.<br>이때 outer 함수의 스코프에는 return value가 생깁니다. 이때의 return value는 inner겠죠?<br>return value가 함수로 나오는 이유는 inner가 익명 함수를 할당받았기 때문입니다.<br>다음 Step으로 가봅시다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.25.15.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.25.15.png\"></p>\n<p>outer 함수의 실행이 종료되었습니다. 우측 콜 스택 패널을 보면 outer 함수가 사라진 것을 확인할 수 있습니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.26.10.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.26.10.png\"></p>\n<p>9번 라인에서 outer2()가 실행된 모습입니다. <strong>위에서 클로저는 이미 생명 주기가 끝난 외부 함수의 변수를 참조하는 현상(개념 1번)이라고 했었습니다. outer2()는 이미 생명 주기가 끝난 outer() 함수의 변수 inner를 참조하고 있기 때문에 4번 라인으로 이동하게 됩니다.</strong></p>\n<p>outer2로 inner 함수를 실행한 상태이기 때문에 콜 스택에는 inner가 쌓이게 됩니다.<br>우측 스코프 패널을 보시면 스코프에 outer 클로저가 보입니다. 이때 count의 값은 1입니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.35.36.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.35.36.png\"></p>\n<p>전위 연산을 하고 있기 때문에 count는 1이 증가된 2로 반환됩니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.36.58.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.36.58.png\"></p>\n<p>inner() 함수가 종료되며 콜 스택에서 사라졌습니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.38.10.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.38.10.png\"></p>\n<p>그리고 콘솔에는 2가 출력이 됩니다.<br>10번째 줄을 실행할 차례입니다. 9번 라인을 실행했을 때와 동일합니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.39.16.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.39.16.png\"></p>\n<p>여기서 한가지 주의깊게 보아야 할 것은, 10번 라인을 실행할 때 9번 라인에서 실행한 값을 기억하고 있다는 것입니다. outer2에서 값을 참조하고 있기 때문이죠.<br>우측 scope 패널의 count를 보면 값이 2인 것을 확인할 수 있습니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.40.36.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.40.36.png\"></p>\n<p>전위 연산이 되어 count의 return value는 3이 됩니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.41.25.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.41.25.png\"></p>\n<p>inner() 함수가 종료되며 콜 스택에서 사라졌습니다.</p>\n<p><img src=\"/blog/images/2020-07-26-debug-closure/2020-07-26_2.42.14.png\" alt=\"2020-07-26-debug-closure/2020-07-26_2.42.14.png\"></p>\n<p>마지막으로 3을 출력한 모습입니다.</p>\n"},{"title":"Jekyll에서 Hexo로 블로그 이전하기","date":"2020-02-03T06:27:56.000Z","_content":"\n# 이전을 하는 이유\n\nJekyll에서 Hexo로 블로그를 이전했다.\n이전을 마음먹은 이유는 다음과 같다.\n\n1. Ruby가 아닌 Node 기반의 Static Site Generator를 사용하고 싶어서.\n2. Jekyll 테마들이 마음에 안 들어서. (그래서 TIL과 기술 블로그를 분리했으나... 귀찮음만 더할 뿐이었다.)\n3. 셋업이 귀찮아서.\n\n더 자세히 말하자면, [TIL 블로그](https://seonghui.github.io/TIL/)에서 사용하고 있던 [Just the Docs](https://pmarsceill.github.io/just-the-docs/) 테마가 자잘한 오류들을 뿜어내고 있었다. 메뉴들이 사라진다거나, 순서가 뒤죽박죽이 되거나, 한국어 검색 기능 등이 제대로 동작하지 않았다. Jekyll의 초기 세팅도 까다롭게 느껴졌다. 어느새부턴가 macOS에서 루비를 사용하면 permission 문제가 발생해 가상 환경에 루비를 설치해야 했다.\n이런 상황이 지속되니 기술 블로그를 등한시하고 Notion에 모든 것을 기록하기 시작했다. Notion은 다 좋지만, 배출의 욕구가 해소되지 않았다. 나는 세미(?) 관종이고 검색 엔진에 내 글이 조금이라도 노출됐으면 했다.\n\n고로 블로그 프레임워크를 바꾸기로 마음먹었다. 프레임워크를 Hexo로 결정한 건 순전히 테마가 마음에 들어서다.\n\n# Github 프로젝트 리포지토리에 Hexo 배포하기\n\nHexo는 [문서화](https://hexo.io/docs/)가 굉장히 잘 되어있으므로 공식 문서만 보면 뚝딱 블로그를 만들 수 있다. [Jekyll에서 Hexo로 마이그레이션](https://hexo.io/ko/docs/migration)도 금방 한다. 문제는 **배포**인데, Jekyll과 달리 정적 파일을 generate 해주어야 한다.\n그런데 배포 시 `<username>.github.io`로 블로그를 만들면 원본 소스 파일들을 올리지 못하게 된다.\n\ngithub [문서](https://help.github.com/en/github/working-with-github-pages/about-github-pages#publishing-sources-for-github-pages-sites)를 보면 다음과 같은 내용이 있다.\n\n> The default publishing source for user and organization sites is the master branch. If the repository for your user or organization site has a master branch, your site will publish automatically from that branch. You cannot choose a different publishing source for user or organization sites.\n\n`<username>.github.io` 같은 리포지토리는 위에서 말한 **user site** 에 해당된다.\n즉 `<username>.github.io`로 페이지를 퍼블리싱 하는 경우, 반드시 master 브랜치에 `index.html` 파일이 있어야 한다. 따라서 `hexo generate`로 생성한 배포 파일들을 master 브랜치로 푸시해야 하는데, 이렇게 하니 원본 소스의 버전 관리가 안 되는 단점이 생긴다.\n\n하지만, 프로젝트 리포지토리에 배포를 하는 경우 docs 폴더나 gh-pages 브랜치에 배포를 하면 정적 사이트를 생성할 수 있다. 그래서 프로젝트 리포지토리를 활용하기로 했다. **프로젝트 리포지토리의 master 브랜치에는 버전 관리가 필요한 원본 소스를 푸시하고, gh-pages 브랜치에는 `hexo generate` 명령어로 생성한 파일들을 푸시**하면 되는 것이다.\n우선 github에서 blog라는 리포지토리를 생성 후 hexo 블로그를 연동한 다음, `_config.yml` 파일을 열어 다음과 같이 설정을 해주었다.\n\n```yml\n# url은 https://seonghui.github.io/<리포지토리 이름>으로 설정\nurl: https://seonghui.github.io/blog\n\n# 루트를 '/<리포지토리 이름>/'으로 설정\nroot: /blog/\n\ndeploy:\n  type: git\n  # 리포지토리 연결\n  repo: https://github.com/Seonghui/blog\n  # 배포할 브랜치를 gh-pages로 설정\n  branch: gh-pages\n```\n\n이후 `hexo clean && hexo deploy` 명령어로 gh-pages 브랜치에에 배포를 하고, 변경된 파일을 master 브랜치에 푸시하면 끝이다. 배포가 잘 되었는지는 `https://<username>.github.io/<리포지토리>`에서 확인하면 된다.\n\n만약 404 에러가 뜨는 경우, 해당 리포지토리의 settings 메뉴의 GitHub Pages의 Source를 **gh-pages branch**로 변경하면 된다.\n\n![example](/blog/images/2020-02-03-post/5.png)\n![example](/blog/images/2020-02-03-post/10.png)","source":"_posts/2020-02-03-post.md","raw":"---\ntitle: Jekyll에서 Hexo로 블로그 이전하기\ndate: 2020-02-03 15:27:56\ntags:\ncategories: etc\n---\n\n# 이전을 하는 이유\n\nJekyll에서 Hexo로 블로그를 이전했다.\n이전을 마음먹은 이유는 다음과 같다.\n\n1. Ruby가 아닌 Node 기반의 Static Site Generator를 사용하고 싶어서.\n2. Jekyll 테마들이 마음에 안 들어서. (그래서 TIL과 기술 블로그를 분리했으나... 귀찮음만 더할 뿐이었다.)\n3. 셋업이 귀찮아서.\n\n더 자세히 말하자면, [TIL 블로그](https://seonghui.github.io/TIL/)에서 사용하고 있던 [Just the Docs](https://pmarsceill.github.io/just-the-docs/) 테마가 자잘한 오류들을 뿜어내고 있었다. 메뉴들이 사라진다거나, 순서가 뒤죽박죽이 되거나, 한국어 검색 기능 등이 제대로 동작하지 않았다. Jekyll의 초기 세팅도 까다롭게 느껴졌다. 어느새부턴가 macOS에서 루비를 사용하면 permission 문제가 발생해 가상 환경에 루비를 설치해야 했다.\n이런 상황이 지속되니 기술 블로그를 등한시하고 Notion에 모든 것을 기록하기 시작했다. Notion은 다 좋지만, 배출의 욕구가 해소되지 않았다. 나는 세미(?) 관종이고 검색 엔진에 내 글이 조금이라도 노출됐으면 했다.\n\n고로 블로그 프레임워크를 바꾸기로 마음먹었다. 프레임워크를 Hexo로 결정한 건 순전히 테마가 마음에 들어서다.\n\n# Github 프로젝트 리포지토리에 Hexo 배포하기\n\nHexo는 [문서화](https://hexo.io/docs/)가 굉장히 잘 되어있으므로 공식 문서만 보면 뚝딱 블로그를 만들 수 있다. [Jekyll에서 Hexo로 마이그레이션](https://hexo.io/ko/docs/migration)도 금방 한다. 문제는 **배포**인데, Jekyll과 달리 정적 파일을 generate 해주어야 한다.\n그런데 배포 시 `<username>.github.io`로 블로그를 만들면 원본 소스 파일들을 올리지 못하게 된다.\n\ngithub [문서](https://help.github.com/en/github/working-with-github-pages/about-github-pages#publishing-sources-for-github-pages-sites)를 보면 다음과 같은 내용이 있다.\n\n> The default publishing source for user and organization sites is the master branch. If the repository for your user or organization site has a master branch, your site will publish automatically from that branch. You cannot choose a different publishing source for user or organization sites.\n\n`<username>.github.io` 같은 리포지토리는 위에서 말한 **user site** 에 해당된다.\n즉 `<username>.github.io`로 페이지를 퍼블리싱 하는 경우, 반드시 master 브랜치에 `index.html` 파일이 있어야 한다. 따라서 `hexo generate`로 생성한 배포 파일들을 master 브랜치로 푸시해야 하는데, 이렇게 하니 원본 소스의 버전 관리가 안 되는 단점이 생긴다.\n\n하지만, 프로젝트 리포지토리에 배포를 하는 경우 docs 폴더나 gh-pages 브랜치에 배포를 하면 정적 사이트를 생성할 수 있다. 그래서 프로젝트 리포지토리를 활용하기로 했다. **프로젝트 리포지토리의 master 브랜치에는 버전 관리가 필요한 원본 소스를 푸시하고, gh-pages 브랜치에는 `hexo generate` 명령어로 생성한 파일들을 푸시**하면 되는 것이다.\n우선 github에서 blog라는 리포지토리를 생성 후 hexo 블로그를 연동한 다음, `_config.yml` 파일을 열어 다음과 같이 설정을 해주었다.\n\n```yml\n# url은 https://seonghui.github.io/<리포지토리 이름>으로 설정\nurl: https://seonghui.github.io/blog\n\n# 루트를 '/<리포지토리 이름>/'으로 설정\nroot: /blog/\n\ndeploy:\n  type: git\n  # 리포지토리 연결\n  repo: https://github.com/Seonghui/blog\n  # 배포할 브랜치를 gh-pages로 설정\n  branch: gh-pages\n```\n\n이후 `hexo clean && hexo deploy` 명령어로 gh-pages 브랜치에에 배포를 하고, 변경된 파일을 master 브랜치에 푸시하면 끝이다. 배포가 잘 되었는지는 `https://<username>.github.io/<리포지토리>`에서 확인하면 된다.\n\n만약 404 에러가 뜨는 경우, 해당 리포지토리의 settings 메뉴의 GitHub Pages의 Source를 **gh-pages branch**로 변경하면 된다.\n\n![example](/blog/images/2020-02-03-post/5.png)\n![example](/blog/images/2020-02-03-post/10.png)","slug":"post","published":1,"updated":"2020-07-26T06:53:14.649Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhx007luv59avouaxf0","content":"<h1 id=\"이전을-하는-이유\"><a href=\"#이전을-하는-이유\" class=\"headerlink\" title=\"이전을 하는 이유\"></a>이전을 하는 이유</h1><p>Jekyll에서 Hexo로 블로그를 이전했다.<br>이전을 마음먹은 이유는 다음과 같다.</p>\n<ol>\n<li>Ruby가 아닌 Node 기반의 Static Site Generator를 사용하고 싶어서.</li>\n<li>Jekyll 테마들이 마음에 안 들어서. (그래서 TIL과 기술 블로그를 분리했으나… 귀찮음만 더할 뿐이었다.)</li>\n<li>셋업이 귀찮아서.</li>\n</ol>\n<p>더 자세히 말하자면, <a href=\"https://seonghui.github.io/TIL/\">TIL 블로그</a>에서 사용하고 있던 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbWFyc2NlaWxsLmdpdGh1Yi5pby9qdXN0LXRoZS1kb2NzLw==\" title=\"https://pmarsceill.github.io/just-the-docs/\">Just the Docs<i class=\"fa fa-external-link\"></i></span> 테마가 자잘한 오류들을 뿜어내고 있었다. 메뉴들이 사라진다거나, 순서가 뒤죽박죽이 되거나, 한국어 검색 기능 등이 제대로 동작하지 않았다. Jekyll의 초기 세팅도 까다롭게 느껴졌다. 어느새부턴가 macOS에서 루비를 사용하면 permission 문제가 발생해 가상 환경에 루비를 설치해야 했다.<br>이런 상황이 지속되니 기술 블로그를 등한시하고 Notion에 모든 것을 기록하기 시작했다. Notion은 다 좋지만, 배출의 욕구가 해소되지 않았다. 나는 세미(?) 관종이고 검색 엔진에 내 글이 조금이라도 노출됐으면 했다.</p>\n<p>고로 블로그 프레임워크를 바꾸기로 마음먹었다. 프레임워크를 Hexo로 결정한 건 순전히 테마가 마음에 들어서다.</p>\n<h1 id=\"Github-프로젝트-리포지토리에-Hexo-배포하기\"><a href=\"#Github-프로젝트-리포지토리에-Hexo-배포하기\" class=\"headerlink\" title=\"Github 프로젝트 리포지토리에 Hexo 배포하기\"></a>Github 프로젝트 리포지토리에 Hexo 배포하기</h1><p>Hexo는 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\" title=\"https://hexo.io/docs/\">문서화<i class=\"fa fa-external-link\"></i></span>가 굉장히 잘 되어있으므로 공식 문서만 보면 뚝딱 블로그를 만들 수 있다. <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2tvL2RvY3MvbWlncmF0aW9u\" title=\"https://hexo.io/ko/docs/migration\">Jekyll에서 Hexo로 마이그레이션<i class=\"fa fa-external-link\"></i></span>도 금방 한다. 문제는 <strong>배포</strong>인데, Jekyll과 달리 정적 파일을 generate 해주어야 한다.<br>그런데 배포 시 <code>&lt;username&gt;.github.io</code>로 블로그를 만들면 원본 소스 파일들을 올리지 못하게 된다.</p>\n<p>github <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vZW4vZ2l0aHViL3dvcmtpbmctd2l0aC1naXRodWItcGFnZXMvYWJvdXQtZ2l0aHViLXBhZ2VzI3B1Ymxpc2hpbmctc291cmNlcy1mb3ItZ2l0aHViLXBhZ2VzLXNpdGVz\" title=\"https://help.github.com/en/github/working-with-github-pages/about-github-pages#publishing-sources-for-github-pages-sites\">문서<i class=\"fa fa-external-link\"></i></span>를 보면 다음과 같은 내용이 있다.</p>\n<blockquote>\n<p>The default publishing source for user and organization sites is the master branch. If the repository for your user or organization site has a master branch, your site will publish automatically from that branch. You cannot choose a different publishing source for user or organization sites.</p>\n</blockquote>\n<p><code>&lt;username&gt;.github.io</code> 같은 리포지토리는 위에서 말한 <strong>user site</strong> 에 해당된다.<br>즉 <code>&lt;username&gt;.github.io</code>로 페이지를 퍼블리싱 하는 경우, 반드시 master 브랜치에 <code>index.html</code> 파일이 있어야 한다. 따라서 <code>hexo generate</code>로 생성한 배포 파일들을 master 브랜치로 푸시해야 하는데, 이렇게 하니 원본 소스의 버전 관리가 안 되는 단점이 생긴다.</p>\n<p>하지만, 프로젝트 리포지토리에 배포를 하는 경우 docs 폴더나 gh-pages 브랜치에 배포를 하면 정적 사이트를 생성할 수 있다. 그래서 프로젝트 리포지토리를 활용하기로 했다. <strong>프로젝트 리포지토리의 master 브랜치에는 버전 관리가 필요한 원본 소스를 푸시하고, gh-pages 브랜치에는 <code>hexo generate</code> 명령어로 생성한 파일들을 푸시</strong>하면 되는 것이다.<br>우선 github에서 blog라는 리포지토리를 생성 후 hexo 블로그를 연동한 다음, <code>_config.yml</code> 파일을 열어 다음과 같이 설정을 해주었다.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># url은 https://seonghui.github.io/&lt;리포지토리 이름&gt;으로 설정</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://seonghui.github.io/blog</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 루트를 '/&lt;리포지토리 이름&gt;/'으로 설정</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/blog/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"comment\"># 리포지토리 연결</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/Seonghui/blog</span></span><br><span class=\"line\">  <span class=\"comment\"># 배포할 브랜치를 gh-pages로 설정</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">gh-pages</span></span><br></pre></td></tr></table></figure>\n\n<p>이후 <code>hexo clean &amp;&amp; hexo deploy</code> 명령어로 gh-pages 브랜치에에 배포를 하고, 변경된 파일을 master 브랜치에 푸시하면 끝이다. 배포가 잘 되었는지는 <code>https://&lt;username&gt;.github.io/&lt;리포지토리&gt;</code>에서 확인하면 된다.</p>\n<p>만약 404 에러가 뜨는 경우, 해당 리포지토리의 settings 메뉴의 GitHub Pages의 Source를 <strong>gh-pages branch</strong>로 변경하면 된다.</p>\n<p><img src=\"/blog/images/2020-02-03-post/5.png\" alt=\"example\"><br><img src=\"/blog/images/2020-02-03-post/10.png\" alt=\"example\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"이전을-하는-이유\"><a href=\"#이전을-하는-이유\" class=\"headerlink\" title=\"이전을 하는 이유\"></a>이전을 하는 이유</h1><p>Jekyll에서 Hexo로 블로그를 이전했다.<br>이전을 마음먹은 이유는 다음과 같다.</p>\n<ol>\n<li>Ruby가 아닌 Node 기반의 Static Site Generator를 사용하고 싶어서.</li>\n<li>Jekyll 테마들이 마음에 안 들어서. (그래서 TIL과 기술 블로그를 분리했으나… 귀찮음만 더할 뿐이었다.)</li>\n<li>셋업이 귀찮아서.</li>\n</ol>\n<p>더 자세히 말하자면, <a href=\"https://seonghui.github.io/TIL/\">TIL 블로그</a>에서 사용하고 있던 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbWFyc2NlaWxsLmdpdGh1Yi5pby9qdXN0LXRoZS1kb2NzLw==\" title=\"https://pmarsceill.github.io/just-the-docs/\">Just the Docs<i class=\"fa fa-external-link\"></i></span> 테마가 자잘한 오류들을 뿜어내고 있었다. 메뉴들이 사라진다거나, 순서가 뒤죽박죽이 되거나, 한국어 검색 기능 등이 제대로 동작하지 않았다. Jekyll의 초기 세팅도 까다롭게 느껴졌다. 어느새부턴가 macOS에서 루비를 사용하면 permission 문제가 발생해 가상 환경에 루비를 설치해야 했다.<br>이런 상황이 지속되니 기술 블로그를 등한시하고 Notion에 모든 것을 기록하기 시작했다. Notion은 다 좋지만, 배출의 욕구가 해소되지 않았다. 나는 세미(?) 관종이고 검색 엔진에 내 글이 조금이라도 노출됐으면 했다.</p>\n<p>고로 블로그 프레임워크를 바꾸기로 마음먹었다. 프레임워크를 Hexo로 결정한 건 순전히 테마가 마음에 들어서다.</p>\n<h1 id=\"Github-프로젝트-리포지토리에-Hexo-배포하기\"><a href=\"#Github-프로젝트-리포지토리에-Hexo-배포하기\" class=\"headerlink\" title=\"Github 프로젝트 리포지토리에 Hexo 배포하기\"></a>Github 프로젝트 리포지토리에 Hexo 배포하기</h1><p>Hexo는 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\" title=\"https://hexo.io/docs/\">문서화<i class=\"fa fa-external-link\"></i></span>가 굉장히 잘 되어있으므로 공식 문서만 보면 뚝딱 블로그를 만들 수 있다. <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2tvL2RvY3MvbWlncmF0aW9u\" title=\"https://hexo.io/ko/docs/migration\">Jekyll에서 Hexo로 마이그레이션<i class=\"fa fa-external-link\"></i></span>도 금방 한다. 문제는 <strong>배포</strong>인데, Jekyll과 달리 정적 파일을 generate 해주어야 한다.<br>그런데 배포 시 <code>&lt;username&gt;.github.io</code>로 블로그를 만들면 원본 소스 파일들을 올리지 못하게 된다.</p>\n<p>github <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZWxwLmdpdGh1Yi5jb20vZW4vZ2l0aHViL3dvcmtpbmctd2l0aC1naXRodWItcGFnZXMvYWJvdXQtZ2l0aHViLXBhZ2VzI3B1Ymxpc2hpbmctc291cmNlcy1mb3ItZ2l0aHViLXBhZ2VzLXNpdGVz\" title=\"https://help.github.com/en/github/working-with-github-pages/about-github-pages#publishing-sources-for-github-pages-sites\">문서<i class=\"fa fa-external-link\"></i></span>를 보면 다음과 같은 내용이 있다.</p>\n<blockquote>\n<p>The default publishing source for user and organization sites is the master branch. If the repository for your user or organization site has a master branch, your site will publish automatically from that branch. You cannot choose a different publishing source for user or organization sites.</p>\n</blockquote>\n<p><code>&lt;username&gt;.github.io</code> 같은 리포지토리는 위에서 말한 <strong>user site</strong> 에 해당된다.<br>즉 <code>&lt;username&gt;.github.io</code>로 페이지를 퍼블리싱 하는 경우, 반드시 master 브랜치에 <code>index.html</code> 파일이 있어야 한다. 따라서 <code>hexo generate</code>로 생성한 배포 파일들을 master 브랜치로 푸시해야 하는데, 이렇게 하니 원본 소스의 버전 관리가 안 되는 단점이 생긴다.</p>\n<p>하지만, 프로젝트 리포지토리에 배포를 하는 경우 docs 폴더나 gh-pages 브랜치에 배포를 하면 정적 사이트를 생성할 수 있다. 그래서 프로젝트 리포지토리를 활용하기로 했다. <strong>프로젝트 리포지토리의 master 브랜치에는 버전 관리가 필요한 원본 소스를 푸시하고, gh-pages 브랜치에는 <code>hexo generate</code> 명령어로 생성한 파일들을 푸시</strong>하면 되는 것이다.<br>우선 github에서 blog라는 리포지토리를 생성 후 hexo 블로그를 연동한 다음, <code>_config.yml</code> 파일을 열어 다음과 같이 설정을 해주었다.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># url은 https://seonghui.github.io/&lt;리포지토리 이름&gt;으로 설정</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://seonghui.github.io/blog</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 루트를 '/&lt;리포지토리 이름&gt;/'으로 설정</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/blog/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"comment\"># 리포지토리 연결</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/Seonghui/blog</span></span><br><span class=\"line\">  <span class=\"comment\"># 배포할 브랜치를 gh-pages로 설정</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">gh-pages</span></span><br></pre></td></tr></table></figure>\n\n<p>이후 <code>hexo clean &amp;&amp; hexo deploy</code> 명령어로 gh-pages 브랜치에에 배포를 하고, 변경된 파일을 master 브랜치에 푸시하면 끝이다. 배포가 잘 되었는지는 <code>https://&lt;username&gt;.github.io/&lt;리포지토리&gt;</code>에서 확인하면 된다.</p>\n<p>만약 404 에러가 뜨는 경우, 해당 리포지토리의 settings 메뉴의 GitHub Pages의 Source를 <strong>gh-pages branch</strong>로 변경하면 된다.</p>\n<p><img src=\"/blog/images/2020-02-03-post/5.png\" alt=\"example\"><br><img src=\"/blog/images/2020-02-03-post/10.png\" alt=\"example\"></p>\n"},{"title":"typescript-eslint-prettier","date":"2020-12-27T10:52:24.000Z","_content":"# 기본 설정\n\n## eslint 설치\n\n아래 패키지들을 설치한다.\n\n```bash\n$ yarn add -D eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin\n$ npm install --save-dev eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin\n```\n\n- `eslint`: Javascript Linter\n- `typescript`: Typescript... 설치 안 했다면 하자 ^-^\n- `@typescript-eslint/parser`: 타입스크립트에서 ESLint를 사용할 수 있게 하는 파서\n- `@typescript-eslint/eslint-plugin`: 코드베이스에서 ESLint 규칙을 적용하는 플러그인\n\n## 설정\n\n프로젝트 루트에 `.eslintrc.js` 파일을 생성한 다음 아래 코드를 복붙한다.\n\n```javascript\nmodule.exports = {\n  root: true,\n  parser: '@typescript-eslint/parser',\n  plugins: [\n    '@typescript-eslint',\n  ],\n  extends: [\n    'eslint:recommended',\n    'plugin:@typescript-eslint/recommended',\n  ],\n};\n```\n\n- `root`: true로 설정하지 않으면 파일 시스템의 상위 폴더까지 탐색하기 때문에 설정해준다.\n- `parser`: 위에서 설치한 parser를 적용한다.\n- `plugin`: 위에서 설치한 plugin을 적용한다.\n- `extends`\n    - `eslint:recommended`을 적용하면 ESLint의 내장되어있는 추천 설정을 사용할 수 있다.\n    - `@typescript-eslint/recommended`는 `eslint:recommended` 와 비슷하다. 이걸 적용하면 타입스크립트 전용 규칙을 추가적으로 사용할 수 있다.\n\n### env\n\n여기에 추가적으로 `env`를 설정한다. 미리 정의된 전역 변수를 정의해준다.\n브라우저 환경에서 lint를 돌릴 경우 `env`에 `browser`를 추가해준다.\n\n```javascript\nmodule.exports = {\n  root: true,\n  parser: '@typescript-eslint/parser',\n  plugins: [\n    '@typescript-eslint',\n  ],\n  extends: [\n    'eslint:recommended',\n    'plugin:@typescript-eslint/recommended',\n  ],\n  env: {\n    browser: true,\n  }\n};\n```\n\n## 불필요한 파일 무시\n\n`.eslintignore` 파일 만들고 무시할 파일/폴더를 추가해준다.\n\n```\nnode_modules\ndist\n```\n\n## 실행\n\n```bash\n$ yarn eslint . --ext .js,.jsx,.ts,.tsx\n$ npx eslint . --ext .js,.jsx,.ts,.tsx\n```\n\n여기서 `--ext`는 javascript file extensions을 설정하는 옵션이다. 기본값은 `.js`이다.\n\n# Airbnb/Standard 규칙 적용하기\n\n- Airbnb's ESLint config - [eslint-config-airbnb-typescript](https://www.npmjs.com/package/eslint-config-airbnb-typescript).\n- Standard - [eslint-config-standard-with-typescript](https://www.npmjs.com/package/eslint-config-standard-with-typescript).\n\n둘 중 원하는 거 설치해서 적용하면 된다. 나는 Standard 설정을 적용해보았다.\nextends의 eslint 추천 설정들을 삭제하고 원하는 스타일을 적용하면 된다.\n\n```javascript\nmodule.exports = {\n  root: true,\n  parser: '@typescript-eslint/parser',\n  plugins: [\n    '@typescript-eslint',\n  ],\n  extends: ['standard-with-typescript'],\n  parserOptions: {\n    project: './tsconfig.js'\n  },\n\tignorePatterns: ['.eslintrc.js'],\n};\n```\n\n이때 `parserOptions.project`을 설정해줘야 된다. 없으면 에러가 발생한다.\n왜 에러가 발생하나 했더니... 타입 명시가 필요한 규칙의 경우 이 설정이 필요하다고 나와있다. ([문서](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/parser/README.md#parseroptionsproject) 참고)\n`parserOptions.project` 을 설정하면 ESLint가 eslintrc.js 파일도 lint를 시도하기 때문에 `ignorePatterns`을 추가한다.\n\n# Prettier와 함께 사용하기\n\n## 의존성 설치\n\n```bash\n$ yarn add -D  --save-dev prettier eslint-plugin-prettier eslint-config-prettier\n$ npm install --save-dev prettier eslint-plugin-prettier eslint-config-prettier\n```\n\n- `prettier`: prettier\n- `eslint-config-prettier`: 불필요하거나 Prettier와 충돌할 수 있는 모든 규칙을 비활성화\n- `eslint-plugin-prettier`: 코드 포매팅할 때 Prettier를 사용하게 만드는 규칙을 추가\n\n## .eslintrc에 prettier 설정 추가\n\n```javascript\nmodule.exports = {\n  root: true,\n  parser: '@typescript-eslint/parser',\n  plugins: ['@typescript-eslint', 'prettier'],\n  extends: ['standard-with-typescript', 'prettier', 'plugin:prettier/recommended'],\n  parserOptions: {\n    project: './tsconfig.json',\n  },\n  rules: {\n    '@typescript-eslint/semi': 'off',\n    '@typescript-eslint/space-before-function-paren': 'off',\n  },\n};\n```\n\n`eslint-config-prettier` 추가한다고 해도 충돌이 나는 경우가 있는데, 이 경우 rules 옵션 설정해주면 된다.\n\n## .prettierrc 생성\n\n```javascript\n{\n  \"trailingComma\": \"all\",\n  \"tabWidth\": 2,\n  \"semi\": true,\n  \"singleQuote\": true,\n  \"printWidth\": 160,\n  \"parser\": \"typescript\"\n}\n```\n\n# 참고 문서\n\n[typescript-eslint/typescript-eslint](https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md#configuration)","source":"_posts/2020-12-27-typescript-eslint-prettier.md","raw":"---\ntitle: typescript-eslint-prettier\ndate: 2020-12-27 19:52:24\ntags:\ncategories:\n---\n# 기본 설정\n\n## eslint 설치\n\n아래 패키지들을 설치한다.\n\n```bash\n$ yarn add -D eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin\n$ npm install --save-dev eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin\n```\n\n- `eslint`: Javascript Linter\n- `typescript`: Typescript... 설치 안 했다면 하자 ^-^\n- `@typescript-eslint/parser`: 타입스크립트에서 ESLint를 사용할 수 있게 하는 파서\n- `@typescript-eslint/eslint-plugin`: 코드베이스에서 ESLint 규칙을 적용하는 플러그인\n\n## 설정\n\n프로젝트 루트에 `.eslintrc.js` 파일을 생성한 다음 아래 코드를 복붙한다.\n\n```javascript\nmodule.exports = {\n  root: true,\n  parser: '@typescript-eslint/parser',\n  plugins: [\n    '@typescript-eslint',\n  ],\n  extends: [\n    'eslint:recommended',\n    'plugin:@typescript-eslint/recommended',\n  ],\n};\n```\n\n- `root`: true로 설정하지 않으면 파일 시스템의 상위 폴더까지 탐색하기 때문에 설정해준다.\n- `parser`: 위에서 설치한 parser를 적용한다.\n- `plugin`: 위에서 설치한 plugin을 적용한다.\n- `extends`\n    - `eslint:recommended`을 적용하면 ESLint의 내장되어있는 추천 설정을 사용할 수 있다.\n    - `@typescript-eslint/recommended`는 `eslint:recommended` 와 비슷하다. 이걸 적용하면 타입스크립트 전용 규칙을 추가적으로 사용할 수 있다.\n\n### env\n\n여기에 추가적으로 `env`를 설정한다. 미리 정의된 전역 변수를 정의해준다.\n브라우저 환경에서 lint를 돌릴 경우 `env`에 `browser`를 추가해준다.\n\n```javascript\nmodule.exports = {\n  root: true,\n  parser: '@typescript-eslint/parser',\n  plugins: [\n    '@typescript-eslint',\n  ],\n  extends: [\n    'eslint:recommended',\n    'plugin:@typescript-eslint/recommended',\n  ],\n  env: {\n    browser: true,\n  }\n};\n```\n\n## 불필요한 파일 무시\n\n`.eslintignore` 파일 만들고 무시할 파일/폴더를 추가해준다.\n\n```\nnode_modules\ndist\n```\n\n## 실행\n\n```bash\n$ yarn eslint . --ext .js,.jsx,.ts,.tsx\n$ npx eslint . --ext .js,.jsx,.ts,.tsx\n```\n\n여기서 `--ext`는 javascript file extensions을 설정하는 옵션이다. 기본값은 `.js`이다.\n\n# Airbnb/Standard 규칙 적용하기\n\n- Airbnb's ESLint config - [eslint-config-airbnb-typescript](https://www.npmjs.com/package/eslint-config-airbnb-typescript).\n- Standard - [eslint-config-standard-with-typescript](https://www.npmjs.com/package/eslint-config-standard-with-typescript).\n\n둘 중 원하는 거 설치해서 적용하면 된다. 나는 Standard 설정을 적용해보았다.\nextends의 eslint 추천 설정들을 삭제하고 원하는 스타일을 적용하면 된다.\n\n```javascript\nmodule.exports = {\n  root: true,\n  parser: '@typescript-eslint/parser',\n  plugins: [\n    '@typescript-eslint',\n  ],\n  extends: ['standard-with-typescript'],\n  parserOptions: {\n    project: './tsconfig.js'\n  },\n\tignorePatterns: ['.eslintrc.js'],\n};\n```\n\n이때 `parserOptions.project`을 설정해줘야 된다. 없으면 에러가 발생한다.\n왜 에러가 발생하나 했더니... 타입 명시가 필요한 규칙의 경우 이 설정이 필요하다고 나와있다. ([문서](https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/parser/README.md#parseroptionsproject) 참고)\n`parserOptions.project` 을 설정하면 ESLint가 eslintrc.js 파일도 lint를 시도하기 때문에 `ignorePatterns`을 추가한다.\n\n# Prettier와 함께 사용하기\n\n## 의존성 설치\n\n```bash\n$ yarn add -D  --save-dev prettier eslint-plugin-prettier eslint-config-prettier\n$ npm install --save-dev prettier eslint-plugin-prettier eslint-config-prettier\n```\n\n- `prettier`: prettier\n- `eslint-config-prettier`: 불필요하거나 Prettier와 충돌할 수 있는 모든 규칙을 비활성화\n- `eslint-plugin-prettier`: 코드 포매팅할 때 Prettier를 사용하게 만드는 규칙을 추가\n\n## .eslintrc에 prettier 설정 추가\n\n```javascript\nmodule.exports = {\n  root: true,\n  parser: '@typescript-eslint/parser',\n  plugins: ['@typescript-eslint', 'prettier'],\n  extends: ['standard-with-typescript', 'prettier', 'plugin:prettier/recommended'],\n  parserOptions: {\n    project: './tsconfig.json',\n  },\n  rules: {\n    '@typescript-eslint/semi': 'off',\n    '@typescript-eslint/space-before-function-paren': 'off',\n  },\n};\n```\n\n`eslint-config-prettier` 추가한다고 해도 충돌이 나는 경우가 있는데, 이 경우 rules 옵션 설정해주면 된다.\n\n## .prettierrc 생성\n\n```javascript\n{\n  \"trailingComma\": \"all\",\n  \"tabWidth\": 2,\n  \"semi\": true,\n  \"singleQuote\": true,\n  \"printWidth\": 160,\n  \"parser\": \"typescript\"\n}\n```\n\n# 참고 문서\n\n[typescript-eslint/typescript-eslint](https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md#configuration)","slug":"typescript-eslint-prettier","published":1,"updated":"2020-12-27T10:58:46.690Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckj71afhx007ouv594cdvhesl","content":"<h1 id=\"기본-설정\"><a href=\"#기본-설정\" class=\"headerlink\" title=\"기본 설정\"></a>기본 설정</h1><h2 id=\"eslint-설치\"><a href=\"#eslint-설치\" class=\"headerlink\" title=\"eslint 설치\"></a>eslint 설치</h2><p>아래 패키지들을 설치한다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yarn add -D eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin</span><br><span class=\"line\">$ npm install --save-dev eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>eslint</code>: Javascript Linter</li>\n<li><code>typescript</code>: Typescript… 설치 안 했다면 하자 ^-^</li>\n<li><code>@typescript-eslint/parser</code>: 타입스크립트에서 ESLint를 사용할 수 있게 하는 파서</li>\n<li><code>@typescript-eslint/eslint-plugin</code>: 코드베이스에서 ESLint 규칙을 적용하는 플러그인</li>\n</ul>\n<h2 id=\"설정\"><a href=\"#설정\" class=\"headerlink\" title=\"설정\"></a>설정</h2><p>프로젝트 루트에 <code>.eslintrc.js</code> 파일을 생성한 다음 아래 코드를 복붙한다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  root: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  parser: <span class=\"string\">'@typescript-eslint/parser'</span>,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint'</span>,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  extends: [</span><br><span class=\"line\">    <span class=\"string\">'eslint:recommended'</span>,</span><br><span class=\"line\">    <span class=\"string\">'plugin:@typescript-eslint/recommended'</span>,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>root</code>: true로 설정하지 않으면 파일 시스템의 상위 폴더까지 탐색하기 때문에 설정해준다.</li>\n<li><code>parser</code>: 위에서 설치한 parser를 적용한다.</li>\n<li><code>plugin</code>: 위에서 설치한 plugin을 적용한다.</li>\n<li><code>extends</code><ul>\n<li><code>eslint:recommended</code>을 적용하면 ESLint의 내장되어있는 추천 설정을 사용할 수 있다.</li>\n<li><code>@typescript-eslint/recommended</code>는 <code>eslint:recommended</code> 와 비슷하다. 이걸 적용하면 타입스크립트 전용 규칙을 추가적으로 사용할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"env\"><a href=\"#env\" class=\"headerlink\" title=\"env\"></a>env</h3><p>여기에 추가적으로 <code>env</code>를 설정한다. 미리 정의된 전역 변수를 정의해준다.<br>브라우저 환경에서 lint를 돌릴 경우 <code>env</code>에 <code>browser</code>를 추가해준다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  root: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  parser: <span class=\"string\">'@typescript-eslint/parser'</span>,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint'</span>,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  extends: [</span><br><span class=\"line\">    <span class=\"string\">'eslint:recommended'</span>,</span><br><span class=\"line\">    <span class=\"string\">'plugin:@typescript-eslint/recommended'</span>,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  env: &#123;</span><br><span class=\"line\">    browser: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"불필요한-파일-무시\"><a href=\"#불필요한-파일-무시\" class=\"headerlink\" title=\"불필요한 파일 무시\"></a>불필요한 파일 무시</h2><p><code>.eslintignore</code> 파일 만들고 무시할 파일/폴더를 추가해준다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules</span><br><span class=\"line\">dist</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"실행\"><a href=\"#실행\" class=\"headerlink\" title=\"실행\"></a>실행</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yarn eslint . --ext .js,.jsx,.ts,.tsx</span><br><span class=\"line\">$ npx eslint . --ext .js,.jsx,.ts,.tsx</span><br></pre></td></tr></table></figure>\n\n<p>여기서 <code>--ext</code>는 javascript file extensions을 설정하는 옵션이다. 기본값은 <code>.js</code>이다.</p>\n<h1 id=\"Airbnb-Standard-규칙-적용하기\"><a href=\"#Airbnb-Standard-규칙-적용하기\" class=\"headerlink\" title=\"Airbnb/Standard 규칙 적용하기\"></a>Airbnb/Standard 규칙 적용하기</h1><ul>\n<li>Airbnb’s ESLint config - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZXNsaW50LWNvbmZpZy1haXJibmItdHlwZXNjcmlwdA==\" title=\"https://www.npmjs.com/package/eslint-config-airbnb-typescript\">eslint-config-airbnb-typescript<i class=\"fa fa-external-link\"></i></span>.</li>\n<li>Standard - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZXNsaW50LWNvbmZpZy1zdGFuZGFyZC13aXRoLXR5cGVzY3JpcHQ=\" title=\"https://www.npmjs.com/package/eslint-config-standard-with-typescript\">eslint-config-standard-with-typescript<i class=\"fa fa-external-link\"></i></span>.</li>\n</ul>\n<p>둘 중 원하는 거 설치해서 적용하면 된다. 나는 Standard 설정을 적용해보았다.<br>extends의 eslint 추천 설정들을 삭제하고 원하는 스타일을 적용하면 된다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  root: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  parser: <span class=\"string\">'@typescript-eslint/parser'</span>,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint'</span>,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  extends: [<span class=\"string\">'standard-with-typescript'</span>],</span><br><span class=\"line\">  parserOptions: &#123;</span><br><span class=\"line\">    project: <span class=\"string\">'./tsconfig.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">\tignorePatterns: [<span class=\"string\">'.eslintrc.js'</span>],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>이때 <code>parserOptions.project</code>을 설정해줘야 된다. 없으면 에러가 발생한다.<br>왜 에러가 발생하나 했더니… 타입 명시가 필요한 규칙의 경우 이 설정이 필요하다고 나와있다. (<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3R5cGVzY3JpcHQtZXNsaW50L3R5cGVzY3JpcHQtZXNsaW50L2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3BhcnNlci9SRUFETUUubWQjcGFyc2Vyb3B0aW9uc3Byb2plY3Q=\" title=\"https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/parser/README.md#parseroptionsproject\">문서<i class=\"fa fa-external-link\"></i></span> 참고)<br><code>parserOptions.project</code> 을 설정하면 ESLint가 eslintrc.js 파일도 lint를 시도하기 때문에 <code>ignorePatterns</code>을 추가한다.</p>\n<h1 id=\"Prettier와-함께-사용하기\"><a href=\"#Prettier와-함께-사용하기\" class=\"headerlink\" title=\"Prettier와 함께 사용하기\"></a>Prettier와 함께 사용하기</h1><h2 id=\"의존성-설치\"><a href=\"#의존성-설치\" class=\"headerlink\" title=\"의존성 설치\"></a>의존성 설치</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yarn add -D  --save-dev prettier eslint-plugin-prettier eslint-config-prettier</span><br><span class=\"line\">$ npm install --save-dev prettier eslint-plugin-prettier eslint-config-prettier</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>prettier</code>: prettier</li>\n<li><code>eslint-config-prettier</code>: 불필요하거나 Prettier와 충돌할 수 있는 모든 규칙을 비활성화</li>\n<li><code>eslint-plugin-prettier</code>: 코드 포매팅할 때 Prettier를 사용하게 만드는 규칙을 추가</li>\n</ul>\n<h2 id=\"eslintrc에-prettier-설정-추가\"><a href=\"#eslintrc에-prettier-설정-추가\" class=\"headerlink\" title=\".eslintrc에 prettier 설정 추가\"></a>.eslintrc에 prettier 설정 추가</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  root: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  parser: <span class=\"string\">'@typescript-eslint/parser'</span>,</span><br><span class=\"line\">  plugins: [<span class=\"string\">'@typescript-eslint'</span>, <span class=\"string\">'prettier'</span>],</span><br><span class=\"line\">  extends: [<span class=\"string\">'standard-with-typescript'</span>, <span class=\"string\">'prettier'</span>, <span class=\"string\">'plugin:prettier/recommended'</span>],</span><br><span class=\"line\">  parserOptions: &#123;</span><br><span class=\"line\">    project: <span class=\"string\">'./tsconfig.json'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/semi'</span>: <span class=\"string\">'off'</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/space-before-function-paren'</span>: <span class=\"string\">'off'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><code>eslint-config-prettier</code> 추가한다고 해도 충돌이 나는 경우가 있는데, 이 경우 rules 옵션 설정해주면 된다.</p>\n<h2 id=\"prettierrc-생성\"><a href=\"#prettierrc-생성\" class=\"headerlink\" title=\".prettierrc 생성\"></a>.prettierrc 생성</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"trailingComma\"</span>: <span class=\"string\">\"all\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"tabWidth\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"string\">\"semi\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"singleQuote\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"printWidth\"</span>: <span class=\"number\">160</span>,</span><br><span class=\"line\">  <span class=\"string\">\"parser\"</span>: <span class=\"string\">\"typescript\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"참고-문서\"><a href=\"#참고-문서\" class=\"headerlink\" title=\"참고 문서\"></a>참고 문서</h1><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3R5cGVzY3JpcHQtZXNsaW50L3R5cGVzY3JpcHQtZXNsaW50L2Jsb2IvbWFzdGVyL2RvY3MvZ2V0dGluZy1zdGFydGVkL2xpbnRpbmcvUkVBRE1FLm1kI2NvbmZpZ3VyYXRpb24=\" title=\"https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md#configuration\">typescript-eslint/typescript-eslint<i class=\"fa fa-external-link\"></i></span></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"기본-설정\"><a href=\"#기본-설정\" class=\"headerlink\" title=\"기본 설정\"></a>기본 설정</h1><h2 id=\"eslint-설치\"><a href=\"#eslint-설치\" class=\"headerlink\" title=\"eslint 설치\"></a>eslint 설치</h2><p>아래 패키지들을 설치한다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yarn add -D eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin</span><br><span class=\"line\">$ npm install --save-dev eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>eslint</code>: Javascript Linter</li>\n<li><code>typescript</code>: Typescript… 설치 안 했다면 하자 ^-^</li>\n<li><code>@typescript-eslint/parser</code>: 타입스크립트에서 ESLint를 사용할 수 있게 하는 파서</li>\n<li><code>@typescript-eslint/eslint-plugin</code>: 코드베이스에서 ESLint 규칙을 적용하는 플러그인</li>\n</ul>\n<h2 id=\"설정\"><a href=\"#설정\" class=\"headerlink\" title=\"설정\"></a>설정</h2><p>프로젝트 루트에 <code>.eslintrc.js</code> 파일을 생성한 다음 아래 코드를 복붙한다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  root: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  parser: <span class=\"string\">'@typescript-eslint/parser'</span>,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint'</span>,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  extends: [</span><br><span class=\"line\">    <span class=\"string\">'eslint:recommended'</span>,</span><br><span class=\"line\">    <span class=\"string\">'plugin:@typescript-eslint/recommended'</span>,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>root</code>: true로 설정하지 않으면 파일 시스템의 상위 폴더까지 탐색하기 때문에 설정해준다.</li>\n<li><code>parser</code>: 위에서 설치한 parser를 적용한다.</li>\n<li><code>plugin</code>: 위에서 설치한 plugin을 적용한다.</li>\n<li><code>extends</code><ul>\n<li><code>eslint:recommended</code>을 적용하면 ESLint의 내장되어있는 추천 설정을 사용할 수 있다.</li>\n<li><code>@typescript-eslint/recommended</code>는 <code>eslint:recommended</code> 와 비슷하다. 이걸 적용하면 타입스크립트 전용 규칙을 추가적으로 사용할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"env\"><a href=\"#env\" class=\"headerlink\" title=\"env\"></a>env</h3><p>여기에 추가적으로 <code>env</code>를 설정한다. 미리 정의된 전역 변수를 정의해준다.<br>브라우저 환경에서 lint를 돌릴 경우 <code>env</code>에 <code>browser</code>를 추가해준다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  root: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  parser: <span class=\"string\">'@typescript-eslint/parser'</span>,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint'</span>,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  extends: [</span><br><span class=\"line\">    <span class=\"string\">'eslint:recommended'</span>,</span><br><span class=\"line\">    <span class=\"string\">'plugin:@typescript-eslint/recommended'</span>,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  env: &#123;</span><br><span class=\"line\">    browser: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"불필요한-파일-무시\"><a href=\"#불필요한-파일-무시\" class=\"headerlink\" title=\"불필요한 파일 무시\"></a>불필요한 파일 무시</h2><p><code>.eslintignore</code> 파일 만들고 무시할 파일/폴더를 추가해준다.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_modules</span><br><span class=\"line\">dist</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"실행\"><a href=\"#실행\" class=\"headerlink\" title=\"실행\"></a>실행</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yarn eslint . --ext .js,.jsx,.ts,.tsx</span><br><span class=\"line\">$ npx eslint . --ext .js,.jsx,.ts,.tsx</span><br></pre></td></tr></table></figure>\n\n<p>여기서 <code>--ext</code>는 javascript file extensions을 설정하는 옵션이다. 기본값은 <code>.js</code>이다.</p>\n<h1 id=\"Airbnb-Standard-규칙-적용하기\"><a href=\"#Airbnb-Standard-규칙-적용하기\" class=\"headerlink\" title=\"Airbnb/Standard 규칙 적용하기\"></a>Airbnb/Standard 규칙 적용하기</h1><ul>\n<li>Airbnb’s ESLint config - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZXNsaW50LWNvbmZpZy1haXJibmItdHlwZXNjcmlwdA==\" title=\"https://www.npmjs.com/package/eslint-config-airbnb-typescript\">eslint-config-airbnb-typescript<i class=\"fa fa-external-link\"></i></span>.</li>\n<li>Standard - <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZXNsaW50LWNvbmZpZy1zdGFuZGFyZC13aXRoLXR5cGVzY3JpcHQ=\" title=\"https://www.npmjs.com/package/eslint-config-standard-with-typescript\">eslint-config-standard-with-typescript<i class=\"fa fa-external-link\"></i></span>.</li>\n</ul>\n<p>둘 중 원하는 거 설치해서 적용하면 된다. 나는 Standard 설정을 적용해보았다.<br>extends의 eslint 추천 설정들을 삭제하고 원하는 스타일을 적용하면 된다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  root: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  parser: <span class=\"string\">'@typescript-eslint/parser'</span>,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint'</span>,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  extends: [<span class=\"string\">'standard-with-typescript'</span>],</span><br><span class=\"line\">  parserOptions: &#123;</span><br><span class=\"line\">    project: <span class=\"string\">'./tsconfig.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">\tignorePatterns: [<span class=\"string\">'.eslintrc.js'</span>],</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>이때 <code>parserOptions.project</code>을 설정해줘야 된다. 없으면 에러가 발생한다.<br>왜 에러가 발생하나 했더니… 타입 명시가 필요한 규칙의 경우 이 설정이 필요하다고 나와있다. (<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3R5cGVzY3JpcHQtZXNsaW50L3R5cGVzY3JpcHQtZXNsaW50L2Jsb2IvbWFzdGVyL3BhY2thZ2VzL3BhcnNlci9SRUFETUUubWQjcGFyc2Vyb3B0aW9uc3Byb2plY3Q=\" title=\"https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/parser/README.md#parseroptionsproject\">문서<i class=\"fa fa-external-link\"></i></span> 참고)<br><code>parserOptions.project</code> 을 설정하면 ESLint가 eslintrc.js 파일도 lint를 시도하기 때문에 <code>ignorePatterns</code>을 추가한다.</p>\n<h1 id=\"Prettier와-함께-사용하기\"><a href=\"#Prettier와-함께-사용하기\" class=\"headerlink\" title=\"Prettier와 함께 사용하기\"></a>Prettier와 함께 사용하기</h1><h2 id=\"의존성-설치\"><a href=\"#의존성-설치\" class=\"headerlink\" title=\"의존성 설치\"></a>의존성 설치</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yarn add -D  --save-dev prettier eslint-plugin-prettier eslint-config-prettier</span><br><span class=\"line\">$ npm install --save-dev prettier eslint-plugin-prettier eslint-config-prettier</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>prettier</code>: prettier</li>\n<li><code>eslint-config-prettier</code>: 불필요하거나 Prettier와 충돌할 수 있는 모든 규칙을 비활성화</li>\n<li><code>eslint-plugin-prettier</code>: 코드 포매팅할 때 Prettier를 사용하게 만드는 규칙을 추가</li>\n</ul>\n<h2 id=\"eslintrc에-prettier-설정-추가\"><a href=\"#eslintrc에-prettier-설정-추가\" class=\"headerlink\" title=\".eslintrc에 prettier 설정 추가\"></a>.eslintrc에 prettier 설정 추가</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  root: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  parser: <span class=\"string\">'@typescript-eslint/parser'</span>,</span><br><span class=\"line\">  plugins: [<span class=\"string\">'@typescript-eslint'</span>, <span class=\"string\">'prettier'</span>],</span><br><span class=\"line\">  extends: [<span class=\"string\">'standard-with-typescript'</span>, <span class=\"string\">'prettier'</span>, <span class=\"string\">'plugin:prettier/recommended'</span>],</span><br><span class=\"line\">  parserOptions: &#123;</span><br><span class=\"line\">    project: <span class=\"string\">'./tsconfig.json'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  rules: &#123;</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/semi'</span>: <span class=\"string\">'off'</span>,</span><br><span class=\"line\">    <span class=\"string\">'@typescript-eslint/space-before-function-paren'</span>: <span class=\"string\">'off'</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><code>eslint-config-prettier</code> 추가한다고 해도 충돌이 나는 경우가 있는데, 이 경우 rules 옵션 설정해주면 된다.</p>\n<h2 id=\"prettierrc-생성\"><a href=\"#prettierrc-생성\" class=\"headerlink\" title=\".prettierrc 생성\"></a>.prettierrc 생성</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"trailingComma\"</span>: <span class=\"string\">\"all\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"tabWidth\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"string\">\"semi\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"singleQuote\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">\"printWidth\"</span>: <span class=\"number\">160</span>,</span><br><span class=\"line\">  <span class=\"string\">\"parser\"</span>: <span class=\"string\">\"typescript\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"참고-문서\"><a href=\"#참고-문서\" class=\"headerlink\" title=\"참고 문서\"></a>참고 문서</h1><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3R5cGVzY3JpcHQtZXNsaW50L3R5cGVzY3JpcHQtZXNsaW50L2Jsb2IvbWFzdGVyL2RvY3MvZ2V0dGluZy1zdGFydGVkL2xpbnRpbmcvUkVBRE1FLm1kI2NvbmZpZ3VyYXRpb24=\" title=\"https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md#configuration\">typescript-eslint/typescript-eslint<i class=\"fa fa-external-link\"></i></span></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckj71affy0006uv5919i98l3e","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afg2000cuv59c2my4nhv"},{"post_id":"ckj71affq0000uv591qks13sk","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afg4000huv59bo8kdtsp"},{"post_id":"ckj71affz0007uv597e868onq","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afg5000kuv599memghbm"},{"post_id":"ckj71afg1000auv591dw786cs","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afg7000puv59bdd3gea6"},{"post_id":"ckj71affu0002uv59g05s7hjt","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afg7000suv591tvt69nb"},{"post_id":"ckj71afg2000buv596bxrbp8k","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afg9000xuv5919a12d66"},{"post_id":"ckj71affx0005uv593nmh46va","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afg90010uv595z720yb6"},{"post_id":"ckj71afg6000ouv59gyxj4jwg","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgb0014uv595ahs23tv"},{"post_id":"ckj71afg7000ruv59eawr5138","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgb0017uv5976wd3bg3"},{"post_id":"ckj71afg3000guv5962700xun","category_id":"ckj71afg5000muv59282wgq20","_id":"ckj71afgc001buv594ertbi3j"},{"post_id":"ckj71afg8000vuv59e5459ku1","category_id":"ckj71afg5000muv59282wgq20","_id":"ckj71afgd001euv59ag3h82gu"},{"post_id":"ckj71afg9000zuv5906eabepq","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afge001iuv599m1l7bs6"},{"post_id":"ckj71afg4000juv5934angtg0","category_id":"ckj71afg5000muv59282wgq20","_id":"ckj71afgf001luv594pxpg40e"},{"post_id":"ckj71afga0013uv590wg04z9k","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgh001puv59cril4ekw"},{"post_id":"ckj71afgb0016uv59dkr9h3se","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgi001suv592k7z2r0p"},{"post_id":"ckj71afgc001auv59bxpn0qe4","category_id":"ckj71afg5000muv59282wgq20","_id":"ckj71afgi001wuv59get1g5x8"},{"post_id":"ckj71afgd001duv59e2r5edpc","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgj001zuv590x3d0hrd"},{"post_id":"ckj71afge001huv590bvubq9r","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgk0023uv591giw2bkn"},{"post_id":"ckj71afge001kuv59f4yy7glk","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgl0026uv59h2y7cq4e"},{"post_id":"ckj71afgf001ouv59abr1ci23","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgm002auv5960iffa85"},{"post_id":"ckj71afgh001ruv59cm3sclmw","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgn002duv5986hn87pm"},{"post_id":"ckj71afgi001vuv59715vah55","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgo002huv594fmu38f7"},{"post_id":"ckj71afgj001yuv59db00eqx2","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgp002kuv595ejae9x5"},{"post_id":"ckj71afgk0022uv59h29y99lg","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgp002ouv59buez1u6r"},{"post_id":"ckj71afgl0025uv59g4t817b0","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgq002ruv592u7i8l6a"},{"post_id":"ckj71afgl0029uv59hkcz29vw","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgr002wuv590majfiv9"},{"post_id":"ckj71afgm002cuv596ngp2jhx","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgs002zuv59b3ov36kx"},{"post_id":"ckj71afgn002guv59fgqdaw45","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgt0033uv59aosb94np"},{"post_id":"ckj71afgo002juv59cj2nbvxv","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgu0036uv595m4rd814"},{"post_id":"ckj71afgq002quv59gn9z5vd4","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgy003auv590ectfy5c"},{"post_id":"ckj71afgr002vuv594qhyau6e","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afgz003euv59508haf4l"},{"post_id":"ckj71afgs002yuv5996eh2n95","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afh0003huv59a4855eww"},{"post_id":"ckj71afgp002nuv593be3ctsn","category_id":"ckj71afgq002suv593vek6076","_id":"ckj71afh1003muv596gfibg69"},{"post_id":"ckj71afgt0032uv5940lw86tf","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afh2003puv591fu31n2a"},{"post_id":"ckj71afgy003duv59gvegg8sq","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afh3003tuv59gqegf5p7"},{"post_id":"ckj71afh0003guv595eae4syb","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afh4003wuv59bv4qhpme"},{"post_id":"ckj71afgu0035uv59cnyc0csl","category_id":"ckj71afgy003buv59abep6xcm","_id":"ckj71afh5003zuv590nmu4w8c"},{"post_id":"ckj71afh0003kuv590n4f00s0","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afh60042uv59bgalbb8a"},{"post_id":"ckj71afh1003ouv59bn3sghss","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afh60045uv5972q0cscz"},{"post_id":"ckj71afgx0039uv59aywcb5yn","category_id":"ckj71afgy003buv59abep6xcm","_id":"ckj71afh70048uv591flgcwhq"},{"post_id":"ckj71afh2003suv593j6aa2lj","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afh8004buv598uayc5wk"},{"post_id":"ckj71afh4003vuv59d16db7pc","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afh9004euv5918bvfgda"},{"post_id":"ckj71afh5003yuv59gobf8ice","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afh9004huv59f7865aq0"},{"post_id":"ckj71afh50041uv596oj3b2yf","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afha004muv59bw1f1110"},{"post_id":"ckj71afh60044uv5970r3e3nn","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afhb004puv59e2jj9vez"},{"post_id":"ckj71afh70047uv598k9e1ovv","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afhc004uuv594zy25o92"},{"post_id":"ckj71afh8004auv59c6dlhkdg","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afhd004xuv59bafqgiw3"},{"post_id":"ckj71afh9004guv5984qb9yit","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afhe0050uv59g7f5drkf"},{"post_id":"ckj71afha004ouv59bcwwbq84","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afhe0053uv59c38ffn1a"},{"post_id":"ckj71afh8004duv59g91x3svs","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhf0056uv5944thdilz"},{"post_id":"ckj71afhb004ruv5993de2lw6","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afhg0059uv595qe2g9t0"},{"post_id":"ckj71afhc004wuv59akmpfc0c","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhg005cuv59fgxkhvue"},{"post_id":"ckj71afha004luv592oyr1qn0","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhh005fuv59bai30tws"},{"post_id":"ckj71afhd004zuv596682en3t","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhh005iuv59c06d7537"},{"post_id":"ckj71afhe0052uv598hgc3vl5","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhi005luv59be5j02jk"},{"post_id":"ckj71afhe0055uv590g43gplm","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afhj005ouv596dfyemhj"},{"post_id":"ckj71afhf0058uv5919t7hl9l","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhj005ruv59cdh594xh"},{"post_id":"ckj71afhg005buv599cyab70u","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhk005uuv590bq05s4q"},{"post_id":"ckj71afhg005euv59fisyg0uw","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhk005xuv5980vte0qn"},{"post_id":"ckj71afhh005huv59c9bj4whv","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhl0060uv59dj5sfpl7"},{"post_id":"ckj71afhi005kuv597xtwdky2","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhm0063uv592rog61tl"},{"post_id":"ckj71afhi005nuv597vigghki","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhm0066uv59bnlsba5n"},{"post_id":"ckj71afhj005quv59bupef129","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhn0069uv5941zs1j7r"},{"post_id":"ckj71afhk005tuv59fik52h03","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afhn006cuv59dv8p3q1s"},{"post_id":"ckj71afhk005wuv5927d9ervu","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afho006fuv59em254w2u"},{"post_id":"ckj71afhl005zuv598yvj4gh2","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afho006iuv59hyud93pu"},{"post_id":"ckj71afhl0062uv59b020hho7","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhp006luv59aq5g5bdr"},{"post_id":"ckj71afhm0065uv596lj7ggw7","category_id":"ckj71afgq002suv593vek6076","_id":"ckj71afhq006ouv596ssm24us"},{"post_id":"ckj71afhm0068uv59ep3s4wcf","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhq006ruv59194a0kgb"},{"post_id":"ckj71afhn006buv591g4kha9h","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhr006wuv59gqfn5wp1"},{"post_id":"ckj71afhn006euv59hvju4lwa","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhs006zuv594xuvebyc"},{"post_id":"ckj71afho006huv5977jdgqny","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afhs0072uv59h3rs3p2q"},{"post_id":"ckj71afhp006kuv599y9m5pco","category_id":"ckj71affw0003uv59699qez1q","_id":"ckj71afht0076uv59cx10771q"},{"post_id":"ckj71afhr006vuv59cpskflqc","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhu0079uv5914jd1g8v"},{"post_id":"ckj71afhr006yuv59ewl050gl","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhv007cuv5959leby5j"},{"post_id":"ckj71afhp006nuv59ccqdeddc","category_id":"ckj71afhq006suv590xgl0cdd","_id":"ckj71afhw007fuv5928cqe5t5"},{"post_id":"ckj71afhs0071uv5964r00bwm","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhw007iuv59ha5wgk44"},{"post_id":"ckj71afht0075uv5956uy487v","category_id":"ckj71afh9004iuv599305f34l","_id":"ckj71afhx007muv590vz79xdt"},{"post_id":"ckj71afht0078uv59bm3qe97i","category_id":"ckj71afgy003buv59abep6xcm","_id":"ckj71afhx007puv592nba1eaf"},{"post_id":"ckj71afhu007buv59auu58hep","category_id":"ckj71afhq006suv590xgl0cdd","_id":"ckj71afhy007suv59azfua5me"},{"post_id":"ckj71afhv007euv59eay0hn49","category_id":"ckj71afgy003buv59abep6xcm","_id":"ckj71afhy007uuv59h19vhrlf"},{"post_id":"ckj71afhw007huv596eb9fbo2","category_id":"ckj71afgq002suv593vek6076","_id":"ckj71afhy007wuv5984z6735s"},{"post_id":"ckj71afhx007luv59avouaxf0","category_id":"ckj71afhy007quv5905udbvfa","_id":"ckj71afhy007zuv59hm5sehj7"}],"PostTag":[{"post_id":"ckj71afg1000auv591dw786cs","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afg3000fuv59b9l3b066"},{"post_id":"ckj71afg1000auv591dw786cs","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afg4000iuv595w55g4fj"},{"post_id":"ckj71affq0000uv591qks13sk","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afg6000nuv59f0dp3djq"},{"post_id":"ckj71affq0000uv591qks13sk","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afg7000quv590bnrcpk5"},{"post_id":"ckj71afg2000buv596bxrbp8k","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afg8000uuv59be3ve9oq"},{"post_id":"ckj71afg2000buv596bxrbp8k","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afg9000yuv59d7odfrwk"},{"post_id":"ckj71afg6000ouv59gyxj4jwg","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afga0012uv596xhf1lw6"},{"post_id":"ckj71afg6000ouv59gyxj4jwg","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afgb0015uv59g7bth8uo"},{"post_id":"ckj71affu0002uv59g05s7hjt","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afgc0019uv596utiboyq"},{"post_id":"ckj71affu0002uv59g05s7hjt","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afgc001cuv593p1hakjf"},{"post_id":"ckj71afg7000ruv59eawr5138","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afgd001guv59egzcf6td"},{"post_id":"ckj71afg7000ruv59eawr5138","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afge001juv59bwhrc5nm"},{"post_id":"ckj71afg9000zuv5906eabepq","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afgf001nuv5907sigblo"},{"post_id":"ckj71afg9000zuv5906eabepq","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afgh001quv59dn035c2a"},{"post_id":"ckj71afga0013uv590wg04z9k","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afgi001uuv595vfobk06"},{"post_id":"ckj71afga0013uv590wg04z9k","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afgj001xuv59480f4jpz"},{"post_id":"ckj71affx0005uv593nmh46va","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afgj0020uv59enf1eucd"},{"post_id":"ckj71affx0005uv593nmh46va","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afgk0024uv59h29o61cg"},{"post_id":"ckj71afgb0016uv59dkr9h3se","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afgl0027uv590utvb0jk"},{"post_id":"ckj71afgb0016uv59dkr9h3se","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afgm002buv592eng2zje"},{"post_id":"ckj71affy0006uv5919i98l3e","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afgn002euv59h8hu5mmm"},{"post_id":"ckj71affy0006uv5919i98l3e","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afgo002iuv596pipgson"},{"post_id":"ckj71afgd001duv59e2r5edpc","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afgp002luv591kfu0zun"},{"post_id":"ckj71afgd001duv59e2r5edpc","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afgq002puv592aty2ww9"},{"post_id":"ckj71afge001huv590bvubq9r","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afgr002tuv598hlq7ven"},{"post_id":"ckj71afge001huv590bvubq9r","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afgs002xuv591f6shm2e"},{"post_id":"ckj71affz0007uv597e868onq","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afgs0030uv595ugr3ydt"},{"post_id":"ckj71affz0007uv597e868onq","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afgu0034uv592k1ed8kt"},{"post_id":"ckj71afge001kuv59f4yy7glk","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afgu0037uv598uon3uui"},{"post_id":"ckj71afge001kuv59f4yy7glk","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afgy003cuv59bensawhr"},{"post_id":"ckj71afgf001ouv59abr1ci23","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afgz003fuv599xddae6p"},{"post_id":"ckj71afgf001ouv59abr1ci23","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afh0003juv595vj8exdm"},{"post_id":"ckj71afgh001ruv59cm3sclmw","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afh1003nuv59e0px9jdc"},{"post_id":"ckj71afgh001ruv59cm3sclmw","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afh2003ruv59hrs7d1ow"},{"post_id":"ckj71afgi001vuv59715vah55","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afh4003uuv59at20heri"},{"post_id":"ckj71afgi001vuv59715vah55","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afh5003xuv59163kg81c"},{"post_id":"ckj71afg3000guv5962700xun","tag_id":"ckj71afgf001muv59691wbx1m","_id":"ckj71afh50040uv592a4m6dr3"},{"post_id":"ckj71afg3000guv5962700xun","tag_id":"ckj71afgi001tuv59f7si118g","_id":"ckj71afh60043uv59e1903jg6"},{"post_id":"ckj71afgj001yuv59db00eqx2","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afh70046uv59an1o3v7n"},{"post_id":"ckj71afgj001yuv59db00eqx2","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afh70049uv59556821pb"},{"post_id":"ckj71afgk0022uv59h29y99lg","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afh8004cuv59aofneqv2"},{"post_id":"ckj71afgk0022uv59h29y99lg","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afh9004fuv597oas5nps"},{"post_id":"ckj71afgl0025uv59g4t817b0","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afha004kuv591ivc4zf6"},{"post_id":"ckj71afgl0025uv59g4t817b0","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afha004nuv5968hthm16"},{"post_id":"ckj71afgl0029uv59hkcz29vw","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhb004quv593dla4n8f"},{"post_id":"ckj71afgl0029uv59hkcz29vw","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhc004vuv591m7b7sf8"},{"post_id":"ckj71afg4000juv5934angtg0","tag_id":"ckj71afgf001muv59691wbx1m","_id":"ckj71afhd004yuv595if9fb8t"},{"post_id":"ckj71afg4000juv5934angtg0","tag_id":"ckj71afgi001tuv59f7si118g","_id":"ckj71afhe0051uv59hlj99fwe"},{"post_id":"ckj71afgm002cuv596ngp2jhx","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhe0054uv59a5xbekxp"},{"post_id":"ckj71afgm002cuv596ngp2jhx","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhf0057uv59dgj5afhx"},{"post_id":"ckj71afgn002guv59fgqdaw45","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhg005auv593hw8dgkh"},{"post_id":"ckj71afgn002guv59fgqdaw45","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhg005duv59hp5thldn"},{"post_id":"ckj71afgo002juv59cj2nbvxv","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhh005guv594rr867qu"},{"post_id":"ckj71afgo002juv59cj2nbvxv","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhi005juv59f5a28idg"},{"post_id":"ckj71afg8000vuv59e5459ku1","tag_id":"ckj71afgf001muv59691wbx1m","_id":"ckj71afhi005muv59fezp816l"},{"post_id":"ckj71afg8000vuv59e5459ku1","tag_id":"ckj71afgi001tuv59f7si118g","_id":"ckj71afhj005puv5983552dh7"},{"post_id":"ckj71afgq002quv59gn9z5vd4","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhj005suv59brt1do0z"},{"post_id":"ckj71afgq002quv59gn9z5vd4","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhk005vuv59dg0u72y6"},{"post_id":"ckj71afgr002vuv594qhyau6e","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhl005yuv59f9hccnde"},{"post_id":"ckj71afgr002vuv594qhyau6e","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhl0061uv59ehao5qq9"},{"post_id":"ckj71afgs002yuv5996eh2n95","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhm0064uv59g8vx2gnb"},{"post_id":"ckj71afgs002yuv5996eh2n95","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhm0067uv593ae7374c"},{"post_id":"ckj71afgt0032uv5940lw86tf","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhn006auv593q6tf385"},{"post_id":"ckj71afgt0032uv5940lw86tf","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhn006duv59h5w8e7qr"},{"post_id":"ckj71afgc001auv59bxpn0qe4","tag_id":"ckj71afgf001muv59691wbx1m","_id":"ckj71afho006guv598s889dk1"},{"post_id":"ckj71afgc001auv59bxpn0qe4","tag_id":"ckj71afgi001tuv59f7si118g","_id":"ckj71afhp006juv5901j6c10p"},{"post_id":"ckj71afgy003duv59gvegg8sq","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhp006muv5936t396p1"},{"post_id":"ckj71afgy003duv59gvegg8sq","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhq006puv59hana65du"},{"post_id":"ckj71afgp002nuv593be3ctsn","tag_id":"ckj71afgu0038uv597jzjazte","_id":"ckj71afhr006uuv59f8g2922x"},{"post_id":"ckj71afh0003guv595eae4syb","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhr006xuv5999zh13yn"},{"post_id":"ckj71afh0003guv595eae4syb","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhs0070uv592gbc35a3"},{"post_id":"ckj71afh0003kuv590n4f00s0","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afht0074uv597cdb8b89"},{"post_id":"ckj71afh0003kuv590n4f00s0","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afht0077uv59c4109cw2"},{"post_id":"ckj71afgu0035uv59cnyc0csl","tag_id":"ckj71afh0003iuv59eryg60v0","_id":"ckj71afhu007auv593rplbt8n"},{"post_id":"ckj71afh1003ouv59bn3sghss","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhv007duv5958pq25y0"},{"post_id":"ckj71afh1003ouv59bn3sghss","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhw007guv598oiahrfi"},{"post_id":"ckj71afh2003suv593j6aa2lj","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhw007kuv590sx55pi2"},{"post_id":"ckj71afh2003suv593j6aa2lj","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhx007nuv59hamg329v"},{"post_id":"ckj71afgx0039uv59aywcb5yn","tag_id":"ckj71afh0003iuv59eryg60v0","_id":"ckj71afhy007ruv59euj8bodw"},{"post_id":"ckj71afgx0039uv59aywcb5yn","tag_id":"ckj71afgi001tuv59f7si118g","_id":"ckj71afhy007tuv593qlo9ljo"},{"post_id":"ckj71afh4003vuv59d16db7pc","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhy007vuv59de541x1m"},{"post_id":"ckj71afh4003vuv59d16db7pc","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhy007xuv594g7z34q8"},{"post_id":"ckj71afh5003yuv59gobf8ice","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhy007yuv59hzenbwtw"},{"post_id":"ckj71afh5003yuv59gobf8ice","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhy0080uv593p4shs9e"},{"post_id":"ckj71afh50041uv596oj3b2yf","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhy0081uv59ap75dl1o"},{"post_id":"ckj71afh50041uv596oj3b2yf","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhy0082uv59cnn978e1"},{"post_id":"ckj71afh60044uv5970r3e3nn","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhy0083uv59aq2ueipl"},{"post_id":"ckj71afh60044uv5970r3e3nn","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhz0084uv59afqza9sz"},{"post_id":"ckj71afh70047uv598k9e1ovv","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhz0085uv59d80n1nem"},{"post_id":"ckj71afh70047uv598k9e1ovv","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhz0086uv5932z531do"},{"post_id":"ckj71afh8004auv59c6dlhkdg","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhz0087uv59e8qcg2ii"},{"post_id":"ckj71afh8004auv59c6dlhkdg","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhz0088uv59hsb3dzzn"},{"post_id":"ckj71afh9004guv5984qb9yit","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhz0089uv595shmb9zh"},{"post_id":"ckj71afh9004guv5984qb9yit","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhz008auv599m3x06qh"},{"post_id":"ckj71afha004ouv59bcwwbq84","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhz008buv59bt00ex9f"},{"post_id":"ckj71afha004ouv59bcwwbq84","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhz008cuv599hw5gc5s"},{"post_id":"ckj71afh8004duv59g91x3svs","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afhz008duv5972qhf32f"},{"post_id":"ckj71afh8004duv59g91x3svs","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhz008euv5930asd1xw"},{"post_id":"ckj71afhb004ruv5993de2lw6","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhz008fuv596yzk4kzj"},{"post_id":"ckj71afhb004ruv5993de2lw6","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhz008guv599o6c4efw"},{"post_id":"ckj71afhc004wuv59akmpfc0c","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afhz008huv59bop1c8w1"},{"post_id":"ckj71afhc004wuv59akmpfc0c","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhz008iuv593wh42d1b"},{"post_id":"ckj71afha004luv592oyr1qn0","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afhz008juv598c5t3eeu"},{"post_id":"ckj71afha004luv592oyr1qn0","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhz008kuv592q90a4k1"},{"post_id":"ckj71afhd004zuv596682en3t","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afhz008luv594kxc9kb4"},{"post_id":"ckj71afhd004zuv596682en3t","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhz008muv590rjk0m4g"},{"post_id":"ckj71afhe0052uv598hgc3vl5","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afhz008nuv5987e77yiy"},{"post_id":"ckj71afhe0052uv598hgc3vl5","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhz008ouv597vn372j2"},{"post_id":"ckj71afhe0055uv590g43gplm","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afhz008puv59ekjpar3p"},{"post_id":"ckj71afhe0055uv590g43gplm","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afhz008quv5941dbfsy0"},{"post_id":"ckj71afhf0058uv5919t7hl9l","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afhz008ruv592zc9byfg"},{"post_id":"ckj71afhf0058uv5919t7hl9l","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi0008suv599nyp853q"},{"post_id":"ckj71afhg005buv599cyab70u","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi0008tuv591h9x0ycu"},{"post_id":"ckj71afhg005buv599cyab70u","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi0008uuv5919qs41oa"},{"post_id":"ckj71afhg005euv59fisyg0uw","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi0008vuv59duii1nno"},{"post_id":"ckj71afhg005euv59fisyg0uw","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi0008wuv591yw8cwlj"},{"post_id":"ckj71afhh005huv59c9bj4whv","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi0008xuv59anpg13ro"},{"post_id":"ckj71afhh005huv59c9bj4whv","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi0008yuv590eahbs74"},{"post_id":"ckj71afhi005kuv597xtwdky2","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi0008zuv59603lgldt"},{"post_id":"ckj71afhi005kuv597xtwdky2","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi00090uv592zvl1blb"},{"post_id":"ckj71afhi005nuv597vigghki","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi00091uv59d8z5hei1"},{"post_id":"ckj71afhi005nuv597vigghki","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi00092uv5912d71whu"},{"post_id":"ckj71afhj005quv59bupef129","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi00093uv59dtu5clzy"},{"post_id":"ckj71afhj005quv59bupef129","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi00094uv592mmcaj5a"},{"post_id":"ckj71afhk005tuv59fik52h03","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afi00095uv59bugofha0"},{"post_id":"ckj71afhk005tuv59fik52h03","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi00096uv597pdr0qvi"},{"post_id":"ckj71afhk005wuv5927d9ervu","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afi10097uv595vm1eqjy"},{"post_id":"ckj71afhk005wuv5927d9ervu","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi10098uv59gtg9fii9"},{"post_id":"ckj71afhl005zuv598yvj4gh2","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afi10099uv5985a75550"},{"post_id":"ckj71afhl005zuv598yvj4gh2","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi1009auv59e2zvei6h"},{"post_id":"ckj71afhl0062uv59b020hho7","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi1009buv59eqgig6wm"},{"post_id":"ckj71afhl0062uv59b020hho7","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi1009cuv5963av4j3x"},{"post_id":"ckj71afhm0065uv596lj7ggw7","tag_id":"ckj71afgu0038uv597jzjazte","_id":"ckj71afi1009duv59004u2rp0"},{"post_id":"ckj71afhm0068uv59ep3s4wcf","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi1009euv593dbr3kho"},{"post_id":"ckj71afhm0068uv59ep3s4wcf","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi2009fuv59dnz11gpl"},{"post_id":"ckj71afhn006buv591g4kha9h","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi2009guv593hcc6oot"},{"post_id":"ckj71afhn006buv591g4kha9h","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi2009huv591ikx1xln"},{"post_id":"ckj71afhn006euv59hvju4lwa","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi2009iuv595gzw8a0o"},{"post_id":"ckj71afhn006euv59hvju4lwa","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi2009juv59bael5mht"},{"post_id":"ckj71afho006huv5977jdgqny","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afi2009kuv59asee1inv"},{"post_id":"ckj71afho006huv5977jdgqny","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi2009luv596igndp1y"},{"post_id":"ckj71afhp006kuv599y9m5pco","tag_id":"ckj71affx0004uv59e47o8uuw","_id":"ckj71afi2009muv597or95q87"},{"post_id":"ckj71afhp006kuv599y9m5pco","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi3009nuv59316whn0z"},{"post_id":"ckj71afhq006quv59bwb33r3o","tag_id":"ckj71afgu0038uv597jzjazte","_id":"ckj71afi3009ouv590jwohver"},{"post_id":"ckj71afhr006vuv59cpskflqc","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi3009puv5949c58qp9"},{"post_id":"ckj71afhr006vuv59cpskflqc","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi3009quv599a1qdzoa"},{"post_id":"ckj71afhp006nuv59ccqdeddc","tag_id":"ckj71afhq006tuv59hum13cz2","_id":"ckj71afi3009ruv593hm1e3bw"},{"post_id":"ckj71afhp006nuv59ccqdeddc","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi3009suv594iej4gck"},{"post_id":"ckj71afhs0071uv5964r00bwm","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi3009tuv594cw2ewo4"},{"post_id":"ckj71afhs0071uv5964r00bwm","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi3009uuv59fkimbd3e"},{"post_id":"ckj71afht0075uv5956uy487v","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi3009vuv59b12h3bx7"},{"post_id":"ckj71afht0075uv5956uy487v","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi3009wuv590rkb6yly"},{"post_id":"ckj71afht0078uv59bm3qe97i","tag_id":"ckj71afh0003iuv59eryg60v0","_id":"ckj71afi3009xuv59aqql3py0"},{"post_id":"ckj71afhr006yuv59ewl050gl","tag_id":"ckj71afha004juv595i7c8rfh","_id":"ckj71afi3009yuv59bk2355ww"},{"post_id":"ckj71afhr006yuv59ewl050gl","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi3009zuv591ei48ift"},{"post_id":"ckj71afhr006yuv59ewl050gl","tag_id":"ckj71afhs0073uv59hxb1gncd","_id":"ckj71afi300a0uv59c7lcctau"},{"post_id":"ckj71afhu007buv59auu58hep","tag_id":"ckj71afhq006tuv59hum13cz2","_id":"ckj71afi300a1uv59ceml1eq3"},{"post_id":"ckj71afhu007buv59auu58hep","tag_id":"ckj71affz0009uv5969brcah0","_id":"ckj71afi300a2uv59dfxb43hv"},{"post_id":"ckj71afhw007huv596eb9fbo2","tag_id":"ckj71afgu0038uv597jzjazte","_id":"ckj71afi300a3uv5973wt0756"},{"post_id":"ckj71afhv007euv59eay0hn49","tag_id":"ckj71afh0003iuv59eryg60v0","_id":"ckj71afi300a4uv596cst8w1m"},{"post_id":"ckj71afhv007euv59eay0hn49","tag_id":"ckj71afhw007juv59bzy9dl20","_id":"ckj71afi300a5uv5966z6dgtp"}],"Tag":[{"name":"boj","_id":"ckj71affx0004uv59e47o8uuw"},{"name":"algorithm","_id":"ckj71affz0009uv5969brcah0"},{"name":"java","_id":"ckj71afgf001muv59691wbx1m"},{"name":"study","_id":"ckj71afgi001tuv59f7si118g"},{"name":"javascript","_id":"ckj71afgu0038uv597jzjazte"},{"name":"react","_id":"ckj71afh0003iuv59eryg60v0"},{"name":"programmers","_id":"ckj71afha004juv595i7c8rfh"},{"name":"Leetcode","_id":"ckj71afhq006tuv59hum13cz2"},{"name":"greedy","_id":"ckj71afhs0073uv59hxb1gncd"},{"name":"next","_id":"ckj71afhw007juv59bzy9dl20"}]}}